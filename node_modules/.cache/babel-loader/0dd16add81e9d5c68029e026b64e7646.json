{"ast":null,"code":"ace.define(\"ace/mode/mediawiki_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var MediaWikiHighlightRules = function MediaWikiHighlightRules() {\n    this.$rules = {\n      start: [{\n        include: \"#switch\"\n      }, {\n        include: \"#redirect\"\n      }, {\n        include: \"#variable\"\n      }, {\n        include: \"#comment\"\n      }, {\n        include: \"#entity\"\n      }, {\n        include: \"#emphasis\"\n      }, {\n        include: \"#tag\"\n      }, {\n        include: \"#table\"\n      }, {\n        include: \"#hr\"\n      }, {\n        include: \"#heading\"\n      }, {\n        include: \"#link\"\n      }, {\n        include: \"#list\"\n      }, {\n        include: \"#template\"\n      }],\n      \"#hr\": [{\n        token: \"markup.bold\",\n        regex: /^[-]{4,}/\n      }],\n      \"#switch\": [{\n        token: \"constant.language\",\n        regex: /(__NOTOC__|__FORCETOC__|__TOC__|__NOEDITSECTION__|__NEWSECTIONLINK__|__NONEWSECTIONLINK__|__NOWYSIWYG__|__NOGALLERY__|__HIDDENCAT__|__EXPECTUNUSEDCATEGORY__|__NOCONTENTCONVERT__|__NOCC__|__NOTITLECONVERT__|__NOTC__|__START__|__END__|__INDEX__|__NOINDEX__|__STATICREDIRECT__|__NOGLOBAL__|__DISAMBIG__)/\n      }],\n      \"#redirect\": [{\n        token: [\"keyword.control.redirect\", \"meta.keyword.control\"],\n        regex: /(^#REDIRECT|^#redirect|^#Redirect)(\\s+)/\n      }],\n      \"#variable\": [{\n        token: \"storage.type.variable\",\n        regex: /{{{/,\n        push: [{\n          token: \"storage.type.variable\",\n          regex: /}}}/,\n          next: \"pop\"\n        }, {\n          token: [\"text\", \"variable.other\", \"text\", \"keyword.operator\"],\n          regex: /(\\s*)(\\w+)(\\s*)((?:\\|)?)/\n        }, {\n          defaultToken: \"storage.type.variable\"\n        }]\n      }],\n      \"#entity\": [{\n        token: \"constant.character.entity\",\n        regex: /&\\w+;/\n      }],\n      \"#list\": [{\n        token: \"markup.bold\",\n        regex: /^[#*;:]+/,\n        push: [{\n          token: \"markup.list\",\n          regex: /$/,\n          next: \"pop\"\n        }, {\n          include: \"$self\"\n        }, {\n          defaultToken: \"markup.list\"\n        }]\n      }],\n      \"#template\": [{\n        token: [\"storage.type.function\", \"meta.template\", \"entity.name.function\", \"meta.template\"],\n        regex: /({{)(\\s*)([#\\w: ]+)(\\s*)/,\n        push: [{\n          token: \"storage.type.function\",\n          regex: /}}/,\n          next: \"pop\"\n        }, {\n          token: [\"storage\", \"meta.structure.dictionary\", \"support.type.property-name\", \"meta.structure.dictionary\", \"punctuation.separator.dictionary.key-value\", \"meta.structure.dictionary\", \"meta.structure.dictionary.value\"],\n          regex: /(\\|)(\\s*)([a-zA-Z-]*)(\\s*)(=)(\\s*)([^|}]*)/,\n          push: [{\n            token: \"meta.structure.dictionary\",\n            regex: /(?=}}|[|])/,\n            next: \"pop\"\n          }, {\n            defaultToken: \"meta.structure.dictionary\"\n          }]\n        }, {\n          token: [\"storage\", \"meta.template.value\"],\n          regex: /(\\|)(.*?)/,\n          push: [{\n            token: [],\n            regex: /(?=}}|[|])/,\n            next: \"pop\"\n          }, {\n            include: \"$self\"\n          }, {\n            defaultToken: \"meta.template.value\"\n          }]\n        }, {\n          defaultToken: \"meta.template\"\n        }]\n      }],\n      \"#link\": [{\n        token: [\"punctuation.definition.tag.begin\", \"meta.tag.link.internal\", \"entity.name.tag\", \"meta.tag.link.internal\", \"string.other.link.title\", \"meta.tag.link.internal\", \"punctuation.definition.tag\"],\n        regex: /(\\[\\[)(\\s*)((?:Category|Wikipedia)?)(:?)([^\\]\\]\\|]+)(\\s*)((?:\\|)*)/,\n        push: [{\n          token: \"punctuation.definition.tag.end\",\n          regex: /\\]\\]/,\n          next: \"pop\"\n        }, {\n          include: \"$self\"\n        }, {\n          defaultToken: \"meta.tag.link.internal\"\n        }]\n      }, {\n        token: [\"punctuation.definition.tag.begin\", \"meta.tag.link.external\", \"meta.tag.link.external\", \"string.unquoted\", \"punctuation.definition.tag.end\"],\n        regex: /(\\[)(.*?)([\\s]+)(.*?)(\\])/\n      }],\n      \"#comment\": [{\n        token: \"punctuation.definition.comment.html\",\n        regex: /<!--/,\n        push: [{\n          token: \"punctuation.definition.comment.html\",\n          regex: /-->/,\n          next: \"pop\"\n        }, {\n          defaultToken: \"comment.block.html\"\n        }]\n      }],\n      \"#emphasis\": [{\n        token: [\"punctuation.definition.tag.begin\", \"markup.italic.bold\", \"punctuation.definition.tag.end\"],\n        regex: /(''''')(?!')(.*?)('''''|$)/\n      }, {\n        token: [\"punctuation.definition.tag.begin\", \"markup.bold\", \"punctuation.definition.tag.end\"],\n        regex: /(''')(?!')(.*?)('''|$)/\n      }, {\n        token: [\"punctuation.definition.tag.begin\", \"markup.italic\", \"punctuation.definition.tag.end\"],\n        regex: /('')(?!')(.*?)(''|$)/\n      }],\n      \"#heading\": [{\n        token: [\"punctuation.definition.heading\", \"entity.name.section\", \"punctuation.definition.heading\"],\n        regex: /(={1,6})(.+?)(\\1)(?!=)/\n      }],\n      \"#tag\": [{\n        token: [\"punctuation.definition.tag.begin\", \"entity.name.tag\", \"meta.tag.block.ref\", \"punctuation.definition.tag.end\"],\n        regex: /(<)(ref)((?:\\s+.*?)?)(>)/,\n        caseInsensitive: true,\n        push: [{\n          token: [\"punctuation.definition.tag.begin\", \"entity.name.tag\", \"meta.tag.block.ref\", \"punctuation.definition.tag.end\"],\n          regex: /(<\\/)(ref)(\\s*)(>)/,\n          caseInsensitive: true,\n          next: \"pop\"\n        }, {\n          include: \"$self\"\n        }, {\n          defaultToken: \"meta.tag.block.ref\"\n        }]\n      }, {\n        token: [\"punctuation.definition.tag.begin\", \"entity.name.tag\", \"meta.tag.block.nowiki\", \"punctuation.definition.tag.end\"],\n        regex: /(<)(nowiki)((?:\\s+.*?)?)(>)/,\n        caseInsensitive: true,\n        push: [{\n          token: [\"punctuation.definition.tag.begin\", \"entity.name.tag\", \"meta.tag.block.nowiki\", \"punctuation.definition.tag.end\"],\n          regex: /(<\\/)(nowiki)(\\s*)(>)/,\n          caseInsensitive: true,\n          next: \"pop\"\n        }, {\n          defaultToken: \"meta.tag.block.nowiki\"\n        }]\n      }, {\n        token: [\"punctuation.definition.tag.begin\", \"entity.name.tag\"],\n        regex: /(<\\/?)(noinclude|includeonly|onlyinclude)(?=\\W)/,\n        caseInsensitive: true,\n        push: [{\n          token: [\"invalid.illegal\", \"punctuation.definition.tag.end\"],\n          regex: /((?:\\/)?)(>)/,\n          next: \"pop\"\n        }, {\n          include: \"#attribute\"\n        }, {\n          defaultToken: \"meta.tag.block.any\"\n        }]\n      }, {\n        token: [\"punctuation.definition.tag.begin\", \"entity.name.tag\"],\n        regex: /(<)(br|wbr|hr|meta|link)(?=\\W)/,\n        caseInsensitive: true,\n        push: [{\n          token: \"punctuation.definition.tag.end\",\n          regex: /\\/?>/,\n          next: \"pop\"\n        }, {\n          include: \"#attribute\"\n        }, {\n          defaultToken: \"meta.tag.other\"\n        }]\n      }, {\n        token: [\"punctuation.definition.tag.begin\", \"entity.name.tag\"],\n        regex: /(<\\/?)(div|center|span|h1|h2|h3|h4|h5|h6|bdo|em|strong|cite|dfn|code|samp|kbd|var|abbr|blockquote|q|sub|sup|p|pre|ins|del|ul|ol|li|dl|dd|dt|table|caption|thead|tfoot|tbody|colgroup|col|tr|td|th|a|img|video|source|track|tt|b|i|big|small|strike|s|u|font|ruby|rb|rp|rt|rtc|math|figure|figcaption|bdi|data|time|mark|html)(?=\\W)/,\n        caseInsensitive: true,\n        push: [{\n          token: [\"invalid.illegal\", \"punctuation.definition.tag.end\"],\n          regex: /((?:\\/)?)(>)/,\n          next: \"pop\"\n        }, {\n          include: \"#attribute\"\n        }, {\n          defaultToken: \"meta.tag.block\"\n        }]\n      }, {\n        token: [\"punctuation.definition.tag.begin\", \"invalid.illegal\"],\n        regex: /(<\\/)(br|wbr|hr|meta|link)(?=\\W)/,\n        caseInsensitive: true,\n        push: [{\n          token: \"punctuation.definition.tag.end\",\n          regex: /\\/?>/,\n          next: \"pop\"\n        }, {\n          include: \"#attribute\"\n        }, {\n          defaultToken: \"meta.tag.other\"\n        }]\n      }],\n      \"#caption\": [{\n        token: [\"meta.tag.block.table-caption\", \"punctuation.definition.tag.begin\"],\n        regex: /^(\\s*)(\\|\\+)/,\n        push: [{\n          token: \"meta.tag.block.table-caption\",\n          regex: /$/,\n          next: \"pop\"\n        }, {\n          defaultToken: \"meta.tag.block.table-caption\"\n        }]\n      }],\n      \"#tr\": [{\n        token: [\"meta.tag.block.tr\", \"punctuation.definition.tag.begin\", \"meta.tag.block.tr\", \"invalid.illegal\"],\n        regex: /^(\\s*)(\\|\\-)([\\s]*)(.*)/\n      }],\n      \"#th\": [{\n        token: [\"meta.tag.block.th.heading\", \"punctuation.definition.tag.begin\", \"meta.tag.block.th.heading\", \"punctuation.definition.tag\", \"markup.bold\"],\n        regex: /^(\\s*)(!)(?:(.*?)(\\|))?(.*?)(?=!!|$)/,\n        push: [{\n          token: \"meta.tag.block.th.heading\",\n          regex: /$/,\n          next: \"pop\"\n        }, {\n          token: [\"punctuation.definition.tag.begin\", \"meta.tag.block.th.inline\", \"punctuation.definition.tag\", \"markup.bold\"],\n          regex: /(!!)(?:(.*?)(\\|))?(.*?)(?=!!|$)/\n        }, {\n          include: \"$self\"\n        }, {\n          defaultToken: \"meta.tag.block.th.heading\"\n        }]\n      }],\n      \"#td\": [{\n        token: [\"meta.tag.block.td\", \"punctuation.definition.tag.begin\"],\n        regex: /^(\\s*)(\\|)/,\n        push: [{\n          token: \"meta.tag.block.td\",\n          regex: /$/,\n          next: \"pop\"\n        }, {\n          include: \"$self\"\n        }, {\n          defaultToken: \"meta.tag.block.td\"\n        }]\n      }],\n      \"#table\": [{\n        patterns: [{\n          name: \"meta.tag.block.table\",\n          begin: \"^\\\\s*({\\\\|)(.*?)$\",\n          end: \"^\\\\s*\\\\|}\",\n          beginCaptures: {\n            1: {\n              name: \"punctuation.definition.tag.begin\"\n            },\n            2: {\n              patterns: [{\n                include: \"#attribute\"\n              }]\n            },\n            3: {\n              name: \"invalid.illegal\"\n            }\n          },\n          endCaptures: {\n            0: {\n              name: \"punctuation.definition.tag.end\"\n            }\n          },\n          patterns: [{\n            include: \"#comment\"\n          }, {\n            include: \"#template\"\n          }, {\n            include: \"#caption\"\n          }, {\n            include: \"#tr\"\n          }, {\n            include: \"#th\"\n          }, {\n            include: \"#td\"\n          }]\n        }],\n        repository: {\n          caption: {\n            name: \"meta.tag.block.table-caption\",\n            begin: \"^\\\\s*(\\\\|\\\\+)\",\n            end: \"$\",\n            beginCaptures: {\n              1: {\n                name: \"punctuation.definition.tag.begin\"\n              }\n            }\n          },\n          tr: {\n            name: \"meta.tag.block.tr\",\n            match: \"^\\\\s*(\\\\|\\\\-)[\\\\s]*(.*)\",\n            captures: {\n              1: {\n                name: \"punctuation.definition.tag.begin\"\n              },\n              2: {\n                name: \"invalid.illegal\"\n              }\n            }\n          },\n          th: {\n            name: \"meta.tag.block.th.heading\",\n            begin: \"^\\\\s*(!)((.*?)(\\\\|))?(.*?)(?=(!!)|$)\",\n            end: \"$\",\n            beginCaptures: {\n              1: {\n                name: \"punctuation.definition.tag.begin\"\n              },\n              3: {\n                patterns: [{\n                  include: \"#attribute\"\n                }]\n              },\n              4: {\n                name: \"punctuation.definition.tag\"\n              },\n              5: {\n                name: \"markup.bold\"\n              }\n            },\n            patterns: [{\n              name: \"meta.tag.block.th.inline\",\n              match: \"(!!)((.*?)(\\\\|))?(.*?)(?=(!!)|$)\",\n              captures: {\n                1: {\n                  name: \"punctuation.definition.tag.begin\"\n                },\n                3: {\n                  patterns: [{\n                    include: \"#attribute\"\n                  }]\n                },\n                4: {\n                  name: \"punctuation.definition.tag\"\n                },\n                5: {\n                  name: \"markup.bold\"\n                }\n              }\n            }, {\n              include: \"$self\"\n            }]\n          },\n          td: {\n            name: \"meta.tag.block.td\",\n            begin: \"^\\\\s*(\\\\|)\",\n            end: \"$\",\n            beginCaptures: {\n              1: {\n                name: \"punctuation.definition.tag.begin\"\n              },\n              2: {\n                patterns: [{\n                  include: \"#attribute\"\n                }]\n              },\n              3: {\n                name: \"punctuation.definition.tag\"\n              }\n            },\n            patterns: [{\n              include: \"$self\"\n            }]\n          }\n        }\n      }],\n      \"#attribute\": [{\n        include: \"#string\"\n      }, {\n        token: \"entity.other.attribute-name\",\n        regex: /\\w+/\n      }],\n      \"#string\": [{\n        token: \"string.quoted.double\",\n        regex: /\\\"/,\n        push: [{\n          token: \"string.quoted.double\",\n          regex: /\\\"/,\n          next: \"pop\"\n        }, {\n          defaultToken: \"string.quoted.double\"\n        }]\n      }, {\n        token: \"string.quoted.single\",\n        regex: /\\'/,\n        push: [{\n          token: \"string.quoted.single\",\n          regex: /\\'/,\n          next: \"pop\"\n        }, {\n          defaultToken: \"string.quoted.single\"\n        }]\n      }],\n      \"#url\": [{\n        token: \"markup.underline.link\",\n        regex: /(?:http(?:s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:\\/?#\\[\\]@!\\$&'\\(\\)\\*\\+,;=.]+/\n      }, {\n        token: \"invalid.illegal\",\n        regex: /.*/\n      }]\n    };\n    this.normalizeRules();\n  };\n\n  MediaWikiHighlightRules.metaData = {\n    name: \"MediaWiki\",\n    scopeName: \"text.html.mediawiki\",\n    fileTypes: [\"mediawiki\", \"wiki\"]\n  };\n  oop.inherits(MediaWikiHighlightRules, TextHighlightRules);\n  exports.MediaWikiHighlightRules = MediaWikiHighlightRules;\n});\nace.define(\"ace/mode/mediawiki\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/mediawiki_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextMode = require(\"./text\").Mode;\n\n  var MediaWikiHighlightRules = require(\"./mediawiki_highlight_rules\").MediaWikiHighlightRules;\n\n  var Mode = function Mode() {\n    this.HighlightRules = MediaWikiHighlightRules;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.type = \"text\";\n    this.blockComment = {\n      start: \"<!--\",\n      end: \"-->\"\n    };\n    this.$id = \"ace/mode/mediawiki\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n\n(function () {\n  ace.require([\"ace/mode/mediawiki\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":null,"metadata":{},"sourceType":"script"}