{"ast":null,"code":"import _classCallCheck from \"E:\\\\Developing Project\\\\Project - Pro\\\\Recent Projects\\\\026 - Daneshgah Magazi (New)\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Developing Project\\\\Project - Pro\\\\Recent Projects\\\\026 - Daneshgah Magazi (New)\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"E:\\\\Developing Project\\\\Project - Pro\\\\Recent Projects\\\\026 - Daneshgah Magazi (New)\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\Developing Project\\\\Project - Pro\\\\Recent Projects\\\\026 - Daneshgah Magazi (New)\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\Developing Project\\\\Project - Pro\\\\Recent Projects\\\\026 - Daneshgah Magazi (New)\\\\src\\\\containers\\\\pages\\\\Pagination.js\";\nimport React from \"react\";\nimport { Colxx } from \"../../components/common/CustomBootstrap\";\nimport { Nav, NavItem, NavLink } from \"reactstrap\";\n\nvar Pagination = /*#__PURE__*/function (_React$Component) {\n  _inherits(Pagination, _React$Component);\n\n  var _super = _createSuper(Pagination);\n\n  function Pagination() {\n    _classCallCheck(this, Pagination);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Pagination, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"onChangePage\",\n    value: function onChangePage(e) {\n      this.props.onChangePage(e);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          _this$props$totalPage = _this$props.totalPage,\n          totalPage = _this$props$totalPage === void 0 ? 0 : _this$props$totalPage,\n          _this$props$currentPa = _this$props.currentPage,\n          currentPage = _this$props$currentPa === void 0 ? 1 : _this$props$currentPa,\n          _this$props$numberLim = _this$props.numberLimit,\n          numberLimit = _this$props$numberLim === void 0 ? 5 : _this$props$numberLim,\n          _this$props$lastIsAct = _this$props.lastIsActive,\n          lastIsActive = _this$props$lastIsAct === void 0 ? true : _this$props$lastIsAct,\n          _this$props$firstIsAc = _this$props.firstIsActive,\n          firstIsActive = _this$props$firstIsAc === void 0 ? true : _this$props$firstIsAc;\n      var startPoint = 1;\n      var endPoint = numberLimit;\n\n      if (numberLimit > totalPage) {\n        startPoint = 1;\n        endPoint = totalPage;\n      } else if (currentPage <= parseInt(numberLimit / 2, 10)) {\n        startPoint = 1;\n        endPoint = numberLimit;\n      } else if (currentPage + parseInt(numberLimit / 2, 10) <= totalPage) {\n        startPoint = currentPage - parseInt(numberLimit / 2, 10);\n        endPoint = currentPage + parseInt(numberLimit / 2, 10);\n      } else {\n        startPoint = totalPage - (numberLimit - 1);\n        endPoint = totalPage;\n      }\n\n      startPoint = startPoint === 0 ? 1 : startPoint;\n      var points = [];\n\n      for (var i = startPoint; i <= endPoint; i++) {\n        points.push(i);\n      }\n\n      var firstPageButtonClassName = currentPage <= 1 ? \"disabled\" : \"\";\n      var lastPageButtonClassName = currentPage >= totalPage ? \"disabled\" : \"\";\n      var prevPageButtonClassName = currentPage <= 1 ? \"disabled\" : \"\";\n      var nextPageButtonClassName = currentPage >= totalPage ? \"disabled\" : \"\";\n      return totalPage > 1 ? /*#__PURE__*/React.createElement(Colxx, {\n        xxs: \"12\",\n        className: \"mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Nav, {\n        className: \"pagination justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }\n      }, firstIsActive && /*#__PURE__*/React.createElement(NavItem, {\n        className: \"page-item \".concat(firstPageButtonClassName),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        className: \"page-link first\",\n        onClick: function onClick() {\n          return _this.onChangePage(1);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"simple-icon-control-start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }))), /*#__PURE__*/React.createElement(NavItem, {\n        className: \"page-item \".concat(prevPageButtonClassName),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        className: \"page-link prev\",\n        onClick: function onClick() {\n          return _this.onChangePage(currentPage - 1);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"simple-icon-arrow-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }\n      }))), points.map(function (i) {\n        return /*#__PURE__*/React.createElement(NavItem, {\n          key: i,\n          className: \"page-item \".concat(currentPage === i && \"active\"),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(NavLink, {\n          className: \"page-link\",\n          onClick: function onClick() {\n            return _this.onChangePage(i);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }\n        }, i));\n      }), /*#__PURE__*/React.createElement(NavItem, {\n        className: \"page-item \".concat(nextPageButtonClassName),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        className: \"page-link next\",\n        onClick: function onClick() {\n          return _this.onChangePage(currentPage + 1);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"simple-icon-arrow-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }\n      }))), lastIsActive && /*#__PURE__*/React.createElement(NavItem, {\n        className: \"page-item \".concat(lastPageButtonClassName),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        className: \"page-link last\",\n        onClick: function onClick() {\n          return _this.onChangePage(totalPage);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"simple-icon-control-end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }\n      }))))) : /*#__PURE__*/React.createElement(Colxx, {\n        xxs: \"12\",\n        className: \"mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return Pagination;\n}(React.Component);\n\nexport default Pagination;","map":{"version":3,"sources":["E:/Developing Project/Project - Pro/Recent Projects/026 - Daneshgah Magazi (New)/src/containers/pages/Pagination.js"],"names":["React","Colxx","Nav","NavItem","NavLink","Pagination","e","props","onChangePage","totalPage","currentPage","numberLimit","lastIsActive","firstIsActive","startPoint","endPoint","parseInt","points","i","push","firstPageButtonClassName","lastPageButtonClassName","prevPageButtonClassName","nextPageButtonClassName","map","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Colxx } from \"../../components/common/CustomBootstrap\";\r\nimport { Nav, NavItem, NavLink } from \"reactstrap\";\r\nclass Pagination extends React.Component {\r\n  componentDidMount() {}\r\n  onChangePage(e) {\r\n    this.props.onChangePage(e);\r\n  }\r\n  render() {\r\n    const {\r\n      totalPage = 0,\r\n      currentPage = 1,\r\n      numberLimit = 5,\r\n      lastIsActive = true,\r\n      firstIsActive = true\r\n    } = this.props;\r\n\r\n    let startPoint = 1;\r\n    let endPoint = numberLimit;\r\n\r\n    if (numberLimit > totalPage) {\r\n      startPoint = 1;\r\n      endPoint = totalPage;\r\n    } else if (currentPage <= parseInt(numberLimit / 2, 10)) {\r\n      startPoint = 1;\r\n      endPoint = numberLimit;\r\n    } else if (currentPage + parseInt(numberLimit / 2, 10) <= totalPage) {\r\n      startPoint = currentPage - parseInt(numberLimit / 2, 10);\r\n      endPoint = currentPage + parseInt(numberLimit / 2, 10);\r\n    } else {\r\n      startPoint = totalPage - (numberLimit - 1);\r\n      endPoint = totalPage;\r\n    }\r\n    startPoint = startPoint === 0 ? 1 : startPoint;\r\n    const points = [];\r\n    for (var i = startPoint; i <= endPoint; i++) {\r\n      points.push(i);\r\n    }\r\n\r\n    let firstPageButtonClassName = currentPage <= 1 ? \"disabled\" : \"\";\r\n    let lastPageButtonClassName = currentPage >= totalPage ? \"disabled\" : \"\";\r\n    let prevPageButtonClassName = currentPage <= 1 ? \"disabled\" : \"\";\r\n    let nextPageButtonClassName = currentPage >= totalPage ? \"disabled\" : \"\";\r\n    return totalPage > 1 ? (\r\n      <Colxx xxs=\"12\" className=\"mt-3\">\r\n        <Nav className=\"pagination justify-content-center\">\r\n          {firstIsActive && (\r\n            <NavItem className={`page-item ${firstPageButtonClassName}`}>\r\n              <NavLink\r\n                className=\"page-link first\"\r\n                onClick={() => this.onChangePage(1)}>\r\n                <i className=\"simple-icon-control-start\" />\r\n              </NavLink>\r\n            </NavItem>\r\n          )}\r\n\r\n          <NavItem className={`page-item ${prevPageButtonClassName}`}>\r\n            <NavLink\r\n              className=\"page-link prev\"\r\n              onClick={() => this.onChangePage(currentPage - 1)}\r\n            >\r\n              <i className=\"simple-icon-arrow-left\" />\r\n            </NavLink>\r\n          </NavItem>\r\n          {points.map(i => {\r\n            return (\r\n              <NavItem\r\n                key={i}\r\n                className={`page-item ${currentPage === i && \"active\"}`}>\r\n                <NavLink\r\n                  className=\"page-link\"\r\n                  onClick={() => this.onChangePage(i)}\r\n                >\r\n                  {i}\r\n                </NavLink>\r\n              </NavItem>\r\n            );\r\n          })}\r\n          <NavItem className={`page-item ${nextPageButtonClassName}`}>\r\n            <NavLink\r\n              className=\"page-link next\"\r\n              onClick={() => this.onChangePage(currentPage + 1)}\r\n            >\r\n              <i className=\"simple-icon-arrow-right\" />\r\n            </NavLink>\r\n          </NavItem>\r\n          {lastIsActive && (\r\n            <NavItem className={`page-item ${lastPageButtonClassName}`}>\r\n              <NavLink\r\n                className=\"page-link last\"\r\n                onClick={() => this.onChangePage(totalPage)}>\r\n                <i className=\"simple-icon-control-end\" />\r\n              </NavLink>\r\n            </NavItem>\r\n          )}\r\n        </Nav>\r\n      </Colxx>\r\n    ) : (\r\n      <Colxx xxs=\"12\" className=\"mt-2\" />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pagination;\r\n"]},"metadata":{},"sourceType":"module"}