{"ast":null,"code":"ace.define(\"ace/mode/gitignore_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var GitignoreHighlightRules = function GitignoreHighlightRules() {\n    this.$rules = {\n      \"start\": [{\n        token: \"comment\",\n        regex: /^\\s*#.*$/\n      }, {\n        token: \"keyword\",\n        // negated patterns\n        regex: /^\\s*!.*$/\n      }]\n    };\n    this.normalizeRules();\n  };\n\n  GitignoreHighlightRules.metaData = {\n    fileTypes: ['gitignore'],\n    name: 'Gitignore'\n  };\n  oop.inherits(GitignoreHighlightRules, TextHighlightRules);\n  exports.GitignoreHighlightRules = GitignoreHighlightRules;\n});\nace.define(\"ace/mode/gitignore\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/gitignore_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextMode = require(\"./text\").Mode;\n\n  var GitignoreHighlightRules = require(\"./gitignore_highlight_rules\").GitignoreHighlightRules;\n\n  var Mode = function Mode() {\n    this.HighlightRules = GitignoreHighlightRules;\n    this.$behaviour = this.$defaultBehaviour;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"#\";\n    this.$id = \"ace/mode/gitignore\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n\n(function () {\n  ace.require([\"ace/mode/gitignore\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":null,"metadata":{},"sourceType":"script"}