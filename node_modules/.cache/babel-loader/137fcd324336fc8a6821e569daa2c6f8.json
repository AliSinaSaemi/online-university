{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport Checkbox from '../checkbox';\n\nvar ListItem = function ListItem(props) {\n  var _classNames;\n\n  var renderedText = props.renderedText,\n      renderedEl = props.renderedEl,\n      item = props.item,\n      checked = props.checked,\n      disabled = props.disabled,\n      prefixCls = props.prefixCls,\n      onClick = props.onClick;\n  var className = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-content-item\"), true), _defineProperty(_classNames, \"\".concat(prefixCls, \"-content-item-disabled\"), disabled || item.disabled), _defineProperty(_classNames, \"\".concat(prefixCls, \"-content-item-checked\"), checked), _classNames));\n  var title;\n\n  if (typeof renderedText === 'string' || typeof renderedText === 'number') {\n    title = String(renderedText);\n  }\n\n  var listItem = /*#__PURE__*/React.createElement(\"li\", {\n    className: className,\n    title: title,\n    onClick: disabled || item.disabled ? undefined : function () {\n      return onClick(item);\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: checked,\n    disabled: disabled || item.disabled\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-content-item-text\")\n  }, renderedEl));\n  return listItem;\n};\n\nexport default React.memo(ListItem);","map":null,"metadata":{},"sourceType":"module"}