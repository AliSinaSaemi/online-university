{"ast":null,"code":"import _objectSpread from \"E:\\\\Developing Project\\\\Project - Pro\\\\Recent Projects\\\\026 - Daneshgah Magazi (New)\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"E:\\\\Developing Project\\\\Project - Pro\\\\Recent Projects\\\\026 - Daneshgah Magazi (New)\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Developing Project\\\\Project - Pro\\\\Recent Projects\\\\026 - Daneshgah Magazi (New)\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"E:\\\\Developing Project\\\\Project - Pro\\\\Recent Projects\\\\026 - Daneshgah Magazi (New)\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"E:\\\\Developing Project\\\\Project - Pro\\\\Recent Projects\\\\026 - Daneshgah Magazi (New)\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\Developing Project\\\\Project - Pro\\\\Recent Projects\\\\026 - Daneshgah Magazi (New)\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\Developing Project\\\\Project - Pro\\\\Recent Projects\\\\026 - Daneshgah Magazi (New)\\\\src\\\\containers\\\\wizard\\\\Validation.js\";\nimport React, { Component } from \"react\";\nimport { Card, CardBody, FormGroup, Label, Spinner } from \"reactstrap\";\nimport IntlMessages from \"../../helpers/IntlMessages\";\nimport { Wizard, Steps, Step } from 'react-albus';\nimport { injectIntl } from 'react-intl';\nimport { BottomNavigation } from \"../../components/wizard/BottomNavigation\";\nimport { TopNavigation } from \"../../components/wizard/TopNavigation\";\nimport { Formik, Form, Field } from \"formik\";\n\nvar Validation = /*#__PURE__*/function (_Component) {\n  _inherits(Validation, _Component);\n\n  var _super = _createSuper(Validation);\n\n  function Validation(props) {\n    var _this;\n\n    _classCallCheck(this, Validation);\n\n    _this = _super.call(this, props);\n    _this.onClickNext = _this.onClickNext.bind(_assertThisInitialized(_this));\n    _this.onClickPrev = _this.onClickPrev.bind(_assertThisInitialized(_this));\n    _this.validateEmail = _this.validateEmail.bind(_assertThisInitialized(_this));\n    _this.validateName = _this.validateName.bind(_assertThisInitialized(_this));\n    _this.validatePassword = _this.validatePassword.bind(_assertThisInitialized(_this));\n    _this.form0 = React.createRef();\n    _this.form1 = React.createRef();\n    _this.form2 = React.createRef();\n    _this.state = {\n      bottomNavHidden: false,\n      topNavDisabled: false,\n      loading: false,\n      fields: [{\n        valid: false,\n        name: \"name\",\n        value: \"\"\n      }, {\n        valid: false,\n        name: \"email\",\n        value: \"\"\n      }, {\n        valid: false,\n        name: \"password\",\n        value: \"\"\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(Validation, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        fields: [_objectSpread({}, this.state.fields[0], {\n          form: this.form0\n        }), _objectSpread({}, this.state.fields[1], {\n          form: this.form1\n        }), _objectSpread({}, this.state.fields[2], {\n          form: this.form2\n        })]\n      });\n    }\n  }, {\n    key: \"validateEmail\",\n    value: function validateEmail(value) {\n      var error;\n\n      if (!value) {\n        error = \"Please enter your email address\";\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n        error = \"Invalid email address\";\n      }\n\n      return error;\n    }\n  }, {\n    key: \"validateName\",\n    value: function validateName(value) {\n      var error;\n\n      if (!value) {\n        error = \"Please enter your name\";\n      } else if (value.length < 2) {\n        error = \"Value must be longer than 2 characters\";\n      }\n\n      return error;\n    }\n  }, {\n    key: \"validatePassword\",\n    value: function validatePassword(value) {\n      var error;\n\n      if (!value) {\n        error = \"Please enter your password\";\n      } else if (value.length < 6) {\n        error = \"Password must be longer than 6 characters\";\n      }\n\n      return error;\n    }\n  }, {\n    key: \"hideNavigation\",\n    value: function hideNavigation() {\n      this.setState({\n        bottomNavHidden: true,\n        topNavDisabled: true\n      });\n    }\n  }, {\n    key: \"asyncLoading\",\n    value: function asyncLoading() {\n      var _this2 = this;\n\n      this.setState({\n        loading: true\n      });\n      setTimeout(function () {\n        _this2.setState({\n          loading: false\n        });\n      }, 3000);\n    }\n  }, {\n    key: \"onClickNext\",\n    value: function onClickNext(goToNext, steps, step) {\n      var _this3 = this;\n\n      if (steps.length - 1 <= steps.indexOf(step)) {\n        return;\n      }\n\n      var formIndex = steps.indexOf(step);\n      var form = this.state.fields[formIndex].form.current;\n      var name = this.state.fields[formIndex].name;\n      form.submitForm().then(function () {\n        var fields = _this3.state.fields;\n        fields[formIndex].value = form.state.values[name];\n        fields[formIndex].valid = form.state.errors[name] ? false : true;\n\n        _this3.setState({\n          fields: fields\n        });\n\n        if (!form.state.errors[name]) {\n          goToNext();\n          step.isDone = true;\n\n          if (steps.length - 2 <= steps.indexOf(step)) {\n            _this3.hideNavigation();\n\n            _this3.asyncLoading();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"onClickPrev\",\n    value: function onClickPrev(goToPrev, steps, step) {\n      if (steps.indexOf(step) <= 0) {\n        return;\n      }\n\n      goToPrev();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var messages = this.props.intl.messages;\n      return /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        className: \"wizard wizard-default\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Wizard, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(TopNavigation, {\n        className: \"justify-content-center\",\n        disableNav: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Steps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Step, {\n        id: \"step1\",\n        name: messages[\"wizard.step-name-1\"],\n        desc: messages[\"wizard.step-desc-1\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"wizard-basic-step\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Formik, {\n        ref: this.form0,\n        initialValues: {\n          name: this.state.fields[0].value\n        },\n        onSubmit: function onSubmit() {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 37\n        }\n      }, function (_ref) {\n        var errors = _ref.errors,\n            touched = _ref.touched;\n        return /*#__PURE__*/React.createElement(Form, {\n          className: \"av-tooltip tooltip-label-right\",\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 53\n          }\n        }, messages[\"forms.name\"]), /*#__PURE__*/React.createElement(Field, {\n          className: \"form-control\",\n          name: \"name\",\n          validate: _this4.validateName,\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 53\n          }\n        }), errors.name && touched.name && /*#__PURE__*/React.createElement(\"div\", {\n          className: \"invalid-feedback d-block\",\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 57\n          }\n        }, errors.name)));\n      }))), /*#__PURE__*/React.createElement(Step, {\n        id: \"step2\",\n        name: messages[\"wizard.step-name-2\"],\n        desc: messages[\"wizard.step-desc-2\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"wizard-basic-step\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Formik, {\n        ref: this.form1,\n        initialValues: {\n          email: this.state.fields[1].value\n        },\n        onSubmit: function onSubmit() {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 37\n        }\n      }, function (_ref2) {\n        var errors = _ref2.errors,\n            touched = _ref2.touched;\n        return /*#__PURE__*/React.createElement(Form, {\n          className: \"av-tooltip tooltip-label-right\",\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 53\n          }\n        }, messages[\"forms.email\"]), /*#__PURE__*/React.createElement(Field, {\n          className: \"form-control\",\n          name: \"email\",\n          validate: _this4.validateEmail,\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 53\n          }\n        }), errors.email && touched.email && /*#__PURE__*/React.createElement(\"div\", {\n          className: \"invalid-feedback d-block\",\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 57\n          }\n        }, errors.email)));\n      }))), /*#__PURE__*/React.createElement(Step, {\n        id: \"step3\",\n        name: messages[\"wizard.step-name-3\"],\n        desc: messages[\"wizard.step-desc-3\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"wizard-basic-step\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Formik, {\n        ref: this.form2,\n        initialValues: {\n          password: this.state.fields[2].value\n        },\n        onSubmit: function onSubmit() {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 37\n        }\n      }, function (_ref3) {\n        var errors = _ref3.errors,\n            touched = _ref3.touched;\n        return /*#__PURE__*/React.createElement(Form, {\n          className: \"av-tooltip tooltip-label-right error-l-75\",\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 53\n          }\n        }, messages[\"forms.password\"]), /*#__PURE__*/React.createElement(Field, {\n          className: \"form-control\",\n          name: \"password\",\n          validate: _this4.validatePassword,\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 53\n          }\n        }), errors.password && touched.password && /*#__PURE__*/React.createElement(\"div\", {\n          className: \"invalid-feedback d-block\",\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 57\n          }\n        }, errors.password)));\n      }))), /*#__PURE__*/React.createElement(Step, {\n        id: \"step4\",\n        hideTopNav: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"wizard-basic-step text-center pt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 33\n        }\n      }, this.state.loading ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Spinner, {\n        color: \"primary\",\n        className: \"mb-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 49\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"wizard.async\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 52\n        }\n      }))) : /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"wizard.content-thanks\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 74\n        }\n      })), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"wizard.registered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 56\n        }\n      })))))), /*#__PURE__*/React.createElement(BottomNavigation, {\n        onClickNext: this.onClickNext,\n        onClickPrev: this.onClickPrev,\n        className: \"justify-content-center \" + (this.state.bottomNavHidden && \"invisible\"),\n        prevLabel: messages[\"wizard.prev\"],\n        nextLabel: messages[\"wizard.next\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 25\n        }\n      }))));\n    }\n  }]);\n\n  return Validation;\n}(Component);\n\nexport default injectIntl(Validation);","map":{"version":3,"sources":["E:/Developing Project/Project - Pro/Recent Projects/026 - Daneshgah Magazi (New)/src/containers/wizard/Validation.js"],"names":["React","Component","Card","CardBody","FormGroup","Label","Spinner","IntlMessages","Wizard","Steps","Step","injectIntl","BottomNavigation","TopNavigation","Formik","Form","Field","Validation","props","onClickNext","bind","onClickPrev","validateEmail","validateName","validatePassword","form0","createRef","form1","form2","state","bottomNavHidden","topNavDisabled","loading","fields","valid","name","value","setState","form","error","test","length","setTimeout","goToNext","steps","step","indexOf","formIndex","current","submitForm","then","values","errors","isDone","hideNavigation","asyncLoading","goToPrev","messages","intl","touched","email","password"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Card, CardBody, FormGroup, Label, Spinner } from \"reactstrap\";\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\nimport { Wizard, Steps, Step } from 'react-albus';\r\nimport { injectIntl } from 'react-intl';\r\nimport { BottomNavigation } from \"../../components/wizard/BottomNavigation\";\r\nimport { TopNavigation } from \"../../components/wizard/TopNavigation\";\r\nimport { Formik, Form, Field } from \"formik\";\r\n\r\n\r\nclass Validation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onClickNext = this.onClickNext.bind(this);\r\n        this.onClickPrev = this.onClickPrev.bind(this);\r\n        this.validateEmail = this.validateEmail.bind(this);\r\n        this.validateName = this.validateName.bind(this);\r\n        this.validatePassword = this.validatePassword.bind(this);\r\n\r\n        this.form0 = React.createRef();\r\n        this.form1 = React.createRef();\r\n        this.form2 = React.createRef();\r\n\r\n        this.state = {\r\n            bottomNavHidden: false,\r\n            topNavDisabled: false,\r\n            loading: false,\r\n            fields: [\r\n                {\r\n                    valid: false,\r\n                    name: \"name\",\r\n                    value: \"\"\r\n                },\r\n                {\r\n                    valid: false,\r\n                    name: \"email\",\r\n                    value: \"\"\r\n                },\r\n                {\r\n                    valid: false,\r\n                    name: \"password\",\r\n                    value: \"\"\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ fields: [{ ...this.state.fields[0], form: this.form0 }, { ...this.state.fields[1], form: this.form1 }, { ...this.state.fields[2], form: this.form2 }] });\r\n    }\r\n\r\n    validateEmail(value) {\r\n        let error;\r\n        if (!value) {\r\n            error = \"Please enter your email address\";\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n            error = \"Invalid email address\";\r\n        }\r\n        return error;\r\n    }\r\n\r\n    validateName(value) {\r\n        let error;\r\n        if (!value) {\r\n            error = \"Please enter your name\";\r\n        } else if (value.length < 2) {\r\n            error = \"Value must be longer than 2 characters\";\r\n        }\r\n        return error;\r\n    }\r\n\r\n    validatePassword(value) {\r\n        let error;\r\n        if (!value) {\r\n            error = \"Please enter your password\";\r\n        } else if (value.length < 6) {\r\n            error = \"Password must be longer than 6 characters\";\r\n        }\r\n        return error;\r\n    }\r\n\r\n    hideNavigation() {\r\n        this.setState({ bottomNavHidden: true, topNavDisabled: true });\r\n    }\r\n\r\n    asyncLoading () {\r\n        this.setState({ loading: true });\r\n        setTimeout(() => {\r\n            this.setState({ loading: false });\r\n        }, 3000);\r\n    }\r\n\r\n    onClickNext(goToNext, steps, step) {\r\n        if (steps.length - 1 <= steps.indexOf(step)) {\r\n            return;\r\n        }\r\n        let formIndex = steps.indexOf(step);\r\n        let form = this.state.fields[formIndex].form.current;\r\n        let name = this.state.fields[formIndex].name;\r\n        form.submitForm().then(() => {\r\n            let fields = this.state.fields;\r\n            fields[formIndex].value = form.state.values[name];\r\n            fields[formIndex].valid = form.state.errors[name] ? false : true;\r\n            this.setState({ fields });\r\n            if (!form.state.errors[name]) {\r\n                goToNext();\r\n                step.isDone = true;\r\n                if (steps.length - 2 <= steps.indexOf(step)) {\r\n                    this.hideNavigation();\r\n                    this.asyncLoading();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    onClickPrev(goToPrev, steps, step) {\r\n        if (steps.indexOf(step) <= 0) {\r\n            return;\r\n        }\r\n        goToPrev();\r\n    }\r\n\r\n    render() {\r\n        const { messages } = this.props.intl;\r\n        return (\r\n            <Card>\r\n                <CardBody className=\"wizard wizard-default\">\r\n                    <Wizard>\r\n                        <TopNavigation className=\"justify-content-center\" disableNav={true} />\r\n                        <Steps>\r\n                            <Step id=\"step1\" name={messages[\"wizard.step-name-1\"]} desc={messages[\"wizard.step-desc-1\"]}>\r\n                                <div className=\"wizard-basic-step\">\r\n                                    <Formik\r\n                                        ref={this.form0}\r\n                                        initialValues={{\r\n                                            name: this.state.fields[0].value\r\n                                        }}\r\n                                        onSubmit={() => { }}>\r\n                                        {({ errors, touched }) => (\r\n                                            <Form className=\"av-tooltip tooltip-label-right\">\r\n                                                <FormGroup>\r\n                                                    <Label>{messages[\"forms.name\"]}</Label>\r\n                                                    <Field\r\n                                                        className=\"form-control\"\r\n                                                        name=\"name\"\r\n                                                        validate={this.validateName}\r\n                                                    />\r\n                                                    {errors.name && touched.name && (\r\n                                                        <div className=\"invalid-feedback d-block\">\r\n                                                            {errors.name}\r\n                                                        </div>\r\n                                                    )}\r\n                                                </FormGroup>\r\n                                            </Form>\r\n                                        )}\r\n                                    </Formik>\r\n                                </div>\r\n                            </Step>\r\n                            <Step id=\"step2\" name={messages[\"wizard.step-name-2\"]} desc={messages[\"wizard.step-desc-2\"]}>\r\n                                <div className=\"wizard-basic-step\">\r\n                                    <Formik\r\n                                        ref={this.form1}\r\n                                        initialValues={{\r\n                                            email: this.state.fields[1].value\r\n                                        }}\r\n                                        onSubmit={() => { }}>\r\n                                        {({ errors, touched }) => (\r\n                                            <Form className=\"av-tooltip tooltip-label-right\">\r\n                                                <FormGroup>\r\n                                                    <Label>{messages[\"forms.email\"]}</Label>\r\n                                                    <Field\r\n                                                        className=\"form-control\"\r\n                                                        name=\"email\"\r\n                                                        validate={this.validateEmail}\r\n                                                    />\r\n                                                    {errors.email && touched.email && (\r\n                                                        <div className=\"invalid-feedback d-block\">\r\n                                                            {errors.email}\r\n                                                        </div>\r\n                                                    )}\r\n                                                </FormGroup>\r\n                                            </Form>\r\n                                        )}\r\n                                    </Formik>\r\n                                </div>\r\n                            </Step>\r\n                            <Step id=\"step3\" name={messages[\"wizard.step-name-3\"]} desc={messages[\"wizard.step-desc-3\"]}>\r\n                                <div className=\"wizard-basic-step\">\r\n                                    <Formik\r\n                                        ref={this.form2}\r\n                                        initialValues={{\r\n                                            password: this.state.fields[2].value\r\n                                        }}\r\n                                        onSubmit={() => { }}>\r\n                                        {({ errors, touched }) => (\r\n                                            <Form className=\"av-tooltip tooltip-label-right error-l-75\">\r\n                                                <FormGroup>\r\n                                                    <Label>{messages[\"forms.password\"]}</Label>\r\n                                                    <Field\r\n                                                        className=\"form-control\"\r\n                                                        name=\"password\"\r\n                                                        validate={this.validatePassword}\r\n                                                    />\r\n                                                    {errors.password && touched.password && (\r\n                                                        <div className=\"invalid-feedback d-block\">\r\n                                                            {errors.password}\r\n                                                        </div>\r\n                                                    )}\r\n                                                </FormGroup>\r\n                                            </Form>\r\n                                        )}\r\n                                    </Formik>\r\n                                </div>\r\n                            </Step>\r\n                            <Step id=\"step4\" hideTopNav={true}>\r\n                                <div className=\"wizard-basic-step text-center pt-3\">\r\n                                    {\r\n                                        this.state.loading ? (\r\n                                            <div>\r\n                                                <Spinner color=\"primary\" className=\"mb-1\" />\r\n                                                <p><IntlMessages id=\"wizard.async\" /></p>\r\n                                            </div>\r\n                                        ) : (\r\n                                                <div>\r\n                                                    <h2 className=\"mb-2\"><IntlMessages id=\"wizard.content-thanks\" /></h2>\r\n                                                    <p><IntlMessages id=\"wizard.registered\" /></p>\r\n                                                </div>\r\n                                            )\r\n                                    }\r\n                                </div>\r\n                            </Step>\r\n                        </Steps>\r\n                        <BottomNavigation onClickNext={this.onClickNext} onClickPrev={this.onClickPrev} className={\"justify-content-center \" + (this.state.bottomNavHidden && \"invisible\")} prevLabel={messages[\"wizard.prev\"]} nextLabel={messages[\"wizard.next\"]} />\r\n                    </Wizard>\r\n                </CardBody>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\nexport default injectIntl(Validation)\r\n"]},"metadata":{},"sourceType":"module"}