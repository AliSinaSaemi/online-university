{"ast":null,"code":"import _classCallCheck from \"E:\\\\Developing Project\\\\Project - Pro\\\\Recent Projects\\\\026 - Daneshgah Magazi (New)\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Developing Project\\\\Project - Pro\\\\Recent Projects\\\\026 - Daneshgah Magazi (New)\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"E:\\\\Developing Project\\\\Project - Pro\\\\Recent Projects\\\\026 - Daneshgah Magazi (New)\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\Developing Project\\\\Project - Pro\\\\Recent Projects\\\\026 - Daneshgah Magazi (New)\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\Developing Project\\\\Project - Pro\\\\Recent Projects\\\\026 - Daneshgah Magazi (New)\\\\src\\\\containers\\\\navs\\\\Topnav.DarkSwitch.js\";\nimport React, { Component } from \"react\";\nimport Switch from \"rc-switch\";\nimport \"rc-switch/assets/index.css\";\nimport { Tooltip } from \"reactstrap\";\nimport { defaultColor, themeColorStorageKey } from \"../../constants/defaultValues\";\n\nvar TopnavDarkSwitch = /*#__PURE__*/function (_Component) {\n  _inherits(TopnavDarkSwitch, _Component);\n\n  var _super = _createSuper(TopnavDarkSwitch);\n\n  function TopnavDarkSwitch(props) {\n    var _this;\n\n    _classCallCheck(this, TopnavDarkSwitch);\n\n    _this = _super.call(this, props);\n\n    _this.toggle = function () {\n      _this.setState(function (prevState) {\n        return {\n          tooltipOpen: !prevState.tooltipOpen\n        };\n      });\n    };\n\n    _this.getColor = function () {\n      return localStorage.getItem(themeColorStorageKey) ? localStorage.getItem(themeColorStorageKey) : defaultColor;\n    };\n\n    _this.changeMode = function () {\n      var color = _this.getColor();\n\n      if (color.indexOf('dark') > -1) {\n        color = color.replace('dark', 'light');\n      } else if (color.indexOf('light') > -1) {\n        color = color.replace('light', 'dark');\n      }\n\n      _this.setState({\n        switchChecked: color.indexOf('dark') > -1\n      }, function () {\n        localStorage.setItem(themeColorStorageKey, color);\n        setTimeout(function () {\n          window.location.reload();\n        }, 500);\n      });\n    };\n\n    _this.state = {\n      switchChecked: false,\n      tooltipOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(TopnavDarkSwitch, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var color = this.getColor();\n      this.setState({\n        switchChecked: color.indexOf('dark') > -1\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-none d-md-inline-block align-middle mr-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Switch, {\n        id: \"Tooltip-Switch\",\n        className: \"custom-switch custom-switch-primary custom-switch-small\",\n        checked: this.state.switchChecked,\n        onChange: this.changeMode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Tooltip, {\n        placement: \"left\",\n        isOpen: this.state.tooltipOpen,\n        target: \"Tooltip-Switch\",\n        toggle: this.toggle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }\n      }, \"Dark Mode\"));\n    }\n  }]);\n\n  return TopnavDarkSwitch;\n}(Component);\n\nexport { TopnavDarkSwitch as default };","map":{"version":3,"sources":["E:/Developing Project/Project - Pro/Recent Projects/026 - Daneshgah Magazi (New)/src/containers/navs/Topnav.DarkSwitch.js"],"names":["React","Component","Switch","Tooltip","defaultColor","themeColorStorageKey","TopnavDarkSwitch","props","toggle","setState","prevState","tooltipOpen","getColor","localStorage","getItem","changeMode","color","indexOf","replace","switchChecked","setItem","setTimeout","window","location","reload","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAO,4BAAP;AACA,SAASC,OAAT,QAAwB,YAAxB;AAEA,SAASC,YAAT,EAAuBC,oBAAvB,QAAmD,+BAAnD;;IAEqBC,gB;;;;;AACjB,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,UAcnBC,MAdmB,GAcV,YAAM;AACX,YAAKC,QAAL,CAAc,UAAAC,SAAS;AAAA,eAAK;AACxBC,UAAAA,WAAW,EAAE,CAACD,SAAS,CAACC;AADA,SAAL;AAAA,OAAvB;AAGH,KAlBkB;;AAAA,UAoBnBC,QApBmB,GAoBR,YAAM;AACb,aAAOC,YAAY,CAACC,OAAb,CAAqBT,oBAArB,IACDQ,YAAY,CAACC,OAAb,CAAqBT,oBAArB,CADC,GAEDD,YAFN;AAGH,KAxBkB;;AAAA,UAyBnBW,UAzBmB,GAyBN,YAAM;AACf,UAAIC,KAAK,GAAG,MAAKJ,QAAL,EAAZ;;AAEA,UAAII,KAAK,CAACC,OAAN,CAAc,MAAd,IAAwB,CAAC,CAA7B,EAAgC;AAC5BD,QAAAA,KAAK,GAAGA,KAAK,CAACE,OAAN,CAAc,MAAd,EAAsB,OAAtB,CAAR;AACH,OAFD,MAEO,IAAIF,KAAK,CAACC,OAAN,CAAc,OAAd,IAAyB,CAAC,CAA9B,EAAiC;AACpCD,QAAAA,KAAK,GAAGA,KAAK,CAACE,OAAN,CAAc,OAAd,EAAuB,MAAvB,CAAR;AACH;;AAED,YAAKT,QAAL,CAAc;AACVU,QAAAA,aAAa,EAAEH,KAAK,CAACC,OAAN,CAAc,MAAd,IAAwB,CAAC;AAD9B,OAAd,EAEG,YAAM;AACLJ,QAAAA,YAAY,CAACO,OAAb,CAAqBf,oBAArB,EAA2CW,KAA3C;AACAK,QAAAA,UAAU,CAAC,YAAM;AACbC,UAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,SAFS,EAEP,GAFO,CAAV;AAGH,OAPD;AAQH,KA1CkB;;AAEf,UAAKC,KAAL,GAAa;AACTN,MAAAA,aAAa,EAAE,KADN;AAETR,MAAAA,WAAW,EAAE;AAFJ,KAAb;AAFe;AAMlB;;;;wCACmB;AAChB,UAAMK,KAAK,GAAG,KAAKJ,QAAL,EAAd;AACA,WAAKH,QAAL,CAAc;AACVU,QAAAA,aAAa,EAAEH,KAAK,CAACC,OAAN,CAAc,MAAd,IAAwB,CAAC;AAD9B,OAAd;AAGH;;;6BAgCQ;AACL,0BACI;AAAK,QAAA,SAAS,EAAC,4CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AACI,QAAA,EAAE,EAAC,gBADP;AAEI,QAAA,SAAS,EAAC,yDAFd;AAGI,QAAA,OAAO,EAAE,KAAKQ,KAAL,CAAWN,aAHxB;AAII,QAAA,QAAQ,EAAE,KAAKJ,UAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAMI,oBAAC,OAAD;AACI,QAAA,SAAS,EAAC,MADd;AAEI,QAAA,MAAM,EAAE,KAAKU,KAAL,CAAWd,WAFvB;AAGI,QAAA,MAAM,EAAE,gBAHZ;AAII,QAAA,MAAM,EAAE,KAAKH,MAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBANJ,CADJ;AAgBH;;;;EA9DyCP,S;;SAAzBK,gB","sourcesContent":["import React, { Component } from \"react\";\r\nimport Switch from \"rc-switch\";\r\nimport \"rc-switch/assets/index.css\";\r\nimport { Tooltip } from \"reactstrap\";\r\n\r\nimport { defaultColor, themeColorStorageKey } from \"../../constants/defaultValues\";\r\n\r\nexport default class TopnavDarkSwitch extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            switchChecked: false,\r\n            tooltipOpen: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        const color = this.getColor();\r\n        this.setState({\r\n            switchChecked: color.indexOf('dark') > -1\r\n        })\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState(prevState => ({\r\n            tooltipOpen: !prevState.tooltipOpen\r\n        }));\r\n    };\r\n\r\n    getColor = () => {\r\n        return localStorage.getItem(themeColorStorageKey)\r\n            ? localStorage.getItem(themeColorStorageKey)\r\n            : defaultColor;\r\n    };\r\n    changeMode = () => {\r\n        let color = this.getColor();\r\n\r\n        if (color.indexOf('dark') > -1) {\r\n            color = color.replace('dark', 'light')\r\n        } else if (color.indexOf('light') > -1) {\r\n            color = color.replace('light', 'dark')\r\n        }\r\n\r\n        this.setState({\r\n            switchChecked: color.indexOf('dark') > -1\r\n        }, () => {\r\n            localStorage.setItem(themeColorStorageKey, color)\r\n            setTimeout(() => {\r\n                window.location.reload();\r\n            }, 500);\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"d-none d-md-inline-block align-middle mr-3\">\r\n                <Switch\r\n                    id=\"Tooltip-Switch\"\r\n                    className=\"custom-switch custom-switch-primary custom-switch-small\"\r\n                    checked={this.state.switchChecked}\r\n                    onChange={this.changeMode}/>\r\n                <Tooltip\r\n                    placement=\"left\"\r\n                    isOpen={this.state.tooltipOpen}\r\n                    target={\"Tooltip-Switch\"}\r\n                    toggle={this.toggle}>\r\n                    Dark Mode\r\n                </Tooltip>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}