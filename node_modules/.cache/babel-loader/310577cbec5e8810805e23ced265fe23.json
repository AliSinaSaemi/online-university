{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Hamed\\\\Desktop\\\\Gogo-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { CHAT_GET_CONTACTS, CHAT_GET_CONTACTS_SUCCESS, CHAT_GET_CONTACTS_ERROR, CHAT_GET_CONVERSATIONS, CHAT_GET_CONVERSATIONS_SUCCESS, CHAT_GET_CONVERSATIONS_ERROR, CHAT_ADD_MESSAGE_TO_CONVERSATION, CHAT_CREATE_CONVERSATION, CHAT_SEARCH_CONTACT, CHAT_CHANGE_CONVERSATION } from '../actions';\nvar INIT_STATE = {\n  allContacts: null,\n  contacts: null,\n  conversations: null,\n  error: '',\n  searchKeyword: '',\n  loadingContacts: false,\n  loadingConversations: false,\n  currentUser: null,\n  selectedUser: null,\n  selectedUserId: null\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CHAT_GET_CONTACTS:\n      return _objectSpread({}, state, {\n        loadingContacts: false\n      });\n\n    case CHAT_GET_CONTACTS_SUCCESS:\n      return _objectSpread({}, state, {\n        loadingContacts: true,\n        allContacts: action.payload.contacts,\n        contacts: action.payload.contacts,\n        currentUser: action.payload.currentUser\n      });\n\n    case CHAT_GET_CONTACTS_ERROR:\n      return _objectSpread({}, state, {\n        loadingContacts: false,\n        error: action.payload\n      });\n\n    case CHAT_GET_CONVERSATIONS:\n      return _objectSpread({}, state, {\n        loadingConversations: false\n      });\n\n    case CHAT_GET_CONVERSATIONS_SUCCESS:\n      return _objectSpread({}, state, {\n        loadingConversations: true,\n        conversations: action.payload.conversations,\n        selectedUserId: action.payload.selectedUser\n      });\n\n    case CHAT_GET_CONVERSATIONS_ERROR:\n      return _objectSpread({}, state, {\n        loadingConversations: false,\n        error: action.payload\n      });\n\n    case CHAT_CHANGE_CONVERSATION:\n      return _objectSpread({}, state, {\n        selectedUser: state.allContacts.find(function (x) {\n          return x.id === action.payload;\n        })\n      });\n\n    case CHAT_ADD_MESSAGE_TO_CONVERSATION:\n      return _objectSpread({}, state);\n\n    case CHAT_CREATE_CONVERSATION:\n      return _objectSpread({}, state);\n\n    case CHAT_SEARCH_CONTACT:\n      if (action.payload === '') {\n        return _objectSpread({}, state, {\n          contacts: state.allContacts\n        });\n      } else {\n        var keyword = action.payload.toLowerCase();\n        var searchedContacts = state.allContacts.filter(function (item) {\n          return item.name.toLowerCase().indexOf(keyword) > -1;\n        });\n        return _objectSpread({}, state, {\n          contacts: searchedContacts\n        });\n      }\n\n    default:\n      return _objectSpread({}, state);\n  }\n});","map":{"version":3,"sources":["C:/Users/Hamed/Desktop/Gogo-React/src/redux/chat/reducer.js"],"names":["CHAT_GET_CONTACTS","CHAT_GET_CONTACTS_SUCCESS","CHAT_GET_CONTACTS_ERROR","CHAT_GET_CONVERSATIONS","CHAT_GET_CONVERSATIONS_SUCCESS","CHAT_GET_CONVERSATIONS_ERROR","CHAT_ADD_MESSAGE_TO_CONVERSATION","CHAT_CREATE_CONVERSATION","CHAT_SEARCH_CONTACT","CHAT_CHANGE_CONVERSATION","INIT_STATE","allContacts","contacts","conversations","error","searchKeyword","loadingContacts","loadingConversations","currentUser","selectedUser","selectedUserId","state","action","type","payload","find","x","id","keyword","toLowerCase","searchedContacts","filter","item","name","indexOf"],"mappings":";AAAA,SACCA,iBADD,EAECC,yBAFD,EAGCC,uBAHD,EAICC,sBAJD,EAKCC,8BALD,EAMCC,4BAND,EAOCC,gCAPD,EAQCC,wBARD,EASCC,mBATD,EAUCC,wBAVD,QAWO,YAXP;AAaA,IAAMC,UAAU,GAAG;AAClBC,EAAAA,WAAW,EAAE,IADK;AAElBC,EAAAA,QAAQ,EAAE,IAFQ;AAGlBC,EAAAA,aAAa,EAAE,IAHG;AAIlBC,EAAAA,KAAK,EAAE,EAJW;AAKlBC,EAAAA,aAAa,EAAE,EALG;AAMlBC,EAAAA,eAAe,EAAE,KANC;AAOlBC,EAAAA,oBAAoB,EAAE,KAPJ;AAQlBC,EAAAA,WAAW,EAAE,IARK;AASlBC,EAAAA,YAAY,EAAE,IATI;AAUlBC,EAAAA,cAAc,EAAE;AAVE,CAAnB;AAaA,gBAAe,YAAgC;AAAA,MAA/BC,KAA+B,uEAAvBX,UAAuB;AAAA,MAAXY,MAAW;;AAC9C,UAAQA,MAAM,CAACC,IAAf;AAEC,SAAKvB,iBAAL;AACC,+BAAYqB,KAAZ;AAAmBL,QAAAA,eAAe,EAAE;AAApC;;AAED,SAAKf,yBAAL;AACC,+BAAYoB,KAAZ;AAAmBL,QAAAA,eAAe,EAAE,IAApC;AAA0CL,QAAAA,WAAW,EAAEW,MAAM,CAACE,OAAP,CAAeZ,QAAtE;AAAgFA,QAAAA,QAAQ,EAAEU,MAAM,CAACE,OAAP,CAAeZ,QAAzG;AAAmHM,QAAAA,WAAW,EAAEI,MAAM,CAACE,OAAP,CAAeN;AAA/I;;AAED,SAAKhB,uBAAL;AACC,+BAAYmB,KAAZ;AAAmBL,QAAAA,eAAe,EAAE,KAApC;AAA2CF,QAAAA,KAAK,EAAEQ,MAAM,CAACE;AAAzD;;AAGD,SAAKrB,sBAAL;AACC,+BAAYkB,KAAZ;AAAmBJ,QAAAA,oBAAoB,EAAE;AAAzC;;AAED,SAAKb,8BAAL;AACC,+BAAYiB,KAAZ;AACCJ,QAAAA,oBAAoB,EAAE,IADvB;AAECJ,QAAAA,aAAa,EAAES,MAAM,CAACE,OAAP,CAAeX,aAF/B;AAGCO,QAAAA,cAAc,EAAGE,MAAM,CAACE,OAAP,CAAeL;AAHjC;;AAMD,SAAKd,4BAAL;AACC,+BAAYgB,KAAZ;AAAmBJ,QAAAA,oBAAoB,EAAE,KAAzC;AAAgDH,QAAAA,KAAK,EAAEQ,MAAM,CAACE;AAA9D;;AAED,SAAKf,wBAAL;AACC,+BAAYY,KAAZ;AAAmBF,QAAAA,YAAY,EAAEE,KAAK,CAACV,WAAN,CAAkBc,IAAlB,CAAuB,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACC,EAAF,KAASL,MAAM,CAACE,OAApB;AAAA,SAAxB;AAAjC;;AAGD,SAAKlB,gCAAL;AACC,+BAAYe,KAAZ;;AAED,SAAKd,wBAAL;AACC,+BAAYc,KAAZ;;AAED,SAAKb,mBAAL;AACC,UAAIc,MAAM,CAACE,OAAP,KAAmB,EAAvB,EAA2B;AAC1B,iCAAYH,KAAZ;AAAmBT,UAAAA,QAAQ,EAAES,KAAK,CAACV;AAAnC;AACA,OAFD,MAEO;AACN,YAAMiB,OAAO,GAAGN,MAAM,CAACE,OAAP,CAAeK,WAAf,EAAhB;AACA,YAAMC,gBAAgB,GAAGT,KAAK,CAACV,WAAN,CAAkBoB,MAAlB,CAAyB,UAACC,IAAD;AAAA,iBAAUA,IAAI,CAACC,IAAL,CAAUJ,WAAV,GAAwBK,OAAxB,CAAgCN,OAAhC,IAA2C,CAAC,CAAtD;AAAA,SAAzB,CAAzB;AACA,iCAAYP,KAAZ;AAAmBT,UAAAA,QAAQ,EAAEkB;AAA7B;AACA;;AAEF;AAAS,+BAAYT,KAAZ;AA5CV;AA8CA,CA/CD","sourcesContent":["import {\r\n\tCHAT_GET_CONTACTS,\r\n\tCHAT_GET_CONTACTS_SUCCESS,\r\n\tCHAT_GET_CONTACTS_ERROR,\r\n\tCHAT_GET_CONVERSATIONS,\r\n\tCHAT_GET_CONVERSATIONS_SUCCESS,\r\n\tCHAT_GET_CONVERSATIONS_ERROR,\r\n\tCHAT_ADD_MESSAGE_TO_CONVERSATION,\r\n\tCHAT_CREATE_CONVERSATION,\r\n\tCHAT_SEARCH_CONTACT,\r\n\tCHAT_CHANGE_CONVERSATION\r\n} from '../actions';\r\n\r\nconst INIT_STATE = {\r\n\tallContacts: null,\r\n\tcontacts: null,\r\n\tconversations: null,\r\n\terror: '',\r\n\tsearchKeyword: '',\r\n\tloadingContacts: false,\r\n\tloadingConversations: false,\r\n\tcurrentUser: null,\r\n\tselectedUser: null,\r\n\tselectedUserId: null\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase CHAT_GET_CONTACTS:\r\n\t\t\treturn { ...state, loadingContacts: false };\r\n\r\n\t\tcase CHAT_GET_CONTACTS_SUCCESS:\r\n\t\t\treturn { ...state, loadingContacts: true, allContacts: action.payload.contacts, contacts: action.payload.contacts, currentUser: action.payload.currentUser };\r\n\r\n\t\tcase CHAT_GET_CONTACTS_ERROR:\r\n\t\t\treturn { ...state, loadingContacts: false, error: action.payload };\r\n\r\n\r\n\t\tcase CHAT_GET_CONVERSATIONS:\r\n\t\t\treturn { ...state, loadingConversations: false };\r\n\r\n\t\tcase CHAT_GET_CONVERSATIONS_SUCCESS:\r\n\t\t\treturn { ...state, \r\n\t\t\t\tloadingConversations: true, \r\n\t\t\t\tconversations: action.payload.conversations, \r\n\t\t\t\tselectedUserId:  action.payload.selectedUser \r\n\t\t\t};\r\n\r\n\t\tcase CHAT_GET_CONVERSATIONS_ERROR:\r\n\t\t\treturn { ...state, loadingConversations: false, error: action.payload };\r\n\r\n\t\tcase CHAT_CHANGE_CONVERSATION:\r\n\t\t\treturn { ...state, selectedUser: state.allContacts.find(x => x.id === action.payload) };\r\n\r\n\r\n\t\tcase CHAT_ADD_MESSAGE_TO_CONVERSATION:\r\n\t\t\treturn { ...state };\r\n\r\n\t\tcase CHAT_CREATE_CONVERSATION:\r\n\t\t\treturn { ...state };\r\n\r\n\t\tcase CHAT_SEARCH_CONTACT:\r\n\t\t\tif (action.payload === '') {\r\n\t\t\t\treturn { ...state, contacts: state.allContacts };\r\n\t\t\t} else {\r\n\t\t\t\tconst keyword = action.payload.toLowerCase();\r\n\t\t\t\tconst searchedContacts = state.allContacts.filter((item) => item.name.toLowerCase().indexOf(keyword) > -1);\r\n\t\t\t\treturn { ...state, contacts: searchedContacts }\r\n\t\t\t}\r\n\r\n\t\tdefault: return { ...state };\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}