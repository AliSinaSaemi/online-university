{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Hamed\\\\Desktop\\\\Gogo-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Hamed\\\\Desktop\\\\Gogo-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Hamed\\\\Desktop\\\\Gogo-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Hamed\\\\Desktop\\\\Gogo-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Hamed\\\\Desktop\\\\Gogo-React\\\\src\\\\components\\\\StateButton.js\";\nimport React from \"react\";\nimport { Button, Popover, PopoverBody } from \"reactstrap\";\nimport classnames from \"classnames\";\n\nvar StateButton = /*#__PURE__*/function (_React$Component) {\n  _inherits(StateButton, _React$Component);\n\n  var _super = _createSuper(StateButton);\n\n  function StateButton(props) {\n    var _this;\n\n    _classCallCheck(this, StateButton);\n\n    _this = _super.call(this, props);\n\n    _this.handleOnClick = function () {\n      _this.setState({\n        status: \"processing\"\n      }, function () {\n        _this.props.onClick().then(function (res) {\n          _this.setState({\n            status: \"success\",\n            message: res\n          });\n        }).catch(function (err) {\n          _this.setState({\n            status: \"fail\",\n            message: err\n          });\n        }).finally(function () {\n          _this.setState({\n            messageShow: true\n          }, function () {\n            setTimeout(function () {\n              _this.setState({\n                messageShow: false,\n                status: \"default\"\n              });\n            }, 3000);\n          });\n        });\n      });\n    };\n\n    _this.state = {\n      status: \"default\",\n      message: \"\",\n      messageShow: false\n    };\n    return _this;\n  }\n\n  _createClass(StateButton, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        id: this.props.id,\n        className: \"btn-multiple-state  \".concat(this.props.className, \"  \").concat(classnames({\n          \"show-spinner\": this.state.status === \"processing\",\n          \"show-success\": this.state.status === \"success\",\n          \"show-fail\": this.state.status === \"fail\"\n        })),\n        color: this.props.color,\n        onClick: this.handleOnClick,\n        disabled: this.state.status !== \"default\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Popover, {\n        placement: \"top\",\n        isOpen: this.state.messageShow,\n        target: this.props.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(PopoverBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }\n      }, this.state.message)), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"spinner d-inline-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"bounce1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"bounce2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"bounce3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"icon success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"simple-icon-check\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"icon fail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"simple-icon-exclamation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }\n      }, this.props.children)));\n    }\n  }]);\n\n  return StateButton;\n}(React.Component);\n\nexport default StateButton;","map":{"version":3,"sources":["C:/Users/Hamed/Desktop/Gogo-React/src/components/StateButton.js"],"names":["React","Button","Popover","PopoverBody","classnames","StateButton","props","handleOnClick","setState","status","onClick","then","res","message","catch","err","finally","messageShow","setTimeout","state","id","className","color","children","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Button, Popover, PopoverBody } from \"reactstrap\";\r\nimport classnames from \"classnames\";\r\n\r\nclass StateButton extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      status: \"default\",\r\n      message: \"\",\r\n      messageShow: false\r\n    };\r\n  }\r\n\r\n  handleOnClick = () => {\r\n    this.setState(\r\n      {\r\n        status: \"processing\"\r\n      },\r\n      () => {\r\n        this.props\r\n          .onClick()\r\n          .then(res => {\r\n            this.setState({\r\n              status: \"success\",\r\n              message: res\r\n            });\r\n          })\r\n          .catch(err => {\r\n            this.setState({\r\n              status: \"fail\",\r\n              message: err\r\n            });\r\n          })\r\n          .finally(() => {\r\n            this.setState(\r\n              {\r\n                messageShow: true\r\n              },\r\n              () => {\r\n                setTimeout(() => {\r\n                  this.setState({\r\n                    messageShow: false,\r\n                    status: \"default\"\r\n                  });\r\n                }, 3000);\r\n              }\r\n            );\r\n          });\r\n      }\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <span>\r\n        <Button\r\n          id={this.props.id}\r\n          className={`btn-multiple-state  ${this.props.className}  ${classnames(\r\n            {\r\n              \"show-spinner\": this.state.status === \"processing\",\r\n              \"show-success\": this.state.status === \"success\",\r\n              \"show-fail\": this.state.status === \"fail\"\r\n            }\r\n          )}`}\r\n          color={this.props.color}\r\n          onClick={this.handleOnClick}\r\n          disabled={this.state.status !== \"default\"}\r\n        >\r\n          <Popover\r\n            placement=\"top\"\r\n            isOpen={this.state.messageShow}\r\n            target={this.props.id}\r\n          >\r\n            <PopoverBody>{this.state.message}</PopoverBody>\r\n          </Popover>\r\n          <span className=\"spinner d-inline-block\">\r\n            <span className=\"bounce1\" />\r\n            <span className=\"bounce2\" />\r\n            <span className=\"bounce3\" />\r\n          </span>\r\n          <span className=\"icon success\">\r\n            <i className=\"simple-icon-check\" />\r\n          </span>\r\n          <span className=\"icon fail\">\r\n            <i className=\"simple-icon-exclamation\" />\r\n          </span>\r\n          <span className=\"label\">{this.props.children}</span>\r\n        </Button>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StateButton;\r\n"]},"metadata":{},"sourceType":"module"}