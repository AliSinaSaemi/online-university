{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport React from 'react';\nimport classnames from 'classnames';\nimport KeyCode from './KeyCode';\nimport TabPane from './TabPane';\nimport { getDataAttr } from './utils';\n\nfunction noop() {}\n\nfunction getDefaultActiveKey(props) {\n  var activeKey;\n  React.Children.forEach(props.children, function (child) {\n    if (child && !activeKey && !child.props.disabled) {\n      activeKey = child.key;\n    }\n  });\n  return activeKey;\n}\n\nfunction activeKeyIsValid(props, key) {\n  var keys = React.Children.map(props.children, function (child) {\n    return child && child.key;\n  });\n  return keys.indexOf(key) >= 0;\n}\n\nvar Tabs = /*#__PURE__*/function (_React$Component) {\n  _inherits(Tabs, _React$Component);\n\n  function Tabs(props) {\n    var _this;\n\n    _classCallCheck(this, Tabs);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Tabs).call(this, props));\n\n    _this.onTabClick = function (activeKey, e) {\n      if (_this.tabBar.props.onTabClick) {\n        _this.tabBar.props.onTabClick(activeKey, e);\n      }\n\n      _this.setActiveKey(activeKey);\n    };\n\n    _this.onNavKeyDown = function (e) {\n      var keyboard = _this.props.keyboard;\n\n      if (!keyboard) {\n        return;\n      }\n\n      var eventKeyCode = e.keyCode;\n\n      if (eventKeyCode === KeyCode.RIGHT || eventKeyCode === KeyCode.DOWN) {\n        e.preventDefault();\n\n        var nextKey = _this.getNextActiveKey(true);\n\n        _this.onTabClick(nextKey);\n      } else if (eventKeyCode === KeyCode.LEFT || eventKeyCode === KeyCode.UP) {\n        e.preventDefault();\n\n        var previousKey = _this.getNextActiveKey(false);\n\n        _this.onTabClick(previousKey);\n      }\n    };\n\n    _this.onScroll = function (_ref) {\n      var target = _ref.target,\n          currentTarget = _ref.currentTarget;\n\n      if (target === currentTarget && target.scrollLeft > 0) {\n        target.scrollLeft = 0;\n      }\n    };\n\n    _this.setActiveKey = function (activeKey) {\n      if (_this.state.activeKey !== activeKey) {\n        if (!('activeKey' in _this.props)) {\n          _this.setState({\n            activeKey: activeKey\n          });\n        }\n\n        _this.props.onChange(activeKey);\n      }\n    };\n\n    _this.getNextActiveKey = function (next) {\n      var activeKey = _this.state.activeKey;\n      var children = [];\n      React.Children.forEach(_this.props.children, function (c) {\n        if (c && !c.props.disabled) {\n          if (next) {\n            children.push(c);\n          } else {\n            children.unshift(c);\n          }\n        }\n      });\n      var length = children.length;\n      var ret = length && children[0].key;\n      children.forEach(function (child, i) {\n        if (child.key === activeKey) {\n          if (i === length - 1) {\n            ret = children[0].key;\n          } else {\n            ret = children[i + 1].key;\n          }\n        }\n      });\n      return ret;\n    };\n\n    var _activeKey;\n\n    if ('activeKey' in props) {\n      _activeKey = props.activeKey;\n    } else if ('defaultActiveKey' in props) {\n      _activeKey = props.defaultActiveKey;\n    } else {\n      _activeKey = getDefaultActiveKey(props);\n    }\n\n    _this.state = {\n      activeKey: _activeKey\n    };\n    return _this;\n  }\n\n  _createClass(Tabs, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.destroy = true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _classnames;\n\n      var props = this.props;\n\n      var prefixCls = props.prefixCls,\n          navWrapper = props.navWrapper,\n          tabBarPosition = props.tabBarPosition,\n          className = props.className,\n          renderTabContent = props.renderTabContent,\n          renderTabBar = props.renderTabBar,\n          destroyInactiveTabPane = props.destroyInactiveTabPane,\n          direction = props.direction,\n          id = props.id,\n          restProps = _objectWithoutProperties(props, [\"prefixCls\", \"navWrapper\", \"tabBarPosition\", \"className\", \"renderTabContent\", \"renderTabBar\", \"destroyInactiveTabPane\", \"direction\", \"id\"]);\n\n      var cls = classnames((_classnames = {}, _defineProperty(_classnames, prefixCls, 1), _defineProperty(_classnames, \"\".concat(prefixCls, \"-\").concat(tabBarPosition), 1), _defineProperty(_classnames, className, !!className), _defineProperty(_classnames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classnames));\n      this.tabBar = renderTabBar();\n      var tabBar = React.cloneElement(this.tabBar, {\n        prefixCls: prefixCls,\n        navWrapper: navWrapper,\n        key: 'tabBar',\n        onKeyDown: this.onNavKeyDown,\n        tabBarPosition: tabBarPosition,\n        onTabClick: this.onTabClick,\n        panels: props.children,\n        activeKey: this.state.activeKey,\n        direction: this.props.direction,\n        id: id\n      });\n      var tabContent = React.cloneElement(renderTabContent(), {\n        prefixCls: prefixCls,\n        tabBarPosition: tabBarPosition,\n        activeKey: this.state.activeKey,\n        destroyInactiveTabPane: destroyInactiveTabPane,\n        children: props.children,\n        onChange: this.setActiveKey,\n        key: 'tabContent',\n        direction: this.props.direction,\n        id: id\n      });\n      var contents = [];\n\n      if (tabBarPosition === 'bottom') {\n        contents.push(tabContent, tabBar);\n      } else {\n        contents.push(tabBar, tabContent);\n      }\n\n      return React.createElement(\"div\", _extends({\n        className: cls,\n        style: props.style\n      }, getDataAttr(restProps), {\n        onScroll: this.onScroll,\n        id: id\n      }), contents);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      var newState = {};\n\n      if ('activeKey' in props) {\n        newState.activeKey = props.activeKey;\n      } else if (!activeKeyIsValid(props, state.activeKey)) {\n        newState.activeKey = getDefaultActiveKey(props);\n      }\n\n      if (Object.keys(newState).length > 0) {\n        return newState;\n      }\n\n      return null;\n    }\n  }]);\n\n  return Tabs;\n}(React.Component);\n\nTabs.defaultProps = {\n  prefixCls: 'rc-tabs',\n  destroyInactiveTabPane: false,\n  onChange: noop,\n  keyboard: true,\n  navWrapper: function navWrapper(arg) {\n    return arg;\n  },\n  tabBarPosition: 'top',\n  children: null,\n  style: {},\n  direction: 'ltr'\n};\nTabs.TabPane = TabPane;\nexport default Tabs;","map":null,"metadata":{},"sourceType":"module"}