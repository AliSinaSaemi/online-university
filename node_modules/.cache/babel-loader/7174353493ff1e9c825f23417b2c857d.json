{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Hamed\\\\Desktop\\\\Gogo-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Hamed\\\\Desktop\\\\Gogo-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Hamed\\\\Desktop\\\\Gogo-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\Hamed\\\\Desktop\\\\Gogo-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Hamed\\\\Desktop\\\\Gogo-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Hamed\\\\Desktop\\\\Gogo-React\\\\src\\\\containers\\\\wizard\\\\LastStepEnd.js\";\nimport React, { Component } from \"react\";\nimport { Card, CardBody, Form, FormGroup, Input, Label } from \"reactstrap\";\nimport IntlMessages from \"../../helpers/IntlMessages\";\nimport { Wizard, Steps, Step } from 'react-albus';\nimport { injectIntl } from 'react-intl';\nimport { BottomNavigation } from \"../../components/wizard/BottomNavigation\";\nimport { TopNavigation } from \"../../components/wizard/TopNavigation\";\n\nvar LastStepEnd = /*#__PURE__*/function (_Component) {\n  _inherits(LastStepEnd, _Component);\n\n  var _super = _createSuper(LastStepEnd);\n\n  function LastStepEnd(props) {\n    var _this;\n\n    _classCallCheck(this, LastStepEnd);\n\n    _this = _super.call(this, props);\n    _this.onClickNext = _this.onClickNext.bind(_assertThisInitialized(_this));\n    _this.onClickPrev = _this.onClickPrev.bind(_assertThisInitialized(_this));\n    _this.topNavClick = _this.topNavClick.bind(_assertThisInitialized(_this));\n    _this.state = {\n      bottomNavHidden: false,\n      topNavDisabled: false,\n      name: \"\",\n      email: \"\",\n      password: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(LastStepEnd, [{\n    key: \"topNavClick\",\n    value: function topNavClick(stepItem, push) {\n      if (this.state.topNavDisabled) {\n        return;\n      }\n\n      push(stepItem.id);\n    }\n  }, {\n    key: \"onClickNext\",\n    value: function onClickNext(goToNext, steps, step) {\n      step.isDone = true;\n\n      if (steps.length - 2 <= steps.indexOf(step)) {\n        this.setState({\n          bottomNavHidden: true,\n          topNavDisabled: true\n        });\n      }\n\n      if (steps.length - 1 <= steps.indexOf(step)) {\n        return;\n      }\n\n      goToNext();\n    }\n  }, {\n    key: \"onClickPrev\",\n    value: function onClickPrev(goToPrev, steps, step) {\n      if (steps.indexOf(step) <= 0) {\n        return;\n      }\n\n      goToPrev();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var messages = this.props.intl.messages;\n      return /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        className: \"wizard wizard-default\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Wizard, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(TopNavigation, {\n        className: \"justify-content-center\",\n        disableNav: false,\n        topNavClick: this.topNavClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Steps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Step, {\n        id: \"step1\",\n        name: messages[\"wizard.step-name-1\"],\n        desc: messages[\"wizard.step-desc-1\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"wizard-basic-step\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"forms.name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 49\n        }\n      })), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        name: \"name\",\n        placeholder: messages[\"forms.name\"],\n        value: this.state.name,\n        onChange: function onChange(e) {\n          _this2.setState({\n            name: e.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 45\n        }\n      }))))), /*#__PURE__*/React.createElement(Step, {\n        id: \"step2\",\n        name: messages[\"wizard.step-name-2\"],\n        desc: messages[\"wizard.step-desc-2\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"wizard-basic-step\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"forms.email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 49\n        }\n      })), /*#__PURE__*/React.createElement(Input, {\n        type: \"email\",\n        name: \"email\",\n        placeholder: messages[\"forms.email\"],\n        value: this.state.email,\n        onChange: function onChange(e) {\n          _this2.setState({\n            email: e.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 45\n        }\n      }))))), /*#__PURE__*/React.createElement(Step, {\n        id: \"step3\",\n        name: messages[\"wizard.step-name-3\"],\n        desc: messages[\"wizard.step-desc-3\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"wizard-basic-step\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"forms.password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 49\n        }\n      })), /*#__PURE__*/React.createElement(Input, {\n        type: \"password\",\n        name: \"password\",\n        placeholder: messages[\"forms.password\"],\n        value: this.state.password,\n        onChange: function onChange(e) {\n          _this2.setState({\n            password: e.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 45\n        }\n      }))))), /*#__PURE__*/React.createElement(Step, {\n        id: \"step4\",\n        hideTopNav: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"wizard-basic-step text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"wizard.content-thanks\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 58\n        }\n      })), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"wizard.registered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 40\n        }\n      }))))), /*#__PURE__*/React.createElement(BottomNavigation, {\n        onClickNext: this.onClickNext,\n        onClickPrev: this.onClickPrev,\n        className: \"justify-content-center \" + (this.state.bottomNavHidden && \"invisible\"),\n        prevLabel: messages[\"wizard.prev\"],\n        nextLabel: messages[\"wizard.next\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }\n      }))));\n    }\n  }]);\n\n  return LastStepEnd;\n}(Component);\n\nexport default injectIntl(LastStepEnd);","map":{"version":3,"sources":["C:/Users/Hamed/Desktop/Gogo-React/src/containers/wizard/LastStepEnd.js"],"names":["React","Component","Card","CardBody","Form","FormGroup","Input","Label","IntlMessages","Wizard","Steps","Step","injectIntl","BottomNavigation","TopNavigation","LastStepEnd","props","onClickNext","bind","onClickPrev","topNavClick","state","bottomNavHidden","topNavDisabled","name","email","password","stepItem","push","id","goToNext","steps","step","isDone","length","indexOf","setState","goToPrev","messages","intl","e","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Card, CardBody, Form, FormGroup, Input, Label } from \"reactstrap\";\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\nimport { Wizard, Steps, Step } from 'react-albus';\r\nimport { injectIntl } from 'react-intl';\r\nimport { BottomNavigation } from \"../../components/wizard/BottomNavigation\";\r\nimport { TopNavigation } from \"../../components/wizard/TopNavigation\";\r\n\r\nclass LastStepEnd extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onClickNext = this.onClickNext.bind(this);\r\n        this.onClickPrev = this.onClickPrev.bind(this);\r\n        this.topNavClick = this.topNavClick.bind(this);\r\n        this.state = {\r\n            bottomNavHidden: false,\r\n            topNavDisabled: false,\r\n\r\n            name: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n        }\r\n    }\r\n\r\n    topNavClick(stepItem, push) {\r\n        if (this.state.topNavDisabled) {\r\n            return;\r\n        }\r\n        push(stepItem.id);\r\n    }\r\n\r\n    onClickNext(goToNext, steps, step) {\r\n        step.isDone = true;\r\n        if (steps.length - 2 <= steps.indexOf(step)) {\r\n            this.setState({ bottomNavHidden: true, topNavDisabled: true });\r\n        }\r\n        if (steps.length - 1 <= steps.indexOf(step)) {\r\n            return;\r\n        }\r\n        goToNext();\r\n    }\r\n\r\n    onClickPrev(goToPrev, steps, step) {\r\n        if (steps.indexOf(step) <= 0) {\r\n            return;\r\n        }\r\n        goToPrev();\r\n    }\r\n\r\n    render() {\r\n        const { messages } = this.props.intl;\r\n        return (\r\n            <Card>\r\n                <CardBody className=\"wizard wizard-default\">\r\n                    <Wizard>\r\n                        <TopNavigation className=\"justify-content-center\" disableNav={false} topNavClick={this.topNavClick} />\r\n                        <Steps>\r\n                            <Step id=\"step1\" name={messages[\"wizard.step-name-1\"]} desc={messages[\"wizard.step-desc-1\"]}>\r\n                                <div className=\"wizard-basic-step\">\r\n                                    <Form>\r\n                                        <FormGroup>\r\n                                            <Label>\r\n                                                <IntlMessages id=\"forms.name\" />\r\n                                            </Label>\r\n                                            <Input type=\"text\" name=\"name\" placeholder={messages[\"forms.name\"]} value={this.state.name} onChange={(e) => { this.setState({ name: e.target.value }) }} />\r\n                                        </FormGroup>\r\n                                    </Form>\r\n                                </div>\r\n                            </Step>\r\n                            <Step id=\"step2\" name={messages[\"wizard.step-name-2\"]} desc={messages[\"wizard.step-desc-2\"]}>\r\n                                <div className=\"wizard-basic-step\">\r\n                                    <Form>\r\n                                        <FormGroup>\r\n                                            <Label>\r\n                                                <IntlMessages id=\"forms.email\" />\r\n                                            </Label>\r\n                                            <Input type=\"email\" name=\"email\" placeholder={messages[\"forms.email\"]} value={this.state.email} onChange={(e) => { this.setState({ email: e.target.value }) }} />\r\n                                        </FormGroup>\r\n                                    </Form>\r\n                                </div>\r\n\r\n                            </Step>\r\n                            <Step id=\"step3\" name={messages[\"wizard.step-name-3\"]} desc={messages[\"wizard.step-desc-3\"]}>\r\n\r\n                                <div className=\"wizard-basic-step\">\r\n                                    <Form>\r\n                                        <FormGroup>\r\n                                            <Label>\r\n                                                <IntlMessages id=\"forms.password\" />\r\n                                            </Label>\r\n                                            <Input type=\"password\" name=\"password\" placeholder={messages[\"forms.password\"]} value={this.state.password} onChange={(e) => { this.setState({ password: e.target.value }) }} />\r\n                                        </FormGroup>\r\n                                    </Form>\r\n                                </div>\r\n\r\n                            </Step>\r\n                            <Step id=\"step4\" hideTopNav={true}>\r\n                                <div className=\"wizard-basic-step text-center\">\r\n                                    <h2 className=\"mb-2\"><IntlMessages id=\"wizard.content-thanks\" /></h2>\r\n                                    <p><IntlMessages id=\"wizard.registered\" /></p>\r\n                                </div>\r\n                            </Step>\r\n                        </Steps>\r\n                        <BottomNavigation onClickNext={this.onClickNext} onClickPrev={this.onClickPrev} className={\"justify-content-center \" + (this.state.bottomNavHidden && \"invisible\")} prevLabel={messages[\"wizard.prev\"]} nextLabel={messages[\"wizard.next\"]} />\r\n                    </Wizard>\r\n                </CardBody>\r\n            </Card>\r\n\r\n        );\r\n    }\r\n}\r\nexport default injectIntl(LastStepEnd)\r\n"]},"metadata":{},"sourceType":"module"}