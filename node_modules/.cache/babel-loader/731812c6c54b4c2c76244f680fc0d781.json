{"ast":null,"code":"ace.define(\"ace/mode/csound_preprocessor_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var CsoundPreprocessorHighlightRules = function CsoundPreprocessorHighlightRules(embeddedRulePrefix) {\n    this.embeddedRulePrefix = embeddedRulePrefix === undefined ? \"\" : embeddedRulePrefix;\n    this.semicolonComments = {\n      token: \"comment.line.semicolon.csound\",\n      regex: \";.*$\"\n    };\n    this.comments = [{\n      token: \"punctuation.definition.comment.begin.csound\",\n      regex: \"/\\\\*\",\n      push: [{\n        token: \"punctuation.definition.comment.end.csound\",\n        regex: \"\\\\*/\",\n        next: \"pop\"\n      }, {\n        defaultToken: \"comment.block.csound\"\n      }]\n    }, {\n      token: \"comment.line.double-slash.csound\",\n      regex: \"//.*$\"\n    }, this.semicolonComments];\n    this.macroUses = [{\n      token: [\"entity.name.function.preprocessor.csound\", \"punctuation.definition.macro-parameter-value-list.begin.csound\"],\n      regex: /(\\$[A-Z_a-z]\\w*\\.?)(\\()/,\n      next: \"macro parameter value list\"\n    }, {\n      token: \"entity.name.function.preprocessor.csound\",\n      regex: /\\$[A-Z_a-z]\\w*(?:\\.|\\b)/\n    }];\n    this.numbers = [{\n      token: \"constant.numeric.float.csound\",\n      regex: /(?:\\d+[Ee][+-]?\\d+)|(?:\\d+\\.\\d*|\\d*\\.\\d+)(?:[Ee][+-]?\\d+)?/\n    }, {\n      token: [\"storage.type.number.csound\", \"constant.numeric.integer.hexadecimal.csound\"],\n      regex: /(0[Xx])([0-9A-Fa-f]+)/\n    }, {\n      token: \"constant.numeric.integer.decimal.csound\",\n      regex: /\\d+/\n    }];\n    this.bracedStringContents = [{\n      token: \"constant.character.escape.csound\",\n      regex: /\\\\(?:[\\\\abnrt\"]|[0-7]{1,3})/\n    }, {\n      token: \"constant.character.placeholder.csound\",\n      regex: /%[#0\\- +]*\\d*(?:\\.\\d+)?[diuoxXfFeEgGaAcs]/\n    }, {\n      token: \"constant.character.escape.csound\",\n      regex: /%%/\n    }];\n    this.quotedStringContents = [this.macroUses, this.bracedStringContents];\n    var start = [this.comments, {\n      token: \"keyword.preprocessor.csound\",\n      regex: /#(?:e(?:nd(?:if)?|lse)\\b|##)|@@?[ \\t]*\\d+/\n    }, {\n      token: \"keyword.preprocessor.csound\",\n      regex: /#include/,\n      push: [this.comments, {\n        token: \"string.csound\",\n        regex: /([^ \\t])(?:.*?\\1)/,\n        next: \"pop\"\n      }]\n    }, {\n      token: \"keyword.preprocessor.csound\",\n      regex: /#includestr/,\n      push: [this.comments, {\n        token: \"string.csound\",\n        regex: /([^ \\t])(?:.*?\\1)/,\n        next: \"pop\"\n      }]\n    }, {\n      token: \"keyword.preprocessor.csound\",\n      regex: /#[ \\t]*define/,\n      next: \"define directive\"\n    }, {\n      token: \"keyword.preprocessor.csound\",\n      regex: /#(?:ifn?def|undef)\\b/,\n      next: \"macro directive\"\n    }, this.macroUses];\n    this.$rules = {\n      \"start\": start,\n      \"define directive\": [this.comments, {\n        token: \"entity.name.function.preprocessor.csound\",\n        regex: /[A-Z_a-z]\\w*/\n      }, {\n        token: \"punctuation.definition.macro-parameter-name-list.begin.csound\",\n        regex: /\\(/,\n        next: \"macro parameter name list\"\n      }, {\n        token: \"punctuation.definition.macro.begin.csound\",\n        regex: /#/,\n        next: \"macro body\"\n      }],\n      \"macro parameter name list\": [{\n        token: \"variable.parameter.preprocessor.csound\",\n        regex: /[A-Z_a-z]\\w*/\n      }, {\n        token: \"punctuation.definition.macro-parameter-name-list.end.csound\",\n        regex: /\\)/,\n        next: \"define directive\"\n      }],\n      \"macro body\": [{\n        token: \"constant.character.escape.csound\",\n        regex: /\\\\#/\n      }, {\n        token: \"punctuation.definition.macro.end.csound\",\n        regex: /#/,\n        next: \"start\"\n      }, start],\n      \"macro directive\": [this.comments, {\n        token: \"entity.name.function.preprocessor.csound\",\n        regex: /[A-Z_a-z]\\w*/,\n        next: \"start\"\n      }],\n      \"macro parameter value list\": [{\n        token: \"punctuation.definition.macro-parameter-value-list.end.csound\",\n        regex: /\\)/,\n        next: \"start\"\n      }, {\n        token: \"punctuation.definition.string.begin.csound\",\n        regex: /\"/,\n        next: \"macro parameter value quoted string\"\n      }, this.pushRule({\n        token: \"punctuation.macro-parameter-value-parenthetical.begin.csound\",\n        regex: /\\(/,\n        next: \"macro parameter value parenthetical\"\n      }), {\n        token: \"punctuation.macro-parameter-value-separator.csound\",\n        regex: \"[#']\"\n      }],\n      \"macro parameter value quoted string\": [{\n        token: \"constant.character.escape.csound\",\n        regex: /\\\\[#'()]/\n      }, {\n        token: \"invalid.illegal.csound\",\n        regex: /[#'()]/\n      }, {\n        token: \"punctuation.definition.string.end.csound\",\n        regex: /\"/,\n        next: \"macro parameter value list\"\n      }, this.quotedStringContents, {\n        defaultToken: \"string.quoted.csound\"\n      }],\n      \"macro parameter value parenthetical\": [{\n        token: \"constant.character.escape.csound\",\n        regex: /\\\\\\)/\n      }, this.popRule({\n        token: \"punctuation.macro-parameter-value-parenthetical.end.csound\",\n        regex: /\\)/\n      }), this.pushRule({\n        token: \"punctuation.macro-parameter-value-parenthetical.begin.csound\",\n        regex: /\\(/,\n        next: \"macro parameter value parenthetical\"\n      }), start]\n    };\n  };\n\n  oop.inherits(CsoundPreprocessorHighlightRules, TextHighlightRules);\n  (function () {\n    this.pushRule = function (params) {\n      if (Array.isArray(params.next)) {\n        for (var i = 0; i < params.next.length; i++) {\n          params.next[i] = this.embeddedRulePrefix + params.next[i];\n        }\n      }\n\n      return {\n        regex: params.regex,\n        onMatch: function onMatch(value, currentState, stack, line) {\n          if (stack.length === 0) stack.push(currentState);\n\n          if (Array.isArray(params.next)) {\n            for (var i = 0; i < params.next.length; i++) {\n              stack.push(params.next[i]);\n            }\n          } else {\n            stack.push(params.next);\n          }\n\n          this.next = stack[stack.length - 1];\n          return params.token;\n        },\n\n        get next() {\n          return Array.isArray(params.next) ? params.next[params.next.length - 1] : params.next;\n        },\n\n        set next(next) {\n          if (!Array.isArray(params.next)) {\n            params.next = next;\n          }\n        },\n\n        get token() {\n          return params.token;\n        }\n\n      };\n    };\n\n    this.popRule = function (params) {\n      if (params.next) {\n        params.next = this.embeddedRulePrefix + params.next;\n      }\n\n      return {\n        regex: params.regex,\n        onMatch: function onMatch(value, currentState, stack, line) {\n          stack.pop();\n\n          if (params.next) {\n            stack.push(params.next);\n            this.next = stack[stack.length - 1];\n          } else {\n            this.next = stack.length > 1 ? stack[stack.length - 1] : stack.pop();\n          }\n\n          return params.token;\n        }\n      };\n    };\n  }).call(CsoundPreprocessorHighlightRules.prototype);\n  exports.CsoundPreprocessorHighlightRules = CsoundPreprocessorHighlightRules;\n});\nace.define(\"ace/mode/csound_score_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/csound_preprocessor_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var CsoundPreprocessorHighlightRules = require(\"./csound_preprocessor_highlight_rules\").CsoundPreprocessorHighlightRules;\n\n  var CsoundScoreHighlightRules = function CsoundScoreHighlightRules(embeddedRulePrefix) {\n    CsoundPreprocessorHighlightRules.call(this, embeddedRulePrefix);\n    this.quotedStringContents.push({\n      token: \"invalid.illegal.csound-score\",\n      regex: /[^\"]*$/\n    });\n    var start = this.$rules.start;\n    start.push({\n      token: \"keyword.control.csound-score\",\n      regex: /[abCdefiqstvxy]/\n    }, {\n      token: \"invalid.illegal.csound-score\",\n      regex: /w/\n    }, {\n      token: \"constant.numeric.language.csound-score\",\n      regex: /z/\n    }, {\n      token: [\"keyword.control.csound-score\", \"constant.numeric.integer.decimal.csound-score\"],\n      regex: /([nNpP][pP])(\\d+)/\n    }, {\n      token: \"keyword.other.csound-score\",\n      regex: /[mn]/,\n      push: [{\n        token: \"empty\",\n        regex: /$/,\n        next: \"pop\"\n      }, this.comments, {\n        token: \"entity.name.label.csound-score\",\n        regex: /[A-Z_a-z]\\w*/\n      }]\n    }, {\n      token: \"keyword.preprocessor.csound-score\",\n      regex: /r\\b/,\n      next: \"repeat section\"\n    }, this.numbers, {\n      token: \"keyword.operator.csound-score\",\n      regex: \"[!+\\\\-*/^%&|<>#~.]\"\n    }, this.pushRule({\n      token: \"punctuation.definition.string.begin.csound-score\",\n      regex: /\"/,\n      next: \"quoted string\"\n    }), this.pushRule({\n      token: \"punctuation.braced-loop.begin.csound-score\",\n      regex: /{/,\n      next: \"loop after left brace\"\n    }));\n    this.addRules({\n      \"repeat section\": [{\n        token: \"empty\",\n        regex: /$/,\n        next: \"start\"\n      }, this.comments, {\n        token: \"constant.numeric.integer.decimal.csound-score\",\n        regex: /\\d+/,\n        next: \"repeat section before label\"\n      }],\n      \"repeat section before label\": [{\n        token: \"empty\",\n        regex: /$/,\n        next: \"start\"\n      }, this.comments, {\n        token: \"entity.name.label.csound-score\",\n        regex: /[A-Z_a-z]\\w*/,\n        next: \"start\"\n      }],\n      \"quoted string\": [this.popRule({\n        token: \"punctuation.definition.string.end.csound-score\",\n        regex: /\"/\n      }), this.quotedStringContents, {\n        defaultToken: \"string.quoted.csound-score\"\n      }],\n      \"loop after left brace\": [this.popRule({\n        token: \"constant.numeric.integer.decimal.csound-score\",\n        regex: /\\d+/,\n        next: \"loop after repeat count\"\n      }), this.comments, {\n        token: \"invalid.illegal.csound\",\n        regex: /\\S.*/\n      }],\n      \"loop after repeat count\": [this.popRule({\n        token: \"entity.name.function.preprocessor.csound-score\",\n        regex: /[A-Z_a-z]\\w*\\b/,\n        next: \"loop after macro name\"\n      }), this.comments, {\n        token: \"invalid.illegal.csound\",\n        regex: /\\S.*/\n      }],\n      \"loop after macro name\": [start, this.popRule({\n        token: \"punctuation.braced-loop.end.csound-score\",\n        regex: /}/\n      })]\n    });\n    this.normalizeRules();\n  };\n\n  oop.inherits(CsoundScoreHighlightRules, CsoundPreprocessorHighlightRules);\n  exports.CsoundScoreHighlightRules = CsoundScoreHighlightRules;\n});\nace.define(\"ace/mode/lua_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var LuaHighlightRules = function LuaHighlightRules() {\n    var keywords = \"break|do|else|elseif|end|for|function|if|in|local|repeat|\" + \"return|then|until|while|or|and|not\";\n    var builtinConstants = \"true|false|nil|_G|_VERSION\";\n    var functions = \"string|xpcall|package|tostring|print|os|unpack|require|\" + \"getfenv|setmetatable|next|assert|tonumber|io|rawequal|\" + \"collectgarbage|getmetatable|module|rawset|math|debug|\" + \"pcall|table|newproxy|type|coroutine|_G|select|gcinfo|\" + \"pairs|rawget|loadstring|ipairs|_VERSION|dofile|setfenv|\" + \"load|error|loadfile|\" + \"sub|upper|len|gfind|rep|find|match|char|dump|gmatch|\" + \"reverse|byte|format|gsub|lower|preload|loadlib|loaded|\" + \"loaders|cpath|config|path|seeall|exit|setlocale|date|\" + \"getenv|difftime|remove|time|clock|tmpname|rename|execute|\" + \"lines|write|close|flush|open|output|type|read|stderr|\" + \"stdin|input|stdout|popen|tmpfile|log|max|acos|huge|\" + \"ldexp|pi|cos|tanh|pow|deg|tan|cosh|sinh|random|randomseed|\" + \"frexp|ceil|floor|rad|abs|sqrt|modf|asin|min|mod|fmod|log10|\" + \"atan2|exp|sin|atan|getupvalue|debug|sethook|getmetatable|\" + \"gethook|setmetatable|setlocal|traceback|setfenv|getinfo|\" + \"setupvalue|getlocal|getregistry|getfenv|setn|insert|getn|\" + \"foreachi|maxn|foreach|concat|sort|remove|resume|yield|\" + \"status|wrap|create|running|\" + \"__add|__sub|__mod|__unm|__concat|__lt|__index|__call|__gc|__metatable|\" + \"__mul|__div|__pow|__len|__eq|__le|__newindex|__tostring|__mode|__tonumber\";\n    var stdLibaries = \"string|package|os|io|math|debug|table|coroutine\";\n    var deprecatedIn5152 = \"setn|foreach|foreachi|gcinfo|log10|maxn\";\n    var keywordMapper = this.createKeywordMapper({\n      \"keyword\": keywords,\n      \"support.function\": functions,\n      \"keyword.deprecated\": deprecatedIn5152,\n      \"constant.library\": stdLibaries,\n      \"constant.language\": builtinConstants,\n      \"variable.language\": \"self\"\n    }, \"identifier\");\n    var decimalInteger = \"(?:(?:[1-9]\\\\d*)|(?:0))\";\n    var hexInteger = \"(?:0[xX][\\\\dA-Fa-f]+)\";\n    var integer = \"(?:\" + decimalInteger + \"|\" + hexInteger + \")\";\n    var fraction = \"(?:\\\\.\\\\d+)\";\n    var intPart = \"(?:\\\\d+)\";\n    var pointFloat = \"(?:(?:\" + intPart + \"?\" + fraction + \")|(?:\" + intPart + \"\\\\.))\";\n    var floatNumber = \"(?:\" + pointFloat + \")\";\n    this.$rules = {\n      \"start\": [{\n        stateName: \"bracketedComment\",\n        onMatch: function onMatch(value, currentState, stack) {\n          stack.unshift(this.next, value.length - 2, currentState);\n          return \"comment\";\n        },\n        regex: /\\-\\-\\[=*\\[/,\n        next: [{\n          onMatch: function onMatch(value, currentState, stack) {\n            if (value.length == stack[1]) {\n              stack.shift();\n              stack.shift();\n              this.next = stack.shift();\n            } else {\n              this.next = \"\";\n            }\n\n            return \"comment\";\n          },\n          regex: /\\]=*\\]/,\n          next: \"start\"\n        }, {\n          defaultToken: \"comment\"\n        }]\n      }, {\n        token: \"comment\",\n        regex: \"\\\\-\\\\-.*$\"\n      }, {\n        stateName: \"bracketedString\",\n        onMatch: function onMatch(value, currentState, stack) {\n          stack.unshift(this.next, value.length, currentState);\n          return \"string.start\";\n        },\n        regex: /\\[=*\\[/,\n        next: [{\n          onMatch: function onMatch(value, currentState, stack) {\n            if (value.length == stack[1]) {\n              stack.shift();\n              stack.shift();\n              this.next = stack.shift();\n            } else {\n              this.next = \"\";\n            }\n\n            return \"string.end\";\n          },\n          regex: /\\]=*\\]/,\n          next: \"start\"\n        }, {\n          defaultToken: \"string\"\n        }]\n      }, {\n        token: \"string\",\n        // \" string\n        regex: '\"(?:[^\\\\\\\\]|\\\\\\\\.)*?\"'\n      }, {\n        token: \"string\",\n        // ' string\n        regex: \"'(?:[^\\\\\\\\]|\\\\\\\\.)*?'\"\n      }, {\n        token: \"constant.numeric\",\n        // float\n        regex: floatNumber\n      }, {\n        token: \"constant.numeric\",\n        // integer\n        regex: integer + \"\\\\b\"\n      }, {\n        token: keywordMapper,\n        regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n      }, {\n        token: \"keyword.operator\",\n        regex: \"\\\\+|\\\\-|\\\\*|\\\\/|%|\\\\#|\\\\^|~|<|>|<=|=>|==|~=|=|\\\\:|\\\\.\\\\.\\\\.|\\\\.\\\\.\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"[\\\\[\\\\(\\\\{]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\]\\\\)\\\\}]\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+|\\\\w+\"\n      }]\n    };\n    this.normalizeRules();\n  };\n\n  oop.inherits(LuaHighlightRules, TextHighlightRules);\n  exports.LuaHighlightRules = LuaHighlightRules;\n});\nace.define(\"ace/mode/python_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var PythonHighlightRules = function PythonHighlightRules() {\n    var keywords = \"and|as|assert|break|class|continue|def|del|elif|else|except|exec|\" + \"finally|for|from|global|if|import|in|is|lambda|not|or|pass|print|\" + \"raise|return|try|while|with|yield|async|await|nonlocal\";\n    var builtinConstants = \"True|False|None|NotImplemented|Ellipsis|__debug__\";\n    var builtinFunctions = \"abs|divmod|input|open|staticmethod|all|enumerate|int|ord|str|any|\" + \"eval|isinstance|pow|sum|basestring|execfile|issubclass|print|super|\" + \"binfile|bin|iter|property|tuple|bool|filter|len|range|type|bytearray|\" + \"float|list|raw_input|unichr|callable|format|locals|reduce|unicode|\" + \"chr|frozenset|long|reload|vars|classmethod|getattr|map|repr|xrange|\" + \"cmp|globals|max|reversed|zip|compile|hasattr|memoryview|round|\" + \"__import__|complex|hash|min|apply|delattr|help|next|setattr|set|\" + \"buffer|dict|hex|object|slice|coerce|dir|id|oct|sorted|intern|\" + \"ascii|breakpoint|bytes\";\n    var keywordMapper = this.createKeywordMapper({\n      \"invalid.deprecated\": \"debugger\",\n      \"support.function\": builtinFunctions,\n      \"variable.language\": \"self|cls\",\n      \"constant.language\": builtinConstants,\n      \"keyword\": keywords\n    }, \"identifier\");\n    var strPre = \"[uU]?\";\n    var strRawPre = \"[rR]\";\n    var strFormatPre = \"[fF]\";\n    var strRawFormatPre = \"(?:[rR][fF]|[fF][rR])\";\n    var decimalInteger = \"(?:(?:[1-9]\\\\d*)|(?:0))\";\n    var octInteger = \"(?:0[oO]?[0-7]+)\";\n    var hexInteger = \"(?:0[xX][\\\\dA-Fa-f]+)\";\n    var binInteger = \"(?:0[bB][01]+)\";\n    var integer = \"(?:\" + decimalInteger + \"|\" + octInteger + \"|\" + hexInteger + \"|\" + binInteger + \")\";\n    var exponent = \"(?:[eE][+-]?\\\\d+)\";\n    var fraction = \"(?:\\\\.\\\\d+)\";\n    var intPart = \"(?:\\\\d+)\";\n    var pointFloat = \"(?:(?:\" + intPart + \"?\" + fraction + \")|(?:\" + intPart + \"\\\\.))\";\n    var exponentFloat = \"(?:(?:\" + pointFloat + \"|\" + intPart + \")\" + exponent + \")\";\n    var floatNumber = \"(?:\" + exponentFloat + \"|\" + pointFloat + \")\";\n    var stringEscape = \"\\\\\\\\(x[0-9A-Fa-f]{2}|[0-7]{3}|[\\\\\\\\abfnrtv'\\\"]|U[0-9A-Fa-f]{8}|u[0-9A-Fa-f]{4})\";\n    this.$rules = {\n      \"start\": [{\n        token: \"comment\",\n        regex: \"#.*$\"\n      }, {\n        token: \"string\",\n        // multi line \"\"\" string start\n        regex: strPre + '\"{3}',\n        next: \"qqstring3\"\n      }, {\n        token: \"string\",\n        // \" string\n        regex: strPre + '\"(?=.)',\n        next: \"qqstring\"\n      }, {\n        token: \"string\",\n        // multi line ''' string start\n        regex: strPre + \"'{3}\",\n        next: \"qstring3\"\n      }, {\n        token: \"string\",\n        // ' string\n        regex: strPre + \"'(?=.)\",\n        next: \"qstring\"\n      }, {\n        token: \"string\",\n        regex: strRawPre + '\"{3}',\n        next: \"rawqqstring3\"\n      }, {\n        token: \"string\",\n        regex: strRawPre + '\"(?=.)',\n        next: \"rawqqstring\"\n      }, {\n        token: \"string\",\n        regex: strRawPre + \"'{3}\",\n        next: \"rawqstring3\"\n      }, {\n        token: \"string\",\n        regex: strRawPre + \"'(?=.)\",\n        next: \"rawqstring\"\n      }, {\n        token: \"string\",\n        regex: strFormatPre + '\"{3}',\n        next: \"fqqstring3\"\n      }, {\n        token: \"string\",\n        regex: strFormatPre + '\"(?=.)',\n        next: \"fqqstring\"\n      }, {\n        token: \"string\",\n        regex: strFormatPre + \"'{3}\",\n        next: \"fqstring3\"\n      }, {\n        token: \"string\",\n        regex: strFormatPre + \"'(?=.)\",\n        next: \"fqstring\"\n      }, {\n        token: \"string\",\n        regex: strRawFormatPre + '\"{3}',\n        next: \"rfqqstring3\"\n      }, {\n        token: \"string\",\n        regex: strRawFormatPre + '\"(?=.)',\n        next: \"rfqqstring\"\n      }, {\n        token: \"string\",\n        regex: strRawFormatPre + \"'{3}\",\n        next: \"rfqstring3\"\n      }, {\n        token: \"string\",\n        regex: strRawFormatPre + \"'(?=.)\",\n        next: \"rfqstring\"\n      }, {\n        token: \"keyword.operator\",\n        regex: \"\\\\+|\\\\-|\\\\*|\\\\*\\\\*|\\\\/|\\\\/\\\\/|%|@|<<|>>|&|\\\\||\\\\^|~|<|>|<=|=>|==|!=|<>|=\"\n      }, {\n        token: \"punctuation\",\n        regex: \",|:|;|\\\\->|\\\\+=|\\\\-=|\\\\*=|\\\\/=|\\\\/\\\\/=|%=|@=|&=|\\\\|=|^=|>>=|<<=|\\\\*\\\\*=\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"[\\\\[\\\\(\\\\{]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\]\\\\)\\\\}]\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }, {\n        include: \"constants\"\n      }],\n      \"qqstring3\": [{\n        token: \"constant.language.escape\",\n        regex: stringEscape\n      }, {\n        token: \"string\",\n        // multi line \"\"\" string end\n        regex: '\"{3}',\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"qstring3\": [{\n        token: \"constant.language.escape\",\n        regex: stringEscape\n      }, {\n        token: \"string\",\n        // multi line ''' string end\n        regex: \"'{3}\",\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"qqstring\": [{\n        token: \"constant.language.escape\",\n        regex: stringEscape\n      }, {\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        next: \"qqstring\"\n      }, {\n        token: \"string\",\n        regex: '\"|$',\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"qstring\": [{\n        token: \"constant.language.escape\",\n        regex: stringEscape\n      }, {\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        next: \"qstring\"\n      }, {\n        token: \"string\",\n        regex: \"'|$\",\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"rawqqstring3\": [{\n        token: \"string\",\n        // multi line \"\"\" string end\n        regex: '\"{3}',\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"rawqstring3\": [{\n        token: \"string\",\n        // multi line ''' string end\n        regex: \"'{3}\",\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"rawqqstring\": [{\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        next: \"rawqqstring\"\n      }, {\n        token: \"string\",\n        regex: '\"|$',\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"rawqstring\": [{\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        next: \"rawqstring\"\n      }, {\n        token: \"string\",\n        regex: \"'|$\",\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"fqqstring3\": [{\n        token: \"constant.language.escape\",\n        regex: stringEscape\n      }, {\n        token: \"string\",\n        // multi line \"\"\" string end\n        regex: '\"{3}',\n        next: \"start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"{\",\n        push: \"fqstringParRules\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"fqstring3\": [{\n        token: \"constant.language.escape\",\n        regex: stringEscape\n      }, {\n        token: \"string\",\n        // multi line ''' string end\n        regex: \"'{3}\",\n        next: \"start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"{\",\n        push: \"fqstringParRules\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"fqqstring\": [{\n        token: \"constant.language.escape\",\n        regex: stringEscape\n      }, {\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        next: \"fqqstring\"\n      }, {\n        token: \"string\",\n        regex: '\"|$',\n        next: \"start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"{\",\n        push: \"fqstringParRules\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"fqstring\": [{\n        token: \"constant.language.escape\",\n        regex: stringEscape\n      }, {\n        token: \"string\",\n        regex: \"'|$\",\n        next: \"start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"{\",\n        push: \"fqstringParRules\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"rfqqstring3\": [{\n        token: \"string\",\n        // multi line \"\"\" string end\n        regex: '\"{3}',\n        next: \"start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"{\",\n        push: \"fqstringParRules\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"rfqstring3\": [{\n        token: \"string\",\n        // multi line ''' string end\n        regex: \"'{3}\",\n        next: \"start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"{\",\n        push: \"fqstringParRules\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"rfqqstring\": [{\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        next: \"rfqqstring\"\n      }, {\n        token: \"string\",\n        regex: '\"|$',\n        next: \"start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"{\",\n        push: \"fqstringParRules\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"rfqstring\": [{\n        token: \"string\",\n        regex: \"'|$\",\n        next: \"start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"{\",\n        push: \"fqstringParRules\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"fqstringParRules\": [{\n        //TODO: nested {}\n        token: \"paren.lparen\",\n        regex: \"[\\\\[\\\\(]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\]\\\\)]\"\n      }, {\n        token: \"string\",\n        regex: \"\\\\s+\"\n      }, {\n        token: \"string\",\n        regex: \"'(.)*'\"\n      }, {\n        token: \"string\",\n        regex: '\"(.)*\"'\n      }, {\n        token: \"function.support\",\n        regex: \"(!s|!r|!a)\"\n      }, {\n        include: \"constants\"\n      }, {\n        token: 'paren.rparen',\n        regex: \"}\",\n        next: 'pop'\n      }, {\n        token: 'paren.lparen',\n        regex: \"{\",\n        push: \"fqstringParRules\"\n      }],\n      \"constants\": [{\n        token: \"constant.numeric\",\n        // imaginary\n        regex: \"(?:\" + floatNumber + \"|\\\\d+)[jJ]\\\\b\"\n      }, {\n        token: \"constant.numeric\",\n        // float\n        regex: floatNumber\n      }, {\n        token: \"constant.numeric\",\n        // long integer\n        regex: integer + \"[lL]\\\\b\"\n      }, {\n        token: \"constant.numeric\",\n        // integer\n        regex: integer + \"\\\\b\"\n      }, {\n        token: [\"punctuation\", \"function.support\"],\n        // method\n        regex: \"(\\\\.)([a-zA-Z_]+)\\\\b\"\n      }, {\n        token: keywordMapper,\n        regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n      }]\n    };\n    this.normalizeRules();\n  };\n\n  oop.inherits(PythonHighlightRules, TextHighlightRules);\n  exports.PythonHighlightRules = PythonHighlightRules;\n});\nace.define(\"ace/mode/csound_orchestra_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/lang\", \"ace/lib/oop\", \"ace/mode/csound_preprocessor_highlight_rules\", \"ace/mode/csound_score_highlight_rules\", \"ace/mode/lua_highlight_rules\", \"ace/mode/python_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var lang = require(\"../lib/lang\");\n\n  var oop = require(\"../lib/oop\");\n\n  var CsoundPreprocessorHighlightRules = require(\"./csound_preprocessor_highlight_rules\").CsoundPreprocessorHighlightRules;\n\n  var CsoundScoreHighlightRules = require(\"./csound_score_highlight_rules\").CsoundScoreHighlightRules;\n\n  var LuaHighlightRules = require(\"./lua_highlight_rules\").LuaHighlightRules;\n\n  var PythonHighlightRules = require(\"./python_highlight_rules\").PythonHighlightRules;\n\n  var CsoundOrchestraHighlightRules = function CsoundOrchestraHighlightRules(embeddedRulePrefix) {\n    CsoundPreprocessorHighlightRules.call(this, embeddedRulePrefix);\n    var opcodes = [\"ATSadd\", \"ATSaddnz\", \"ATSbufread\", \"ATScross\", \"ATSinfo\", \"ATSinterpread\", \"ATSpartialtap\", \"ATSread\", \"ATSreadnz\", \"ATSsinnoi\", \"FLbox\", \"FLbutBank\", \"FLbutton\", \"FLcloseButton\", \"FLcolor\", \"FLcolor2\", \"FLcount\", \"FLexecButton\", \"FLgetsnap\", \"FLgroup\", \"FLgroupEnd\", \"FLgroup_end\", \"FLhide\", \"FLhvsBox\", \"FLhvsBoxSetValue\", \"FLjoy\", \"FLkeyIn\", \"FLknob\", \"FLlabel\", \"FLloadsnap\", \"FLmouse\", \"FLpack\", \"FLpackEnd\", \"FLpack_end\", \"FLpanel\", \"FLpanelEnd\", \"FLpanel_end\", \"FLprintk\", \"FLprintk2\", \"FLroller\", \"FLrun\", \"FLsavesnap\", \"FLscroll\", \"FLscrollEnd\", \"FLscroll_end\", \"FLsetAlign\", \"FLsetBox\", \"FLsetColor\", \"FLsetColor2\", \"FLsetFont\", \"FLsetPosition\", \"FLsetSize\", \"FLsetSnapGroup\", \"FLsetText\", \"FLsetTextColor\", \"FLsetTextSize\", \"FLsetTextType\", \"FLsetVal\", \"FLsetVal_i\", \"FLsetVali\", \"FLsetsnap\", \"FLshow\", \"FLslidBnk\", \"FLslidBnk2\", \"FLslidBnk2Set\", \"FLslidBnk2Setk\", \"FLslidBnkGetHandle\", \"FLslidBnkSet\", \"FLslidBnkSetk\", \"FLslider\", \"FLtabs\", \"FLtabsEnd\", \"FLtabs_end\", \"FLtext\", \"FLupdate\", \"FLvalue\", \"FLvkeybd\", \"FLvslidBnk\", \"FLvslidBnk2\", \"FLxyin\", \"JackoAudioIn\", \"JackoAudioInConnect\", \"JackoAudioOut\", \"JackoAudioOutConnect\", \"JackoFreewheel\", \"JackoInfo\", \"JackoInit\", \"JackoMidiInConnect\", \"JackoMidiOut\", \"JackoMidiOutConnect\", \"JackoNoteOut\", \"JackoOn\", \"JackoTransport\", \"K35_hpf\", \"K35_lpf\", \"MixerClear\", \"MixerGetLevel\", \"MixerReceive\", \"MixerSend\", \"MixerSetLevel\", \"MixerSetLevel_i\", \"OSCbundle\", \"OSCcount\", \"OSCinit\", \"OSCinitM\", \"OSClisten\", \"OSCraw\", \"OSCsend\", \"OSCsend_lo\", \"S\", \"STKBandedWG\", \"STKBeeThree\", \"STKBlowBotl\", \"STKBlowHole\", \"STKBowed\", \"STKBrass\", \"STKClarinet\", \"STKDrummer\", \"STKFMVoices\", \"STKFlute\", \"STKHevyMetl\", \"STKMandolin\", \"STKModalBar\", \"STKMoog\", \"STKPercFlut\", \"STKPlucked\", \"STKResonate\", \"STKRhodey\", \"STKSaxofony\", \"STKShakers\", \"STKSimple\", \"STKSitar\", \"STKStifKarp\", \"STKTubeBell\", \"STKVoicForm\", \"STKWhistle\", \"STKWurley\", \"a\", \"abs\", \"active\", \"adsr\", \"adsyn\", \"adsynt\", \"adsynt2\", \"aftouch\", \"alpass\", \"alwayson\", \"ampdb\", \"ampdbfs\", \"ampmidi\", \"ampmidicurve\", \"ampmidid\", \"areson\", \"aresonk\", \"atone\", \"atonek\", \"atonex\", \"babo\", \"balance\", \"balance2\", \"bamboo\", \"barmodel\", \"bbcutm\", \"bbcuts\", \"beadsynt\", \"beosc\", \"betarand\", \"bexprnd\", \"bformdec1\", \"bformenc1\", \"binit\", \"biquad\", \"biquada\", \"birnd\", \"bpf\", \"bpfcos\", \"bqrez\", \"butbp\", \"butbr\", \"buthp\", \"butlp\", \"butterbp\", \"butterbr\", \"butterhp\", \"butterlp\", \"button\", \"buzz\", \"c2r\", \"cabasa\", \"cauchy\", \"cauchyi\", \"cbrt\", \"ceil\", \"cell\", \"cent\", \"centroid\", \"ceps\", \"cepsinv\", \"chanctrl\", \"changed2\", \"chani\", \"chano\", \"chebyshevpoly\", \"checkbox\", \"chn_S\", \"chn_a\", \"chn_k\", \"chnclear\", \"chnexport\", \"chnget\", \"chngeta\", \"chngeti\", \"chngetk\", \"chngetks\", \"chngets\", \"chnmix\", \"chnparams\", \"chnset\", \"chnseta\", \"chnseti\", \"chnsetk\", \"chnsetks\", \"chnsets\", \"chuap\", \"clear\", \"clfilt\", \"clip\", \"clockoff\", \"clockon\", \"cmp\", \"cmplxprod\", \"comb\", \"combinv\", \"compilecsd\", \"compileorc\", \"compilestr\", \"compress\", \"compress2\", \"connect\", \"control\", \"convle\", \"convolve\", \"copya2ftab\", \"copyf2array\", \"cos\", \"cosh\", \"cosinv\", \"cosseg\", \"cossegb\", \"cossegr\", \"cps2pch\", \"cpsmidi\", \"cpsmidib\", \"cpsmidinn\", \"cpsoct\", \"cpspch\", \"cpstmid\", \"cpstun\", \"cpstuni\", \"cpsxpch\", \"cpumeter\", \"cpuprc\", \"cross2\", \"crossfm\", \"crossfmi\", \"crossfmpm\", \"crossfmpmi\", \"crosspm\", \"crosspmi\", \"crunch\", \"ctlchn\", \"ctrl14\", \"ctrl21\", \"ctrl7\", \"ctrlinit\", \"cuserrnd\", \"dam\", \"date\", \"dates\", \"db\", \"dbamp\", \"dbfsamp\", \"dcblock\", \"dcblock2\", \"dconv\", \"dct\", \"dctinv\", \"deinterleave\", \"delay\", \"delay1\", \"delayk\", \"delayr\", \"delayw\", \"deltap\", \"deltap3\", \"deltapi\", \"deltapn\", \"deltapx\", \"deltapxw\", \"denorm\", \"diff\", \"diode_ladder\", \"directory\", \"diskgrain\", \"diskin\", \"diskin2\", \"dispfft\", \"display\", \"distort\", \"distort1\", \"divz\", \"doppler\", \"dot\", \"downsamp\", \"dripwater\", \"dssiactivate\", \"dssiaudio\", \"dssictls\", \"dssiinit\", \"dssilist\", \"dumpk\", \"dumpk2\", \"dumpk3\", \"dumpk4\", \"duserrnd\", \"dust\", \"dust2\", \"envlpx\", \"envlpxr\", \"ephasor\", \"eqfil\", \"evalstr\", \"event\", \"event_i\", \"exciter\", \"exitnow\", \"exp\", \"expcurve\", \"expon\", \"exprand\", \"exprandi\", \"expseg\", \"expsega\", \"expsegb\", \"expsegba\", \"expsegr\", \"fareylen\", \"fareyleni\", \"faustaudio\", \"faustcompile\", \"faustctl\", \"faustdsp\", \"faustgen\", \"faustplay\", \"fft\", \"fftinv\", \"ficlose\", \"filebit\", \"filelen\", \"filenchnls\", \"filepeak\", \"filescal\", \"filesr\", \"filevalid\", \"fillarray\", \"filter2\", \"fin\", \"fini\", \"fink\", \"fiopen\", \"flanger\", \"flashtxt\", \"flooper\", \"flooper2\", \"floor\", \"fluidAllOut\", \"fluidCCi\", \"fluidCCk\", \"fluidControl\", \"fluidEngine\", \"fluidInfo\", \"fluidLoad\", \"fluidNote\", \"fluidOut\", \"fluidProgramSelect\", \"fluidSetInterpMethod\", \"fmanal\", \"fmax\", \"fmb3\", \"fmbell\", \"fmin\", \"fmmetal\", \"fmod\", \"fmpercfl\", \"fmrhode\", \"fmvoice\", \"fmwurlie\", \"fof\", \"fof2\", \"fofilter\", \"fog\", \"fold\", \"follow\", \"follow2\", \"foscil\", \"foscili\", \"fout\", \"fouti\", \"foutir\", \"foutk\", \"fprintks\", \"fprints\", \"frac\", \"fractalnoise\", \"framebuffer\", \"freeverb\", \"ftaudio\", \"ftchnls\", \"ftconv\", \"ftcps\", \"ftexists\", \"ftfree\", \"ftgen\", \"ftgenonce\", \"ftgentmp\", \"ftlen\", \"ftload\", \"ftloadk\", \"ftlptim\", \"ftmorf\", \"ftom\", \"ftprint\", \"ftresize\", \"ftresizei\", \"ftsamplebank\", \"ftsave\", \"ftsavek\", \"ftslice\", \"ftsr\", \"gain\", \"gainslider\", \"gauss\", \"gaussi\", \"gausstrig\", \"gbuzz\", \"genarray\", \"genarray_i\", \"gendy\", \"gendyc\", \"gendyx\", \"getcfg\", \"getcol\", \"getftargs\", \"getrow\", \"getrowlin\", \"getseed\", \"gogobel\", \"grain\", \"grain2\", \"grain3\", \"granule\", \"gtf\", \"guiro\", \"harmon\", \"harmon2\", \"harmon3\", \"harmon4\", \"hdf5read\", \"hdf5write\", \"hilbert\", \"hilbert2\", \"hrtfearly\", \"hrtfmove\", \"hrtfmove2\", \"hrtfreverb\", \"hrtfstat\", \"hsboscil\", \"hvs1\", \"hvs2\", \"hvs3\", \"hypot\", \"i\", \"ihold\", \"imagecreate\", \"imagefree\", \"imagegetpixel\", \"imageload\", \"imagesave\", \"imagesetpixel\", \"imagesize\", \"in\", \"in32\", \"inch\", \"inh\", \"init\", \"initc14\", \"initc21\", \"initc7\", \"inleta\", \"inletf\", \"inletk\", \"inletkid\", \"inletv\", \"ino\", \"inq\", \"inrg\", \"ins\", \"insglobal\", \"insremot\", \"int\", \"integ\", \"interleave\", \"interp\", \"invalue\", \"inx\", \"inz\", \"jacktransport\", \"jitter\", \"jitter2\", \"joystick\", \"jspline\", \"k\", \"la_i_add_mc\", \"la_i_add_mr\", \"la_i_add_vc\", \"la_i_add_vr\", \"la_i_assign_mc\", \"la_i_assign_mr\", \"la_i_assign_t\", \"la_i_assign_vc\", \"la_i_assign_vr\", \"la_i_conjugate_mc\", \"la_i_conjugate_mr\", \"la_i_conjugate_vc\", \"la_i_conjugate_vr\", \"la_i_distance_vc\", \"la_i_distance_vr\", \"la_i_divide_mc\", \"la_i_divide_mr\", \"la_i_divide_vc\", \"la_i_divide_vr\", \"la_i_dot_mc\", \"la_i_dot_mc_vc\", \"la_i_dot_mr\", \"la_i_dot_mr_vr\", \"la_i_dot_vc\", \"la_i_dot_vr\", \"la_i_get_mc\", \"la_i_get_mr\", \"la_i_get_vc\", \"la_i_get_vr\", \"la_i_invert_mc\", \"la_i_invert_mr\", \"la_i_lower_solve_mc\", \"la_i_lower_solve_mr\", \"la_i_lu_det_mc\", \"la_i_lu_det_mr\", \"la_i_lu_factor_mc\", \"la_i_lu_factor_mr\", \"la_i_lu_solve_mc\", \"la_i_lu_solve_mr\", \"la_i_mc_create\", \"la_i_mc_set\", \"la_i_mr_create\", \"la_i_mr_set\", \"la_i_multiply_mc\", \"la_i_multiply_mr\", \"la_i_multiply_vc\", \"la_i_multiply_vr\", \"la_i_norm1_mc\", \"la_i_norm1_mr\", \"la_i_norm1_vc\", \"la_i_norm1_vr\", \"la_i_norm_euclid_mc\", \"la_i_norm_euclid_mr\", \"la_i_norm_euclid_vc\", \"la_i_norm_euclid_vr\", \"la_i_norm_inf_mc\", \"la_i_norm_inf_mr\", \"la_i_norm_inf_vc\", \"la_i_norm_inf_vr\", \"la_i_norm_max_mc\", \"la_i_norm_max_mr\", \"la_i_print_mc\", \"la_i_print_mr\", \"la_i_print_vc\", \"la_i_print_vr\", \"la_i_qr_eigen_mc\", \"la_i_qr_eigen_mr\", \"la_i_qr_factor_mc\", \"la_i_qr_factor_mr\", \"la_i_qr_sym_eigen_mc\", \"la_i_qr_sym_eigen_mr\", \"la_i_random_mc\", \"la_i_random_mr\", \"la_i_random_vc\", \"la_i_random_vr\", \"la_i_size_mc\", \"la_i_size_mr\", \"la_i_size_vc\", \"la_i_size_vr\", \"la_i_subtract_mc\", \"la_i_subtract_mr\", \"la_i_subtract_vc\", \"la_i_subtract_vr\", \"la_i_t_assign\", \"la_i_trace_mc\", \"la_i_trace_mr\", \"la_i_transpose_mc\", \"la_i_transpose_mr\", \"la_i_upper_solve_mc\", \"la_i_upper_solve_mr\", \"la_i_vc_create\", \"la_i_vc_set\", \"la_i_vr_create\", \"la_i_vr_set\", \"la_k_a_assign\", \"la_k_add_mc\", \"la_k_add_mr\", \"la_k_add_vc\", \"la_k_add_vr\", \"la_k_assign_a\", \"la_k_assign_f\", \"la_k_assign_mc\", \"la_k_assign_mr\", \"la_k_assign_t\", \"la_k_assign_vc\", \"la_k_assign_vr\", \"la_k_conjugate_mc\", \"la_k_conjugate_mr\", \"la_k_conjugate_vc\", \"la_k_conjugate_vr\", \"la_k_current_f\", \"la_k_current_vr\", \"la_k_distance_vc\", \"la_k_distance_vr\", \"la_k_divide_mc\", \"la_k_divide_mr\", \"la_k_divide_vc\", \"la_k_divide_vr\", \"la_k_dot_mc\", \"la_k_dot_mc_vc\", \"la_k_dot_mr\", \"la_k_dot_mr_vr\", \"la_k_dot_vc\", \"la_k_dot_vr\", \"la_k_f_assign\", \"la_k_get_mc\", \"la_k_get_mr\", \"la_k_get_vc\", \"la_k_get_vr\", \"la_k_invert_mc\", \"la_k_invert_mr\", \"la_k_lower_solve_mc\", \"la_k_lower_solve_mr\", \"la_k_lu_det_mc\", \"la_k_lu_det_mr\", \"la_k_lu_factor_mc\", \"la_k_lu_factor_mr\", \"la_k_lu_solve_mc\", \"la_k_lu_solve_mr\", \"la_k_mc_set\", \"la_k_mr_set\", \"la_k_multiply_mc\", \"la_k_multiply_mr\", \"la_k_multiply_vc\", \"la_k_multiply_vr\", \"la_k_norm1_mc\", \"la_k_norm1_mr\", \"la_k_norm1_vc\", \"la_k_norm1_vr\", \"la_k_norm_euclid_mc\", \"la_k_norm_euclid_mr\", \"la_k_norm_euclid_vc\", \"la_k_norm_euclid_vr\", \"la_k_norm_inf_mc\", \"la_k_norm_inf_mr\", \"la_k_norm_inf_vc\", \"la_k_norm_inf_vr\", \"la_k_norm_max_mc\", \"la_k_norm_max_mr\", \"la_k_qr_eigen_mc\", \"la_k_qr_eigen_mr\", \"la_k_qr_factor_mc\", \"la_k_qr_factor_mr\", \"la_k_qr_sym_eigen_mc\", \"la_k_qr_sym_eigen_mr\", \"la_k_random_mc\", \"la_k_random_mr\", \"la_k_random_vc\", \"la_k_random_vr\", \"la_k_subtract_mc\", \"la_k_subtract_mr\", \"la_k_subtract_vc\", \"la_k_subtract_vr\", \"la_k_t_assign\", \"la_k_trace_mc\", \"la_k_trace_mr\", \"la_k_upper_solve_mc\", \"la_k_upper_solve_mr\", \"la_k_vc_set\", \"la_k_vr_set\", \"lastcycle\", \"lenarray\", \"lfo\", \"limit\", \"limit1\", \"lincos\", \"line\", \"linen\", \"linenr\", \"lineto\", \"link_beat_force\", \"link_beat_get\", \"link_beat_request\", \"link_create\", \"link_enable\", \"link_is_enabled\", \"link_metro\", \"link_peers\", \"link_tempo_get\", \"link_tempo_set\", \"linlin\", \"linrand\", \"linseg\", \"linsegb\", \"linsegr\", \"liveconv\", \"locsend\", \"locsig\", \"log\", \"log10\", \"log2\", \"logbtwo\", \"logcurve\", \"loopseg\", \"loopsegp\", \"looptseg\", \"loopxseg\", \"lorenz\", \"loscil\", \"loscil3\", \"loscil3phs\", \"loscilphs\", \"loscilx\", \"lowpass2\", \"lowres\", \"lowresx\", \"lpf18\", \"lpform\", \"lpfreson\", \"lphasor\", \"lpinterp\", \"lposcil\", \"lposcil3\", \"lposcila\", \"lposcilsa\", \"lposcilsa2\", \"lpread\", \"lpreson\", \"lpshold\", \"lpsholdp\", \"lpslot\", \"lua_exec\", \"lua_iaopcall\", \"lua_iaopcall_off\", \"lua_ikopcall\", \"lua_ikopcall_off\", \"lua_iopcall\", \"lua_iopcall_off\", \"lua_opdef\", \"mac\", \"maca\", \"madsr\", \"mags\", \"mandel\", \"mandol\", \"maparray\", \"maparray_i\", \"marimba\", \"massign\", \"max\", \"max_k\", \"maxabs\", \"maxabsaccum\", \"maxaccum\", \"maxalloc\", \"maxarray\", \"mclock\", \"mdelay\", \"median\", \"mediank\", \"metro\", \"metro2\", \"mfb\", \"midglobal\", \"midiarp\", \"midic14\", \"midic21\", \"midic7\", \"midichannelaftertouch\", \"midichn\", \"midicontrolchange\", \"midictrl\", \"mididefault\", \"midifilestatus\", \"midiin\", \"midinoteoff\", \"midinoteoncps\", \"midinoteonkey\", \"midinoteonoct\", \"midinoteonpch\", \"midion\", \"midion2\", \"midiout\", \"midiout_i\", \"midipgm\", \"midipitchbend\", \"midipolyaftertouch\", \"midiprogramchange\", \"miditempo\", \"midremot\", \"min\", \"minabs\", \"minabsaccum\", \"minaccum\", \"minarray\", \"mincer\", \"mirror\", \"mode\", \"modmatrix\", \"monitor\", \"moog\", \"moogladder\", \"moogladder2\", \"moogvcf\", \"moogvcf2\", \"moscil\", \"mp3bitrate\", \"mp3in\", \"mp3len\", \"mp3nchnls\", \"mp3scal\", \"mp3sr\", \"mpulse\", \"mrtmsg\", \"mtof\", \"mton\", \"multitap\", \"mute\", \"mvchpf\", \"mvclpf1\", \"mvclpf2\", \"mvclpf3\", \"mvclpf4\", \"mxadsr\", \"nchnls_hw\", \"nestedap\", \"nlalp\", \"nlfilt\", \"nlfilt2\", \"noise\", \"noteoff\", \"noteon\", \"noteondur\", \"noteondur2\", \"notnum\", \"nreverb\", \"nrpn\", \"nsamp\", \"nstance\", \"nstrnum\", \"nstrstr\", \"ntof\", \"ntom\", \"ntrpol\", \"nxtpow2\", \"octave\", \"octcps\", \"octmidi\", \"octmidib\", \"octmidinn\", \"octpch\", \"olabuffer\", \"oscbnk\", \"oscil\", \"oscil1\", \"oscil1i\", \"oscil3\", \"oscili\", \"oscilikt\", \"osciliktp\", \"oscilikts\", \"osciln\", \"oscils\", \"oscilx\", \"out\", \"out32\", \"outc\", \"outch\", \"outh\", \"outiat\", \"outic\", \"outic14\", \"outipat\", \"outipb\", \"outipc\", \"outkat\", \"outkc\", \"outkc14\", \"outkpat\", \"outkpb\", \"outkpc\", \"outleta\", \"outletf\", \"outletk\", \"outletkid\", \"outletv\", \"outo\", \"outq\", \"outq1\", \"outq2\", \"outq3\", \"outq4\", \"outrg\", \"outs\", \"outs1\", \"outs2\", \"outvalue\", \"outx\", \"outz\", \"p\", \"p5gconnect\", \"p5gdata\", \"pan\", \"pan2\", \"pareq\", \"part2txt\", \"partials\", \"partikkel\", \"partikkelget\", \"partikkelset\", \"partikkelsync\", \"passign\", \"paulstretch\", \"pcauchy\", \"pchbend\", \"pchmidi\", \"pchmidib\", \"pchmidinn\", \"pchoct\", \"pchtom\", \"pconvolve\", \"pcount\", \"pdclip\", \"pdhalf\", \"pdhalfy\", \"peak\", \"pgmassign\", \"pgmchn\", \"phaser1\", \"phaser2\", \"phasor\", \"phasorbnk\", \"phs\", \"pindex\", \"pinker\", \"pinkish\", \"pitch\", \"pitchac\", \"pitchamdf\", \"planet\", \"platerev\", \"plltrack\", \"pluck\", \"poisson\", \"pol2rect\", \"polyaft\", \"polynomial\", \"port\", \"portk\", \"poscil\", \"poscil3\", \"pow\", \"powershape\", \"powoftwo\", \"pows\", \"prealloc\", \"prepiano\", \"print\", \"print_type\", \"printarray\", \"printf\", \"printf_i\", \"printk\", \"printk2\", \"printks\", \"printks2\", \"prints\", \"product\", \"pset\", \"ptable\", \"ptable3\", \"ptablei\", \"ptablew\", \"ptrack\", \"puts\", \"pvadd\", \"pvbufread\", \"pvcross\", \"pvinterp\", \"pvoc\", \"pvread\", \"pvs2array\", \"pvs2tab\", \"pvsadsyn\", \"pvsanal\", \"pvsarp\", \"pvsbandp\", \"pvsbandr\", \"pvsbin\", \"pvsblur\", \"pvsbuffer\", \"pvsbufread\", \"pvsbufread2\", \"pvscale\", \"pvscent\", \"pvsceps\", \"pvscross\", \"pvsdemix\", \"pvsdiskin\", \"pvsdisp\", \"pvsenvftw\", \"pvsfilter\", \"pvsfread\", \"pvsfreeze\", \"pvsfromarray\", \"pvsftr\", \"pvsftw\", \"pvsfwrite\", \"pvsgain\", \"pvshift\", \"pvsifd\", \"pvsin\", \"pvsinfo\", \"pvsinit\", \"pvslock\", \"pvsmaska\", \"pvsmix\", \"pvsmooth\", \"pvsmorph\", \"pvsosc\", \"pvsout\", \"pvspitch\", \"pvstanal\", \"pvstencil\", \"pvstrace\", \"pvsvoc\", \"pvswarp\", \"pvsynth\", \"pwd\", \"pyassign\", \"pyassigni\", \"pyassignt\", \"pycall\", \"pycall1\", \"pycall1i\", \"pycall1t\", \"pycall2\", \"pycall2i\", \"pycall2t\", \"pycall3\", \"pycall3i\", \"pycall3t\", \"pycall4\", \"pycall4i\", \"pycall4t\", \"pycall5\", \"pycall5i\", \"pycall5t\", \"pycall6\", \"pycall6i\", \"pycall6t\", \"pycall7\", \"pycall7i\", \"pycall7t\", \"pycall8\", \"pycall8i\", \"pycall8t\", \"pycalli\", \"pycalln\", \"pycallni\", \"pycallt\", \"pyeval\", \"pyevali\", \"pyevalt\", \"pyexec\", \"pyexeci\", \"pyexect\", \"pyinit\", \"pylassign\", \"pylassigni\", \"pylassignt\", \"pylcall\", \"pylcall1\", \"pylcall1i\", \"pylcall1t\", \"pylcall2\", \"pylcall2i\", \"pylcall2t\", \"pylcall3\", \"pylcall3i\", \"pylcall3t\", \"pylcall4\", \"pylcall4i\", \"pylcall4t\", \"pylcall5\", \"pylcall5i\", \"pylcall5t\", \"pylcall6\", \"pylcall6i\", \"pylcall6t\", \"pylcall7\", \"pylcall7i\", \"pylcall7t\", \"pylcall8\", \"pylcall8i\", \"pylcall8t\", \"pylcalli\", \"pylcalln\", \"pylcallni\", \"pylcallt\", \"pyleval\", \"pylevali\", \"pylevalt\", \"pylexec\", \"pylexeci\", \"pylexect\", \"pylrun\", \"pylruni\", \"pylrunt\", \"pyrun\", \"pyruni\", \"pyrunt\", \"qinf\", \"qnan\", \"r2c\", \"rand\", \"randc\", \"randh\", \"randi\", \"random\", \"randomh\", \"randomi\", \"rbjeq\", \"readclock\", \"readf\", \"readfi\", \"readk\", \"readk2\", \"readk3\", \"readk4\", \"readks\", \"readscore\", \"readscratch\", \"rect2pol\", \"release\", \"remoteport\", \"remove\", \"repluck\", \"reshapearray\", \"reson\", \"resonk\", \"resonr\", \"resonx\", \"resonxk\", \"resony\", \"resonz\", \"resyn\", \"reverb\", \"reverb2\", \"reverbsc\", \"rewindscore\", \"rezzy\", \"rfft\", \"rifft\", \"rms\", \"rnd\", \"rnd31\", \"round\", \"rspline\", \"rtclock\", \"s16b14\", \"s32b14\", \"samphold\", \"sandpaper\", \"sc_lag\", \"sc_lagud\", \"sc_phasor\", \"sc_trig\", \"scale\", \"scalearray\", \"scanhammer\", \"scans\", \"scantable\", \"scanu\", \"schedkwhen\", \"schedkwhennamed\", \"schedule\", \"schedulek\", \"schedwhen\", \"scoreline\", \"scoreline_i\", \"seed\", \"sekere\", \"select\", \"semitone\", \"sense\", \"sensekey\", \"seqtime\", \"seqtime2\", \"serialBegin\", \"serialEnd\", \"serialFlush\", \"serialPrint\", \"serialRead\", \"serialWrite\", \"serialWrite_i\", \"setcol\", \"setctrl\", \"setksmps\", \"setrow\", \"setscorepos\", \"sfilist\", \"sfinstr\", \"sfinstr3\", \"sfinstr3m\", \"sfinstrm\", \"sfload\", \"sflooper\", \"sfpassign\", \"sfplay\", \"sfplay3\", \"sfplay3m\", \"sfplaym\", \"sfplist\", \"sfpreset\", \"shaker\", \"shiftin\", \"shiftout\", \"signum\", \"sin\", \"sinh\", \"sininv\", \"sinsyn\", \"sleighbells\", \"slicearray\", \"slicearray_i\", \"slider16\", \"slider16f\", \"slider16table\", \"slider16tablef\", \"slider32\", \"slider32f\", \"slider32table\", \"slider32tablef\", \"slider64\", \"slider64f\", \"slider64table\", \"slider64tablef\", \"slider8\", \"slider8f\", \"slider8table\", \"slider8tablef\", \"sliderKawai\", \"sndloop\", \"sndwarp\", \"sndwarpst\", \"sockrecv\", \"sockrecvs\", \"socksend\", \"socksends\", \"sorta\", \"sortd\", \"soundin\", \"space\", \"spat3d\", \"spat3di\", \"spat3dt\", \"spdist\", \"splitrig\", \"sprintf\", \"sprintfk\", \"spsend\", \"sqrt\", \"squinewave\", \"statevar\", \"stix\", \"strcat\", \"strcatk\", \"strchar\", \"strchark\", \"strcmp\", \"strcmpk\", \"strcpy\", \"strcpyk\", \"strecv\", \"streson\", \"strfromurl\", \"strget\", \"strindex\", \"strindexk\", \"string2array\", \"strlen\", \"strlenk\", \"strlower\", \"strlowerk\", \"strrindex\", \"strrindexk\", \"strset\", \"strstrip\", \"strsub\", \"strsubk\", \"strtod\", \"strtodk\", \"strtol\", \"strtolk\", \"strupper\", \"strupperk\", \"stsend\", \"subinstr\", \"subinstrinit\", \"sum\", \"sumarray\", \"svfilter\", \"syncgrain\", \"syncloop\", \"syncphasor\", \"system\", \"system_i\", \"tab\", \"tab2array\", \"tab2pvs\", \"tab_i\", \"tabifd\", \"table\", \"table3\", \"table3kt\", \"tablecopy\", \"tablefilter\", \"tablefilteri\", \"tablegpw\", \"tablei\", \"tableicopy\", \"tableigpw\", \"tableikt\", \"tableimix\", \"tablekt\", \"tablemix\", \"tableng\", \"tablera\", \"tableseg\", \"tableshuffle\", \"tableshufflei\", \"tablew\", \"tablewa\", \"tablewkt\", \"tablexkt\", \"tablexseg\", \"tabmorph\", \"tabmorpha\", \"tabmorphak\", \"tabmorphi\", \"tabplay\", \"tabrec\", \"tabrowlin\", \"tabsum\", \"tabw\", \"tabw_i\", \"tambourine\", \"tan\", \"tanh\", \"taninv\", \"taninv2\", \"tbvcf\", \"tempest\", \"tempo\", \"temposcal\", \"tempoval\", \"timedseq\", \"timeinstk\", \"timeinsts\", \"timek\", \"times\", \"tival\", \"tlineto\", \"tone\", \"tonek\", \"tonex\", \"tradsyn\", \"trandom\", \"transeg\", \"transegb\", \"transegr\", \"trcross\", \"trfilter\", \"trhighest\", \"trigger\", \"trigseq\", \"trim\", \"trim_i\", \"trirand\", \"trlowest\", \"trmix\", \"trscale\", \"trshift\", \"trsplit\", \"turnoff\", \"turnoff2\", \"turnon\", \"tvconv\", \"unirand\", \"unwrap\", \"upsamp\", \"urandom\", \"urd\", \"vactrol\", \"vadd\", \"vadd_i\", \"vaddv\", \"vaddv_i\", \"vaget\", \"valpass\", \"vaset\", \"vbap\", \"vbapg\", \"vbapgmove\", \"vbaplsinit\", \"vbapmove\", \"vbapz\", \"vbapzmove\", \"vcella\", \"vco\", \"vco2\", \"vco2ft\", \"vco2ift\", \"vco2init\", \"vcomb\", \"vcopy\", \"vcopy_i\", \"vdel_k\", \"vdelay\", \"vdelay3\", \"vdelayk\", \"vdelayx\", \"vdelayxq\", \"vdelayxs\", \"vdelayxw\", \"vdelayxwq\", \"vdelayxws\", \"vdivv\", \"vdivv_i\", \"vecdelay\", \"veloc\", \"vexp\", \"vexp_i\", \"vexpseg\", \"vexpv\", \"vexpv_i\", \"vibes\", \"vibr\", \"vibrato\", \"vincr\", \"vlimit\", \"vlinseg\", \"vlowres\", \"vmap\", \"vmirror\", \"vmult\", \"vmult_i\", \"vmultv\", \"vmultv_i\", \"voice\", \"vosim\", \"vphaseseg\", \"vport\", \"vpow\", \"vpow_i\", \"vpowv\", \"vpowv_i\", \"vpvoc\", \"vrandh\", \"vrandi\", \"vsubv\", \"vsubv_i\", \"vtaba\", \"vtabi\", \"vtabk\", \"vtable1k\", \"vtablea\", \"vtablei\", \"vtablek\", \"vtablewa\", \"vtablewi\", \"vtablewk\", \"vtabwa\", \"vtabwi\", \"vtabwk\", \"vwrap\", \"waveset\", \"websocket\", \"weibull\", \"wgbow\", \"wgbowedbar\", \"wgbrass\", \"wgclar\", \"wgflute\", \"wgpluck\", \"wgpluck2\", \"wguide1\", \"wguide2\", \"wiiconnect\", \"wiidata\", \"wiirange\", \"wiisend\", \"window\", \"wrap\", \"writescratch\", \"wterrain\", \"xadsr\", \"xin\", \"xout\", \"xscanmap\", \"xscans\", \"xscansmap\", \"xscanu\", \"xtratim\", \"xyscale\", \"zacl\", \"zakinit\", \"zamod\", \"zar\", \"zarg\", \"zaw\", \"zawm\", \"zdf_1pole\", \"zdf_1pole_mode\", \"zdf_2pole\", \"zdf_2pole_mode\", \"zdf_ladder\", \"zfilter2\", \"zir\", \"ziw\", \"ziwm\", \"zkcl\", \"zkmod\", \"zkr\", \"zkw\", \"zkwm\"];\n    var deprecatedOpcodes = [\"array\", \"bformdec\", \"bformenc\", \"changed\", \"copy2ftab\", \"copy2ttab\", \"hrtfer\", \"ktableseg\", \"lentab\", \"maxtab\", \"mintab\", \"pop\", \"pop_f\", \"ptableiw\", \"push\", \"push_f\", \"scalet\", \"sndload\", \"soundout\", \"soundouts\", \"specaddm\", \"specdiff\", \"specdisp\", \"specfilt\", \"spechist\", \"specptrk\", \"specscal\", \"specsum\", \"spectrum\", \"stack\", \"sumtab\", \"tabgen\", \"tableiw\", \"tabmap\", \"tabmap_i\", \"tabslice\", \"tb0\", \"tb0_init\", \"tb1\", \"tb10\", \"tb10_init\", \"tb11\", \"tb11_init\", \"tb12\", \"tb12_init\", \"tb13\", \"tb13_init\", \"tb14\", \"tb14_init\", \"tb15\", \"tb15_init\", \"tb1_init\", \"tb2\", \"tb2_init\", \"tb3\", \"tb3_init\", \"tb4\", \"tb4_init\", \"tb5\", \"tb5_init\", \"tb6\", \"tb6_init\", \"tb7\", \"tb7_init\", \"tb8\", \"tb8_init\", \"tb9\", \"tb9_init\", \"vbap16\", \"vbap4\", \"vbap4move\", \"vbap8\", \"vbap8move\", \"xyin\"];\n    opcodes = lang.arrayToMap(opcodes);\n    deprecatedOpcodes = lang.arrayToMap(deprecatedOpcodes);\n    this.lineContinuations = [{\n      token: \"constant.character.escape.line-continuation.csound\",\n      regex: /\\\\$/\n    }, this.pushRule({\n      token: \"constant.character.escape.line-continuation.csound\",\n      regex: /\\\\/,\n      next: \"line continuation\"\n    })];\n    this.comments.push(this.lineContinuations);\n    this.quotedStringContents.push(this.lineContinuations, {\n      token: \"invalid.illegal\",\n      regex: /[^\"\\\\]*$/\n    });\n    var start = this.$rules.start;\n    start.splice(1, 0, {\n      token: [\"text.csound\", \"entity.name.label.csound\", \"entity.punctuation.label.csound\", \"text.csound\"],\n      regex: /^([ \\t]*)(\\w+)(:)([ \\t]+|$)/\n    });\n    start.push(this.pushRule({\n      token: \"keyword.function.csound\",\n      regex: /\\binstr\\b/,\n      next: \"instrument numbers and identifiers\"\n    }), this.pushRule({\n      token: \"keyword.function.csound\",\n      regex: /\\bopcode\\b/,\n      next: \"after opcode keyword\"\n    }), {\n      token: \"keyword.other.csound\",\n      regex: /\\bend(?:in|op)\\b/\n    }, {\n      token: \"variable.language.csound\",\n      regex: /\\b(?:0dbfs|A4|k(?:r|smps)|nchnls(?:_i)?|sr)\\b/\n    }, this.numbers, {\n      token: \"keyword.operator.csound\",\n      regex: \"\\\\+=|-=|\\\\*=|/=|<<|>>|<=|>=|==|!=|&&|\\\\|\\\\||[~¬]|[=!+\\\\-*/^%&|<>#?:]\"\n    }, this.pushRule({\n      token: \"punctuation.definition.string.begin.csound\",\n      regex: /\"/,\n      next: \"quoted string\"\n    }), this.pushRule({\n      token: \"punctuation.definition.string.begin.csound\",\n      regex: /{{/,\n      next: \"braced string\"\n    }), {\n      token: \"keyword.control.csound\",\n      regex: /\\b(?:do|else(?:if)?|end(?:if|until)|fi|i(?:f|then)|kthen|od|r(?:ir)?eturn|then|until|while)\\b/\n    }, this.pushRule({\n      token: \"keyword.control.csound\",\n      regex: /\\b[ik]?goto\\b/,\n      next: \"goto before label\"\n    }), this.pushRule({\n      token: \"keyword.control.csound\",\n      regex: /\\b(?:r(?:einit|igoto)|tigoto)\\b/,\n      next: \"goto before label\"\n    }), this.pushRule({\n      token: \"keyword.control.csound\",\n      regex: /\\bc(?:g|in?|k|nk?)goto\\b/,\n      next: [\"goto before label\", \"goto before argument\"]\n    }), this.pushRule({\n      token: \"keyword.control.csound\",\n      regex: /\\btimout\\b/,\n      next: [\"goto before label\", \"goto before argument\", \"goto before argument\"]\n    }), this.pushRule({\n      token: \"keyword.control.csound\",\n      regex: /\\bloop_[gl][et]\\b/,\n      next: [\"goto before label\", \"goto before argument\", \"goto before argument\", \"goto before argument\"]\n    }), this.pushRule({\n      token: \"support.function.csound\",\n      regex: /\\b(?:readscore|scoreline(?:_i)?)\\b/,\n      next: \"Csound score opcode\"\n    }), this.pushRule({\n      token: \"support.function.csound\",\n      regex: /\\bpyl?run[it]?\\b(?!$)/,\n      next: \"Python opcode\"\n    }), this.pushRule({\n      token: \"support.function.csound\",\n      regex: /\\blua_(?:exec|opdef)\\b(?!$)/,\n      next: \"Lua opcode\"\n    }), {\n      token: \"support.variable.csound\",\n      regex: /\\bp\\d+\\b/\n    }, {\n      regex: /\\b([A-Z_a-z]\\w*)(?:(:)([A-Za-z]))?\\b/,\n      onMatch: function onMatch(value, currentState, stack, line) {\n        var tokens = value.split(this.splitRegex);\n        var name = tokens[1];\n        var type;\n        if (opcodes.hasOwnProperty(name)) type = \"support.function.csound\";else if (deprecatedOpcodes.hasOwnProperty(name)) type = \"invalid.deprecated.csound\";\n\n        if (type) {\n          if (tokens[2]) {\n            return [{\n              type: type,\n              value: name\n            }, {\n              type: \"punctuation.type-annotation.csound\",\n              value: tokens[2]\n            }, {\n              type: \"type-annotation.storage.type.csound\",\n              value: tokens[3]\n            }];\n          }\n\n          return type;\n        }\n\n        return \"text.csound\";\n      }\n    });\n    this.$rules[\"macro parameter value list\"].splice(2, 0, {\n      token: \"punctuation.definition.string.begin.csound\",\n      regex: /{{/,\n      next: \"macro parameter value braced string\"\n    });\n    var scoreHighlightRules = new CsoundScoreHighlightRules(\"csound-score-\");\n    this.addRules({\n      \"macro parameter value braced string\": [{\n        token: \"constant.character.escape.csound\",\n        regex: /\\\\[#'()]/\n      }, {\n        token: \"invalid.illegal.csound.csound\",\n        regex: /[#'()]/\n      }, {\n        token: \"punctuation.definition.string.end.csound\",\n        regex: /}}/,\n        next: \"macro parameter value list\"\n      }, {\n        defaultToken: \"string.braced.csound\"\n      }],\n      \"instrument numbers and identifiers\": [this.comments, {\n        token: \"entity.name.function.csound\",\n        regex: /\\d+|[A-Z_a-z]\\w*/\n      }, this.popRule({\n        token: \"empty\",\n        regex: /$/\n      })],\n      \"after opcode keyword\": [this.comments, this.popRule({\n        token: \"empty\",\n        regex: /$/\n      }), this.popRule({\n        token: \"entity.name.function.opcode.csound\",\n        regex: /[A-Z_a-z]\\w*/,\n        next: \"opcode type signatures\"\n      })],\n      \"opcode type signatures\": [this.comments, this.popRule({\n        token: \"empty\",\n        regex: /$/\n      }), {\n        token: \"storage.type.csound\",\n        regex: /\\b(?:0|[afijkKoOpPStV\\[\\]]+)/\n      }],\n      \"quoted string\": [this.popRule({\n        token: \"punctuation.definition.string.end.csound\",\n        regex: /\"/\n      }), this.quotedStringContents, {\n        defaultToken: \"string.quoted.csound\"\n      }],\n      \"braced string\": [this.popRule({\n        token: \"punctuation.definition.string.end.csound\",\n        regex: /}}/\n      }), this.bracedStringContents, {\n        defaultToken: \"string.braced.csound\"\n      }],\n      \"goto before argument\": [this.popRule({\n        token: \"text.csound\",\n        regex: /,/\n      }), start],\n      \"goto before label\": [{\n        token: \"text.csound\",\n        regex: /\\s+/\n      }, this.comments, this.popRule({\n        token: \"entity.name.label.csound\",\n        regex: /\\w+/\n      }), this.popRule({\n        token: \"empty\",\n        regex: /(?!\\w)/\n      })],\n      \"Csound score opcode\": [this.comments, {\n        token: \"punctuation.definition.string.begin.csound\",\n        regex: /{{/,\n        next: scoreHighlightRules.embeddedRulePrefix + \"start\"\n      }, this.popRule({\n        token: \"empty\",\n        regex: /$/\n      })],\n      \"Python opcode\": [this.comments, {\n        token: \"punctuation.definition.string.begin.csound\",\n        regex: /{{/,\n        next: \"python-start\"\n      }, this.popRule({\n        token: \"empty\",\n        regex: /$/\n      })],\n      \"Lua opcode\": [this.comments, {\n        token: \"punctuation.definition.string.begin.csound\",\n        regex: /{{/,\n        next: \"lua-start\"\n      }, this.popRule({\n        token: \"empty\",\n        regex: /$/\n      })],\n      \"line continuation\": [this.popRule({\n        token: \"empty\",\n        regex: /$/\n      }), this.semicolonComments, {\n        token: \"invalid.illegal.csound\",\n        regex: /\\S.*/\n      }]\n    });\n    var rules = [this.popRule({\n      token: \"punctuation.definition.string.end.csound\",\n      regex: /}}/\n    })];\n    this.embedRules(scoreHighlightRules.getRules(), scoreHighlightRules.embeddedRulePrefix, rules);\n    this.embedRules(PythonHighlightRules, \"python-\", rules);\n    this.embedRules(LuaHighlightRules, \"lua-\", rules);\n    this.normalizeRules();\n  };\n\n  oop.inherits(CsoundOrchestraHighlightRules, CsoundPreprocessorHighlightRules);\n  exports.CsoundOrchestraHighlightRules = CsoundOrchestraHighlightRules;\n});\nace.define(\"ace/mode/css_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/lib/lang\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var lang = require(\"../lib/lang\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var supportType = exports.supportType = \"align-content|align-items|align-self|all|animation|animation-delay|animation-direction|animation-duration|animation-fill-mode|animation-iteration-count|animation-name|animation-play-state|animation-timing-function|backface-visibility|background|background-attachment|background-blend-mode|background-clip|background-color|background-image|background-origin|background-position|background-repeat|background-size|border|border-bottom|border-bottom-color|border-bottom-left-radius|border-bottom-right-radius|border-bottom-style|border-bottom-width|border-collapse|border-color|border-image|border-image-outset|border-image-repeat|border-image-slice|border-image-source|border-image-width|border-left|border-left-color|border-left-style|border-left-width|border-radius|border-right|border-right-color|border-right-style|border-right-width|border-spacing|border-style|border-top|border-top-color|border-top-left-radius|border-top-right-radius|border-top-style|border-top-width|border-width|bottom|box-shadow|box-sizing|caption-side|clear|clip|color|column-count|column-fill|column-gap|column-rule|column-rule-color|column-rule-style|column-rule-width|column-span|column-width|columns|content|counter-increment|counter-reset|cursor|direction|display|empty-cells|filter|flex|flex-basis|flex-direction|flex-flow|flex-grow|flex-shrink|flex-wrap|float|font|font-family|font-size|font-size-adjust|font-stretch|font-style|font-variant|font-weight|hanging-punctuation|height|justify-content|left|letter-spacing|line-height|list-style|list-style-image|list-style-position|list-style-type|margin|margin-bottom|margin-left|margin-right|margin-top|max-height|max-width|max-zoom|min-height|min-width|min-zoom|nav-down|nav-index|nav-left|nav-right|nav-up|opacity|order|outline|outline-color|outline-offset|outline-style|outline-width|overflow|overflow-x|overflow-y|padding|padding-bottom|padding-left|padding-right|padding-top|page-break-after|page-break-before|page-break-inside|perspective|perspective-origin|position|quotes|resize|right|tab-size|table-layout|text-align|text-align-last|text-decoration|text-decoration-color|text-decoration-line|text-decoration-style|text-indent|text-justify|text-overflow|text-shadow|text-transform|top|transform|transform-origin|transform-style|transition|transition-delay|transition-duration|transition-property|transition-timing-function|unicode-bidi|user-select|user-zoom|vertical-align|visibility|white-space|width|word-break|word-spacing|word-wrap|z-index\";\n  var supportFunction = exports.supportFunction = \"rgb|rgba|url|attr|counter|counters\";\n  var supportConstant = exports.supportConstant = \"absolute|after-edge|after|all-scroll|all|alphabetic|always|antialiased|armenian|auto|avoid-column|avoid-page|avoid|balance|baseline|before-edge|before|below|bidi-override|block-line-height|block|bold|bolder|border-box|both|bottom|box|break-all|break-word|capitalize|caps-height|caption|center|central|char|circle|cjk-ideographic|clone|close-quote|col-resize|collapse|column|consider-shifts|contain|content-box|cover|crosshair|cubic-bezier|dashed|decimal-leading-zero|decimal|default|disabled|disc|disregard-shifts|distribute-all-lines|distribute-letter|distribute-space|distribute|dotted|double|e-resize|ease-in|ease-in-out|ease-out|ease|ellipsis|end|exclude-ruby|fill|fixed|georgian|glyphs|grid-height|groove|hand|hanging|hebrew|help|hidden|hiragana-iroha|hiragana|horizontal|icon|ideograph-alpha|ideograph-numeric|ideograph-parenthesis|ideograph-space|ideographic|inactive|include-ruby|inherit|initial|inline-block|inline-box|inline-line-height|inline-table|inline|inset|inside|inter-ideograph|inter-word|invert|italic|justify|katakana-iroha|katakana|keep-all|last|left|lighter|line-edge|line-through|line|linear|list-item|local|loose|lower-alpha|lower-greek|lower-latin|lower-roman|lowercase|lr-tb|ltr|mathematical|max-height|max-size|medium|menu|message-box|middle|move|n-resize|ne-resize|newspaper|no-change|no-close-quote|no-drop|no-open-quote|no-repeat|none|normal|not-allowed|nowrap|nw-resize|oblique|open-quote|outset|outside|overline|padding-box|page|pointer|pre-line|pre-wrap|pre|preserve-3d|progress|relative|repeat-x|repeat-y|repeat|replaced|reset-size|ridge|right|round|row-resize|rtl|s-resize|scroll|se-resize|separate|slice|small-caps|small-caption|solid|space|square|start|static|status-bar|step-end|step-start|steps|stretch|strict|sub|super|sw-resize|table-caption|table-cell|table-column-group|table-column|table-footer-group|table-header-group|table-row-group|table-row|table|tb-rl|text-after-edge|text-before-edge|text-bottom|text-size|text-top|text|thick|thin|transparent|underline|upper-alpha|upper-latin|upper-roman|uppercase|use-script|vertical-ideographic|vertical-text|visible|w-resize|wait|whitespace|z-index|zero|zoom\";\n  var supportConstantColor = exports.supportConstantColor = \"aliceblue|antiquewhite|aqua|aquamarine|azure|beige|bisque|black|blanchedalmond|blue|blueviolet|brown|burlywood|cadetblue|chartreuse|chocolate|coral|cornflowerblue|cornsilk|crimson|cyan|darkblue|darkcyan|darkgoldenrod|darkgray|darkgreen|darkgrey|darkkhaki|darkmagenta|darkolivegreen|darkorange|darkorchid|darkred|darksalmon|darkseagreen|darkslateblue|darkslategray|darkslategrey|darkturquoise|darkviolet|deeppink|deepskyblue|dimgray|dimgrey|dodgerblue|firebrick|floralwhite|forestgreen|fuchsia|gainsboro|ghostwhite|gold|goldenrod|gray|green|greenyellow|grey|honeydew|hotpink|indianred|indigo|ivory|khaki|lavender|lavenderblush|lawngreen|lemonchiffon|lightblue|lightcoral|lightcyan|lightgoldenrodyellow|lightgray|lightgreen|lightgrey|lightpink|lightsalmon|lightseagreen|lightskyblue|lightslategray|lightslategrey|lightsteelblue|lightyellow|lime|limegreen|linen|magenta|maroon|mediumaquamarine|mediumblue|mediumorchid|mediumpurple|mediumseagreen|mediumslateblue|mediumspringgreen|mediumturquoise|mediumvioletred|midnightblue|mintcream|mistyrose|moccasin|navajowhite|navy|oldlace|olive|olivedrab|orange|orangered|orchid|palegoldenrod|palegreen|paleturquoise|palevioletred|papayawhip|peachpuff|peru|pink|plum|powderblue|purple|rebeccapurple|red|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|seashell|sienna|silver|skyblue|slateblue|slategray|slategrey|snow|springgreen|steelblue|tan|teal|thistle|tomato|turquoise|violet|wheat|white|whitesmoke|yellow|yellowgreen\";\n  var supportConstantFonts = exports.supportConstantFonts = \"arial|century|comic|courier|cursive|fantasy|garamond|georgia|helvetica|impact|lucida|symbol|system|tahoma|times|trebuchet|utopia|verdana|webdings|sans-serif|serif|monospace\";\n  var numRe = exports.numRe = \"\\\\-?(?:(?:[0-9]+(?:\\\\.[0-9]+)?)|(?:\\\\.[0-9]+))\";\n  var pseudoElements = exports.pseudoElements = \"(\\\\:+)\\\\b(after|before|first-letter|first-line|moz-selection|selection)\\\\b\";\n  var pseudoClasses = exports.pseudoClasses = \"(:)\\\\b(active|checked|disabled|empty|enabled|first-child|first-of-type|focus|hover|indeterminate|invalid|last-child|last-of-type|link|not|nth-child|nth-last-child|nth-last-of-type|nth-of-type|only-child|only-of-type|required|root|target|valid|visited)\\\\b\";\n\n  var CssHighlightRules = function CssHighlightRules() {\n    var keywordMapper = this.createKeywordMapper({\n      \"support.function\": supportFunction,\n      \"support.constant\": supportConstant,\n      \"support.type\": supportType,\n      \"support.constant.color\": supportConstantColor,\n      \"support.constant.fonts\": supportConstantFonts\n    }, \"text\", true);\n    this.$rules = {\n      \"start\": [{\n        include: [\"strings\", \"url\", \"comments\"]\n      }, {\n        token: \"paren.lparen\",\n        regex: \"\\\\{\",\n        next: \"ruleset\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"\\\\}\"\n      }, {\n        token: \"string\",\n        regex: \"@(?!viewport)\",\n        next: \"media\"\n      }, {\n        token: \"keyword\",\n        regex: \"#[a-z0-9-_]+\"\n      }, {\n        token: \"keyword\",\n        regex: \"%\"\n      }, {\n        token: \"variable\",\n        regex: \"\\\\.[a-z0-9-_]+\"\n      }, {\n        token: \"string\",\n        regex: \":[a-z0-9-_]+\"\n      }, {\n        token: \"constant.numeric\",\n        regex: numRe\n      }, {\n        token: \"constant\",\n        regex: \"[a-z0-9-_]+\"\n      }, {\n        caseInsensitive: true\n      }],\n      \"media\": [{\n        include: [\"strings\", \"url\", \"comments\"]\n      }, {\n        token: \"paren.lparen\",\n        regex: \"\\\\{\",\n        next: \"start\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"\\\\}\",\n        next: \"start\"\n      }, {\n        token: \"string\",\n        regex: \";\",\n        next: \"start\"\n      }, {\n        token: \"keyword\",\n        regex: \"(?:media|supports|document|charset|import|namespace|media|supports|document\" + \"|page|font|keyframes|viewport|counter-style|font-feature-values\" + \"|swash|ornaments|annotation|stylistic|styleset|character-variant)\"\n      }],\n      \"comments\": [{\n        token: \"comment\",\n        // multi line comment\n        regex: \"\\\\/\\\\*\",\n        push: [{\n          token: \"comment\",\n          regex: \"\\\\*\\\\/\",\n          next: \"pop\"\n        }, {\n          defaultToken: \"comment\"\n        }]\n      }],\n      \"ruleset\": [{\n        regex: \"-(webkit|ms|moz|o)-\",\n        token: \"text\"\n      }, {\n        token: \"punctuation.operator\",\n        regex: \"[:;]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"\\\\}\",\n        next: \"start\"\n      }, {\n        include: [\"strings\", \"url\", \"comments\"]\n      }, {\n        token: [\"constant.numeric\", \"keyword\"],\n        regex: \"(\" + numRe + \")(ch|cm|deg|em|ex|fr|gd|grad|Hz|in|kHz|mm|ms|pc|pt|px|rad|rem|s|turn|vh|vmax|vmin|vm|vw|%)\"\n      }, {\n        token: \"constant.numeric\",\n        regex: numRe\n      }, {\n        token: \"constant.numeric\",\n        // hex6 color\n        regex: \"#[a-f0-9]{6}\"\n      }, {\n        token: \"constant.numeric\",\n        // hex3 color\n        regex: \"#[a-f0-9]{3}\"\n      }, {\n        token: [\"punctuation\", \"entity.other.attribute-name.pseudo-element.css\"],\n        regex: pseudoElements\n      }, {\n        token: [\"punctuation\", \"entity.other.attribute-name.pseudo-class.css\"],\n        regex: pseudoClasses\n      }, {\n        include: \"url\"\n      }, {\n        token: keywordMapper,\n        regex: \"\\\\-?[a-zA-Z_][a-zA-Z0-9_\\\\-]*\"\n      }, {\n        caseInsensitive: true\n      }],\n      url: [{\n        token: \"support.function\",\n        regex: \"(?:url(:?-prefix)?|domain|regexp)\\\\(\",\n        push: [{\n          token: \"support.function\",\n          regex: \"\\\\)\",\n          next: \"pop\"\n        }, {\n          defaultToken: \"string\"\n        }]\n      }],\n      strings: [{\n        token: \"string.start\",\n        regex: \"'\",\n        push: [{\n          token: \"string.end\",\n          regex: \"'|$\",\n          next: \"pop\"\n        }, {\n          include: \"escapes\"\n        }, {\n          token: \"constant.language.escape\",\n          regex: /\\\\$/,\n          consumeLineEnd: true\n        }, {\n          defaultToken: \"string\"\n        }]\n      }, {\n        token: \"string.start\",\n        regex: '\"',\n        push: [{\n          token: \"string.end\",\n          regex: '\"|$',\n          next: \"pop\"\n        }, {\n          include: \"escapes\"\n        }, {\n          token: \"constant.language.escape\",\n          regex: /\\\\$/,\n          consumeLineEnd: true\n        }, {\n          defaultToken: \"string\"\n        }]\n      }],\n      escapes: [{\n        token: \"constant.language.escape\",\n        regex: /\\\\([a-fA-F\\d]{1,6}|[^a-fA-F\\d])/\n      }]\n    };\n    this.normalizeRules();\n  };\n\n  oop.inherits(CssHighlightRules, TextHighlightRules);\n  exports.CssHighlightRules = CssHighlightRules;\n});\nace.define(\"ace/mode/doc_comment_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var DocCommentHighlightRules = function DocCommentHighlightRules() {\n    this.$rules = {\n      \"start\": [{\n        token: \"comment.doc.tag\",\n        regex: \"@[\\\\w\\\\d_]+\" // TODO: fix email addresses\n\n      }, DocCommentHighlightRules.getTagRule(), {\n        defaultToken: \"comment.doc\",\n        caseInsensitive: true\n      }]\n    };\n  };\n\n  oop.inherits(DocCommentHighlightRules, TextHighlightRules);\n\n  DocCommentHighlightRules.getTagRule = function (start) {\n    return {\n      token: \"comment.doc.tag.storage.type\",\n      regex: \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n  };\n\n  DocCommentHighlightRules.getStartRule = function (start) {\n    return {\n      token: \"comment.doc\",\n      // doc comment\n      regex: \"\\\\/\\\\*(?=\\\\*)\",\n      next: start\n    };\n  };\n\n  DocCommentHighlightRules.getEndRule = function (start) {\n    return {\n      token: \"comment.doc\",\n      // closing comment\n      regex: \"\\\\*\\\\/\",\n      next: start\n    };\n  };\n\n  exports.DocCommentHighlightRules = DocCommentHighlightRules;\n});\nace.define(\"ace/mode/javascript_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/doc_comment_highlight_rules\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var DocCommentHighlightRules = require(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var identifierRe = \"[a-zA-Z\\\\$_\\xA1-\\uFFFF][a-zA-Z\\\\d\\\\$_\\xA1-\\uFFFF]*\";\n\n  var JavaScriptHighlightRules = function JavaScriptHighlightRules(options) {\n    var keywordMapper = this.createKeywordMapper({\n      \"variable.language\": \"Array|Boolean|Date|Function|Iterator|Number|Object|RegExp|String|Proxy|\" + // Constructors\n      \"Namespace|QName|XML|XMLList|\" + // E4X\n      \"ArrayBuffer|Float32Array|Float64Array|Int16Array|Int32Array|Int8Array|\" + \"Uint16Array|Uint32Array|Uint8Array|Uint8ClampedArray|\" + \"Error|EvalError|InternalError|RangeError|ReferenceError|StopIteration|\" + // Errors\n      \"SyntaxError|TypeError|URIError|\" + \"decodeURI|decodeURIComponent|encodeURI|encodeURIComponent|eval|isFinite|\" + // Non-constructor functions\n      \"isNaN|parseFloat|parseInt|\" + \"JSON|Math|\" + // Other\n      \"this|arguments|prototype|window|document\",\n      // Pseudo\n      \"keyword\": \"const|yield|import|get|set|async|await|\" + \"break|case|catch|continue|default|delete|do|else|finally|for|function|\" + \"if|in|of|instanceof|new|return|switch|throw|try|typeof|let|var|while|with|debugger|\" + \"__parent__|__count__|escape|unescape|with|__proto__|\" + \"class|enum|extends|super|export|implements|private|public|interface|package|protected|static\",\n      \"storage.type\": \"const|let|var|function\",\n      \"constant.language\": \"null|Infinity|NaN|undefined\",\n      \"support.function\": \"alert\",\n      \"constant.language.boolean\": \"true|false\"\n    }, \"identifier\");\n    var kwBeforeRe = \"case|do|else|finally|in|instanceof|return|throw|try|typeof|yield|void\";\n    var escapedRe = \"\\\\\\\\(?:x[0-9a-fA-F]{2}|\" + // hex\n    \"u[0-9a-fA-F]{4}|\" + // unicode\n    \"u{[0-9a-fA-F]{1,6}}|\" + // es6 unicode\n    \"[0-2][0-7]{0,2}|\" + // oct\n    \"3[0-7][0-7]?|\" + // oct\n    \"[4-7][0-7]?|\" + //oct\n    \".)\";\n    this.$rules = {\n      \"no_regex\": [DocCommentHighlightRules.getStartRule(\"doc-start\"), comments(\"no_regex\"), {\n        token: \"string\",\n        regex: \"'(?=.)\",\n        next: \"qstring\"\n      }, {\n        token: \"string\",\n        regex: '\"(?=.)',\n        next: \"qqstring\"\n      }, {\n        token: \"constant.numeric\",\n        // hexadecimal, octal and binary\n        regex: /0(?:[xX][0-9a-fA-F]+|[oO][0-7]+|[bB][01]+)\\b/\n      }, {\n        token: \"constant.numeric\",\n        // decimal integers and floats\n        regex: /(?:\\d\\d*(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+\\b)?/\n      }, {\n        token: [\"storage.type\", \"punctuation.operator\", \"support.function\", \"punctuation.operator\", \"entity.name.function\", \"text\", \"keyword.operator\"],\n        regex: \"(\" + identifierRe + \")(\\\\.)(prototype)(\\\\.)(\" + identifierRe + \")(\\\\s*)(=)\",\n        next: \"function_arguments\"\n      }, {\n        token: [\"storage.type\", \"punctuation.operator\", \"entity.name.function\", \"text\", \"keyword.operator\", \"text\", \"storage.type\", \"text\", \"paren.lparen\"],\n        regex: \"(\" + identifierRe + \")(\\\\.)(\" + identifierRe + \")(\\\\s*)(=)(\\\\s*)(function)(\\\\s*)(\\\\()\",\n        next: \"function_arguments\"\n      }, {\n        token: [\"entity.name.function\", \"text\", \"keyword.operator\", \"text\", \"storage.type\", \"text\", \"paren.lparen\"],\n        regex: \"(\" + identifierRe + \")(\\\\s*)(=)(\\\\s*)(function)(\\\\s*)(\\\\()\",\n        next: \"function_arguments\"\n      }, {\n        token: [\"storage.type\", \"punctuation.operator\", \"entity.name.function\", \"text\", \"keyword.operator\", \"text\", \"storage.type\", \"text\", \"entity.name.function\", \"text\", \"paren.lparen\"],\n        regex: \"(\" + identifierRe + \")(\\\\.)(\" + identifierRe + \")(\\\\s*)(=)(\\\\s*)(function)(\\\\s+)(\\\\w+)(\\\\s*)(\\\\()\",\n        next: \"function_arguments\"\n      }, {\n        token: [\"storage.type\", \"text\", \"entity.name.function\", \"text\", \"paren.lparen\"],\n        regex: \"(function)(\\\\s+)(\" + identifierRe + \")(\\\\s*)(\\\\()\",\n        next: \"function_arguments\"\n      }, {\n        token: [\"entity.name.function\", \"text\", \"punctuation.operator\", \"text\", \"storage.type\", \"text\", \"paren.lparen\"],\n        regex: \"(\" + identifierRe + \")(\\\\s*)(:)(\\\\s*)(function)(\\\\s*)(\\\\()\",\n        next: \"function_arguments\"\n      }, {\n        token: [\"text\", \"text\", \"storage.type\", \"text\", \"paren.lparen\"],\n        regex: \"(:)(\\\\s*)(function)(\\\\s*)(\\\\()\",\n        next: \"function_arguments\"\n      }, {\n        token: \"keyword\",\n        regex: \"from(?=\\\\s*('|\\\"))\"\n      }, {\n        token: \"keyword\",\n        regex: \"(?:\" + kwBeforeRe + \")\\\\b\",\n        next: \"start\"\n      }, {\n        token: [\"support.constant\"],\n        regex: /that\\b/\n      }, {\n        token: [\"storage.type\", \"punctuation.operator\", \"support.function.firebug\"],\n        regex: /(console)(\\.)(warn|info|log|error|time|trace|timeEnd|assert)\\b/\n      }, {\n        token: keywordMapper,\n        regex: identifierRe\n      }, {\n        token: \"punctuation.operator\",\n        regex: /[.](?![.])/,\n        next: \"property\"\n      }, {\n        token: \"storage.type\",\n        regex: /=>/,\n        next: \"start\"\n      }, {\n        token: \"keyword.operator\",\n        regex: /--|\\+\\+|\\.{3}|===|==|=|!=|!==|<+=?|>+=?|!|&&|\\|\\||\\?:|[!$%&*+\\-~\\/^]=?/,\n        next: \"start\"\n      }, {\n        token: \"punctuation.operator\",\n        regex: /[?:,;.]/,\n        next: \"start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: /[\\[({]/,\n        next: \"start\"\n      }, {\n        token: \"paren.rparen\",\n        regex: /[\\])}]/\n      }, {\n        token: \"comment\",\n        regex: /^#!.*$/\n      }],\n      property: [{\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }, {\n        token: [\"storage.type\", \"punctuation.operator\", \"entity.name.function\", \"text\", \"keyword.operator\", \"text\", \"storage.type\", \"text\", \"entity.name.function\", \"text\", \"paren.lparen\"],\n        regex: \"(\" + identifierRe + \")(\\\\.)(\" + identifierRe + \")(\\\\s*)(=)(\\\\s*)(function)(?:(\\\\s+)(\\\\w+))?(\\\\s*)(\\\\()\",\n        next: \"function_arguments\"\n      }, {\n        token: \"punctuation.operator\",\n        regex: /[.](?![.])/\n      }, {\n        token: \"support.function\",\n        regex: /(s(?:h(?:ift|ow(?:Mod(?:elessDialog|alDialog)|Help))|croll(?:X|By(?:Pages|Lines)?|Y|To)?|t(?:op|rike)|i(?:n|zeToContent|debar|gnText)|ort|u(?:p|b(?:str(?:ing)?)?)|pli(?:ce|t)|e(?:nd|t(?:Re(?:sizable|questHeader)|M(?:i(?:nutes|lliseconds)|onth)|Seconds|Ho(?:tKeys|urs)|Year|Cursor|Time(?:out)?|Interval|ZOptions|Date|UTC(?:M(?:i(?:nutes|lliseconds)|onth)|Seconds|Hours|Date|FullYear)|FullYear|Active)|arch)|qrt|lice|avePreferences|mall)|h(?:ome|andleEvent)|navigate|c(?:har(?:CodeAt|At)|o(?:s|n(?:cat|textual|firm)|mpile)|eil|lear(?:Timeout|Interval)?|a(?:ptureEvents|ll)|reate(?:StyleSheet|Popup|EventObject))|t(?:o(?:GMTString|S(?:tring|ource)|U(?:TCString|pperCase)|Lo(?:caleString|werCase))|est|a(?:n|int(?:Enabled)?))|i(?:s(?:NaN|Finite)|ndexOf|talics)|d(?:isableExternalCapture|ump|etachEvent)|u(?:n(?:shift|taint|escape|watch)|pdateCommands)|j(?:oin|avaEnabled)|p(?:o(?:p|w)|ush|lugins.refresh|a(?:ddings|rse(?:Int|Float)?)|r(?:int|ompt|eference))|e(?:scape|nableExternalCapture|val|lementFromPoint|x(?:p|ec(?:Script|Command)?))|valueOf|UTC|queryCommand(?:State|Indeterm|Enabled|Value)|f(?:i(?:nd|le(?:ModifiedDate|Size|CreatedDate|UpdatedDate)|xed)|o(?:nt(?:size|color)|rward)|loor|romCharCode)|watch|l(?:ink|o(?:ad|g)|astIndexOf)|a(?:sin|nchor|cos|t(?:tachEvent|ob|an(?:2)?)|pply|lert|b(?:s|ort))|r(?:ou(?:nd|teEvents)|e(?:size(?:By|To)|calc|turnValue|place|verse|l(?:oad|ease(?:Capture|Events)))|andom)|g(?:o|et(?:ResponseHeader|M(?:i(?:nutes|lliseconds)|onth)|Se(?:conds|lection)|Hours|Year|Time(?:zoneOffset)?|Da(?:y|te)|UTC(?:M(?:i(?:nutes|lliseconds)|onth)|Seconds|Hours|Da(?:y|te)|FullYear)|FullYear|A(?:ttention|llResponseHeaders)))|m(?:in|ove(?:B(?:y|elow)|To(?:Absolute)?|Above)|ergeAttributes|a(?:tch|rgins|x))|b(?:toa|ig|o(?:ld|rderWidths)|link|ack))\\b(?=\\()/\n      }, {\n        token: \"support.function.dom\",\n        regex: /(s(?:ub(?:stringData|mit)|plitText|e(?:t(?:NamedItem|Attribute(?:Node)?)|lect))|has(?:ChildNodes|Feature)|namedItem|c(?:l(?:ick|o(?:se|neNode))|reate(?:C(?:omment|DATASection|aption)|T(?:Head|extNode|Foot)|DocumentFragment|ProcessingInstruction|E(?:ntityReference|lement)|Attribute))|tabIndex|i(?:nsert(?:Row|Before|Cell|Data)|tem)|open|delete(?:Row|C(?:ell|aption)|T(?:Head|Foot)|Data)|focus|write(?:ln)?|a(?:dd|ppend(?:Child|Data))|re(?:set|place(?:Child|Data)|move(?:NamedItem|Child|Attribute(?:Node)?)?)|get(?:NamedItem|Element(?:sBy(?:Name|TagName|ClassName)|ById)|Attribute(?:Node)?)|blur)\\b(?=\\()/\n      }, {\n        token: \"support.constant\",\n        regex: /(s(?:ystemLanguage|cr(?:ipts|ollbars|een(?:X|Y|Top|Left))|t(?:yle(?:Sheets)?|atus(?:Text|bar)?)|ibling(?:Below|Above)|ource|uffixes|e(?:curity(?:Policy)?|l(?:ection|f)))|h(?:istory|ost(?:name)?|as(?:h|Focus))|y|X(?:MLDocument|SLDocument)|n(?:ext|ame(?:space(?:s|URI)|Prop))|M(?:IN_VALUE|AX_VALUE)|c(?:haracterSet|o(?:n(?:structor|trollers)|okieEnabled|lorDepth|mp(?:onents|lete))|urrent|puClass|l(?:i(?:p(?:boardData)?|entInformation)|osed|asses)|alle(?:e|r)|rypto)|t(?:o(?:olbar|p)|ext(?:Transform|Indent|Decoration|Align)|ags)|SQRT(?:1_2|2)|i(?:n(?:ner(?:Height|Width)|put)|ds|gnoreCase)|zIndex|o(?:scpu|n(?:readystatechange|Line)|uter(?:Height|Width)|p(?:sProfile|ener)|ffscreenBuffering)|NEGATIVE_INFINITY|d(?:i(?:splay|alog(?:Height|Top|Width|Left|Arguments)|rectories)|e(?:scription|fault(?:Status|Ch(?:ecked|arset)|View)))|u(?:ser(?:Profile|Language|Agent)|n(?:iqueID|defined)|pdateInterval)|_content|p(?:ixelDepth|ort|ersonalbar|kcs11|l(?:ugins|atform)|a(?:thname|dding(?:Right|Bottom|Top|Left)|rent(?:Window|Layer)?|ge(?:X(?:Offset)?|Y(?:Offset)?))|r(?:o(?:to(?:col|type)|duct(?:Sub)?|mpter)|e(?:vious|fix)))|e(?:n(?:coding|abledPlugin)|x(?:ternal|pando)|mbeds)|v(?:isibility|endor(?:Sub)?|Linkcolor)|URLUnencoded|P(?:I|OSITIVE_INFINITY)|f(?:ilename|o(?:nt(?:Size|Family|Weight)|rmName)|rame(?:s|Element)|gColor)|E|whiteSpace|l(?:i(?:stStyleType|n(?:eHeight|kColor))|o(?:ca(?:tion(?:bar)?|lName)|wsrc)|e(?:ngth|ft(?:Context)?)|a(?:st(?:M(?:odified|atch)|Index|Paren)|yer(?:s|X)|nguage))|a(?:pp(?:MinorVersion|Name|Co(?:deName|re)|Version)|vail(?:Height|Top|Width|Left)|ll|r(?:ity|guments)|Linkcolor|bove)|r(?:ight(?:Context)?|e(?:sponse(?:XML|Text)|adyState))|global|x|m(?:imeTypes|ultiline|enubar|argin(?:Right|Bottom|Top|Left))|L(?:N(?:10|2)|OG(?:10E|2E))|b(?:o(?:ttom|rder(?:Width|RightWidth|BottomWidth|Style|Color|TopWidth|LeftWidth))|ufferDepth|elow|ackground(?:Color|Image)))\\b/\n      }, {\n        token: \"identifier\",\n        regex: identifierRe\n      }, {\n        regex: \"\",\n        token: \"empty\",\n        next: \"no_regex\"\n      }],\n      \"start\": [DocCommentHighlightRules.getStartRule(\"doc-start\"), comments(\"start\"), {\n        token: \"string.regexp\",\n        regex: \"\\\\/\",\n        next: \"regex\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+|^$\",\n        next: \"start\"\n      }, {\n        token: \"empty\",\n        regex: \"\",\n        next: \"no_regex\"\n      }],\n      \"regex\": [{\n        token: \"regexp.keyword.operator\",\n        regex: \"\\\\\\\\(?:u[\\\\da-fA-F]{4}|x[\\\\da-fA-F]{2}|.)\"\n      }, {\n        token: \"string.regexp\",\n        regex: \"/[sxngimy]*\",\n        next: \"no_regex\"\n      }, {\n        token: \"invalid\",\n        regex: /\\{\\d+\\b,?\\d*\\}[+*]|[+*$^?][+*]|[$^][?]|\\?{3,}/\n      }, {\n        token: \"constant.language.escape\",\n        regex: /\\(\\?[:=!]|\\)|\\{\\d+\\b,?\\d*\\}|[+*]\\?|[()$^+*?.]/\n      }, {\n        token: \"constant.language.delimiter\",\n        regex: /\\|/\n      }, {\n        token: \"constant.language.escape\",\n        regex: /\\[\\^?/,\n        next: \"regex_character_class\"\n      }, {\n        token: \"empty\",\n        regex: \"$\",\n        next: \"no_regex\"\n      }, {\n        defaultToken: \"string.regexp\"\n      }],\n      \"regex_character_class\": [{\n        token: \"regexp.charclass.keyword.operator\",\n        regex: \"\\\\\\\\(?:u[\\\\da-fA-F]{4}|x[\\\\da-fA-F]{2}|.)\"\n      }, {\n        token: \"constant.language.escape\",\n        regex: \"]\",\n        next: \"regex\"\n      }, {\n        token: \"constant.language.escape\",\n        regex: \"-\"\n      }, {\n        token: \"empty\",\n        regex: \"$\",\n        next: \"no_regex\"\n      }, {\n        defaultToken: \"string.regexp.charachterclass\"\n      }],\n      \"function_arguments\": [{\n        token: \"variable.parameter\",\n        regex: identifierRe\n      }, {\n        token: \"punctuation.operator\",\n        regex: \"[, ]+\"\n      }, {\n        token: \"punctuation.operator\",\n        regex: \"$\"\n      }, {\n        token: \"empty\",\n        regex: \"\",\n        next: \"no_regex\"\n      }],\n      \"qqstring\": [{\n        token: \"constant.language.escape\",\n        regex: escapedRe\n      }, {\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        consumeLineEnd: true\n      }, {\n        token: \"string\",\n        regex: '\"|$',\n        next: \"no_regex\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"qstring\": [{\n        token: \"constant.language.escape\",\n        regex: escapedRe\n      }, {\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        consumeLineEnd: true\n      }, {\n        token: \"string\",\n        regex: \"'|$\",\n        next: \"no_regex\"\n      }, {\n        defaultToken: \"string\"\n      }]\n    };\n\n    if (!options || !options.noES6) {\n      this.$rules.no_regex.unshift({\n        regex: \"[{}]\",\n        onMatch: function onMatch(val, state, stack) {\n          this.next = val == \"{\" ? this.nextState : \"\";\n\n          if (val == \"{\" && stack.length) {\n            stack.unshift(\"start\", state);\n          } else if (val == \"}\" && stack.length) {\n            stack.shift();\n            this.next = stack.shift();\n            if (this.next.indexOf(\"string\") != -1 || this.next.indexOf(\"jsx\") != -1) return \"paren.quasi.end\";\n          }\n\n          return val == \"{\" ? \"paren.lparen\" : \"paren.rparen\";\n        },\n        nextState: \"start\"\n      }, {\n        token: \"string.quasi.start\",\n        regex: /`/,\n        push: [{\n          token: \"constant.language.escape\",\n          regex: escapedRe\n        }, {\n          token: \"paren.quasi.start\",\n          regex: /\\${/,\n          push: \"start\"\n        }, {\n          token: \"string.quasi.end\",\n          regex: /`/,\n          next: \"pop\"\n        }, {\n          defaultToken: \"string.quasi\"\n        }]\n      });\n      if (!options || options.jsx != false) JSX.call(this);\n    }\n\n    this.embedRules(DocCommentHighlightRules, \"doc-\", [DocCommentHighlightRules.getEndRule(\"no_regex\")]);\n    this.normalizeRules();\n  };\n\n  oop.inherits(JavaScriptHighlightRules, TextHighlightRules);\n\n  function JSX() {\n    var tagRegex = identifierRe.replace(\"\\\\d\", \"\\\\d\\\\-\");\n    var jsxTag = {\n      onMatch: function onMatch(val, state, stack) {\n        var offset = val.charAt(1) == \"/\" ? 2 : 1;\n\n        if (offset == 1) {\n          if (state != this.nextState) stack.unshift(this.next, this.nextState, 0);else stack.unshift(this.next);\n          stack[2]++;\n        } else if (offset == 2) {\n          if (state == this.nextState) {\n            stack[1]--;\n\n            if (!stack[1] || stack[1] < 0) {\n              stack.shift();\n              stack.shift();\n            }\n          }\n        }\n\n        return [{\n          type: \"meta.tag.punctuation.\" + (offset == 1 ? \"\" : \"end-\") + \"tag-open.xml\",\n          value: val.slice(0, offset)\n        }, {\n          type: \"meta.tag.tag-name.xml\",\n          value: val.substr(offset)\n        }];\n      },\n      regex: \"</?\" + tagRegex + \"\",\n      next: \"jsxAttributes\",\n      nextState: \"jsx\"\n    };\n    this.$rules.start.unshift(jsxTag);\n    var jsxJsRule = {\n      regex: \"{\",\n      token: \"paren.quasi.start\",\n      push: \"start\"\n    };\n    this.$rules.jsx = [jsxJsRule, jsxTag, {\n      include: \"reference\"\n    }, {\n      defaultToken: \"string\"\n    }];\n    this.$rules.jsxAttributes = [{\n      token: \"meta.tag.punctuation.tag-close.xml\",\n      regex: \"/?>\",\n      onMatch: function onMatch(value, currentState, stack) {\n        if (currentState == stack[0]) stack.shift();\n\n        if (value.length == 2) {\n          if (stack[0] == this.nextState) stack[1]--;\n\n          if (!stack[1] || stack[1] < 0) {\n            stack.splice(0, 2);\n          }\n        }\n\n        this.next = stack[0] || \"start\";\n        return [{\n          type: this.token,\n          value: value\n        }];\n      },\n      nextState: \"jsx\"\n    }, jsxJsRule, comments(\"jsxAttributes\"), {\n      token: \"entity.other.attribute-name.xml\",\n      regex: tagRegex\n    }, {\n      token: \"keyword.operator.attribute-equals.xml\",\n      regex: \"=\"\n    }, {\n      token: \"text.tag-whitespace.xml\",\n      regex: \"\\\\s+\"\n    }, {\n      token: \"string.attribute-value.xml\",\n      regex: \"'\",\n      stateName: \"jsx_attr_q\",\n      push: [{\n        token: \"string.attribute-value.xml\",\n        regex: \"'\",\n        next: \"pop\"\n      }, {\n        include: \"reference\"\n      }, {\n        defaultToken: \"string.attribute-value.xml\"\n      }]\n    }, {\n      token: \"string.attribute-value.xml\",\n      regex: '\"',\n      stateName: \"jsx_attr_qq\",\n      push: [{\n        token: \"string.attribute-value.xml\",\n        regex: '\"',\n        next: \"pop\"\n      }, {\n        include: \"reference\"\n      }, {\n        defaultToken: \"string.attribute-value.xml\"\n      }]\n    }, jsxTag];\n    this.$rules.reference = [{\n      token: \"constant.language.escape.reference.xml\",\n      regex: \"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)\"\n    }];\n  }\n\n  function comments(next) {\n    return [{\n      token: \"comment\",\n      // multi line comment\n      regex: /\\/\\*/,\n      next: [DocCommentHighlightRules.getTagRule(), {\n        token: \"comment\",\n        regex: \"\\\\*\\\\/\",\n        next: next || \"pop\"\n      }, {\n        defaultToken: \"comment\",\n        caseInsensitive: true\n      }]\n    }, {\n      token: \"comment\",\n      regex: \"\\\\/\\\\/\",\n      next: [DocCommentHighlightRules.getTagRule(), {\n        token: \"comment\",\n        regex: \"$|^\",\n        next: next || \"pop\"\n      }, {\n        defaultToken: \"comment\",\n        caseInsensitive: true\n      }]\n    }];\n  }\n\n  exports.JavaScriptHighlightRules = JavaScriptHighlightRules;\n});\nace.define(\"ace/mode/xml_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var XmlHighlightRules = function XmlHighlightRules(normalize) {\n    var tagRegex = \"[_:a-zA-Z\\xC0-\\uFFFF][-_:.a-zA-Z0-9\\xC0-\\uFFFF]*\";\n    this.$rules = {\n      start: [{\n        token: \"string.cdata.xml\",\n        regex: \"<\\\\!\\\\[CDATA\\\\[\",\n        next: \"cdata\"\n      }, {\n        token: [\"punctuation.instruction.xml\", \"keyword.instruction.xml\"],\n        regex: \"(<\\\\?)(\" + tagRegex + \")\",\n        next: \"processing_instruction\"\n      }, {\n        token: \"comment.start.xml\",\n        regex: \"<\\\\!--\",\n        next: \"comment\"\n      }, {\n        token: [\"xml-pe.doctype.xml\", \"xml-pe.doctype.xml\"],\n        regex: \"(<\\\\!)(DOCTYPE)(?=[\\\\s])\",\n        next: \"doctype\",\n        caseInsensitive: true\n      }, {\n        include: \"tag\"\n      }, {\n        token: \"text.end-tag-open.xml\",\n        regex: \"</\"\n      }, {\n        token: \"text.tag-open.xml\",\n        regex: \"<\"\n      }, {\n        include: \"reference\"\n      }, {\n        defaultToken: \"text.xml\"\n      }],\n      processing_instruction: [{\n        token: \"entity.other.attribute-name.decl-attribute-name.xml\",\n        regex: tagRegex\n      }, {\n        token: \"keyword.operator.decl-attribute-equals.xml\",\n        regex: \"=\"\n      }, {\n        include: \"whitespace\"\n      }, {\n        include: \"string\"\n      }, {\n        token: \"punctuation.xml-decl.xml\",\n        regex: \"\\\\?>\",\n        next: \"start\"\n      }],\n      doctype: [{\n        include: \"whitespace\"\n      }, {\n        include: \"string\"\n      }, {\n        token: \"xml-pe.doctype.xml\",\n        regex: \">\",\n        next: \"start\"\n      }, {\n        token: \"xml-pe.xml\",\n        regex: \"[-_a-zA-Z0-9:]+\"\n      }, {\n        token: \"punctuation.int-subset\",\n        regex: \"\\\\[\",\n        push: \"int_subset\"\n      }],\n      int_subset: [{\n        token: \"text.xml\",\n        regex: \"\\\\s+\"\n      }, {\n        token: \"punctuation.int-subset.xml\",\n        regex: \"]\",\n        next: \"pop\"\n      }, {\n        token: [\"punctuation.markup-decl.xml\", \"keyword.markup-decl.xml\"],\n        regex: \"(<\\\\!)(\" + tagRegex + \")\",\n        push: [{\n          token: \"text\",\n          regex: \"\\\\s+\"\n        }, {\n          token: \"punctuation.markup-decl.xml\",\n          regex: \">\",\n          next: \"pop\"\n        }, {\n          include: \"string\"\n        }]\n      }],\n      cdata: [{\n        token: \"string.cdata.xml\",\n        regex: \"\\\\]\\\\]>\",\n        next: \"start\"\n      }, {\n        token: \"text.xml\",\n        regex: \"\\\\s+\"\n      }, {\n        token: \"text.xml\",\n        regex: \"(?:[^\\\\]]|\\\\](?!\\\\]>))+\"\n      }],\n      comment: [{\n        token: \"comment.end.xml\",\n        regex: \"-->\",\n        next: \"start\"\n      }, {\n        defaultToken: \"comment.xml\"\n      }],\n      reference: [{\n        token: \"constant.language.escape.reference.xml\",\n        regex: \"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)\"\n      }],\n      attr_reference: [{\n        token: \"constant.language.escape.reference.attribute-value.xml\",\n        regex: \"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)\"\n      }],\n      tag: [{\n        token: [\"meta.tag.punctuation.tag-open.xml\", \"meta.tag.punctuation.end-tag-open.xml\", \"meta.tag.tag-name.xml\"],\n        regex: \"(?:(<)|(</))((?:\" + tagRegex + \":)?\" + tagRegex + \")\",\n        next: [{\n          include: \"attributes\"\n        }, {\n          token: \"meta.tag.punctuation.tag-close.xml\",\n          regex: \"/?>\",\n          next: \"start\"\n        }]\n      }],\n      tag_whitespace: [{\n        token: \"text.tag-whitespace.xml\",\n        regex: \"\\\\s+\"\n      }],\n      whitespace: [{\n        token: \"text.whitespace.xml\",\n        regex: \"\\\\s+\"\n      }],\n      string: [{\n        token: \"string.xml\",\n        regex: \"'\",\n        push: [{\n          token: \"string.xml\",\n          regex: \"'\",\n          next: \"pop\"\n        }, {\n          defaultToken: \"string.xml\"\n        }]\n      }, {\n        token: \"string.xml\",\n        regex: '\"',\n        push: [{\n          token: \"string.xml\",\n          regex: '\"',\n          next: \"pop\"\n        }, {\n          defaultToken: \"string.xml\"\n        }]\n      }],\n      attributes: [{\n        token: \"entity.other.attribute-name.xml\",\n        regex: tagRegex\n      }, {\n        token: \"keyword.operator.attribute-equals.xml\",\n        regex: \"=\"\n      }, {\n        include: \"tag_whitespace\"\n      }, {\n        include: \"attribute_value\"\n      }],\n      attribute_value: [{\n        token: \"string.attribute-value.xml\",\n        regex: \"'\",\n        push: [{\n          token: \"string.attribute-value.xml\",\n          regex: \"'\",\n          next: \"pop\"\n        }, {\n          include: \"attr_reference\"\n        }, {\n          defaultToken: \"string.attribute-value.xml\"\n        }]\n      }, {\n        token: \"string.attribute-value.xml\",\n        regex: '\"',\n        push: [{\n          token: \"string.attribute-value.xml\",\n          regex: '\"',\n          next: \"pop\"\n        }, {\n          include: \"attr_reference\"\n        }, {\n          defaultToken: \"string.attribute-value.xml\"\n        }]\n      }]\n    };\n    if (this.constructor === XmlHighlightRules) this.normalizeRules();\n  };\n\n  (function () {\n    this.embedTagRules = function (HighlightRules, prefix, tag) {\n      this.$rules.tag.unshift({\n        token: [\"meta.tag.punctuation.tag-open.xml\", \"meta.tag.\" + tag + \".tag-name.xml\"],\n        regex: \"(<)(\" + tag + \"(?=\\\\s|>|$))\",\n        next: [{\n          include: \"attributes\"\n        }, {\n          token: \"meta.tag.punctuation.tag-close.xml\",\n          regex: \"/?>\",\n          next: prefix + \"start\"\n        }]\n      });\n      this.$rules[tag + \"-end\"] = [{\n        include: \"attributes\"\n      }, {\n        token: \"meta.tag.punctuation.tag-close.xml\",\n        regex: \"/?>\",\n        next: \"start\",\n        onMatch: function onMatch(value, currentState, stack) {\n          stack.splice(0);\n          return this.token;\n        }\n      }];\n      this.embedRules(HighlightRules, prefix, [{\n        token: [\"meta.tag.punctuation.end-tag-open.xml\", \"meta.tag.\" + tag + \".tag-name.xml\"],\n        regex: \"(</)(\" + tag + \"(?=\\\\s|>|$))\",\n        next: tag + \"-end\"\n      }, {\n        token: \"string.cdata.xml\",\n        regex: \"<\\\\!\\\\[CDATA\\\\[\"\n      }, {\n        token: \"string.cdata.xml\",\n        regex: \"\\\\]\\\\]>\"\n      }]);\n    };\n  }).call(TextHighlightRules.prototype);\n  oop.inherits(XmlHighlightRules, TextHighlightRules);\n  exports.XmlHighlightRules = XmlHighlightRules;\n});\nace.define(\"ace/mode/html_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/lib/lang\", \"ace/mode/css_highlight_rules\", \"ace/mode/javascript_highlight_rules\", \"ace/mode/xml_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var lang = require(\"../lib/lang\");\n\n  var CssHighlightRules = require(\"./css_highlight_rules\").CssHighlightRules;\n\n  var JavaScriptHighlightRules = require(\"./javascript_highlight_rules\").JavaScriptHighlightRules;\n\n  var XmlHighlightRules = require(\"./xml_highlight_rules\").XmlHighlightRules;\n\n  var tagMap = lang.createMap({\n    a: 'anchor',\n    button: 'form',\n    form: 'form',\n    img: 'image',\n    input: 'form',\n    label: 'form',\n    option: 'form',\n    script: 'script',\n    select: 'form',\n    textarea: 'form',\n    style: 'style',\n    table: 'table',\n    tbody: 'table',\n    td: 'table',\n    tfoot: 'table',\n    th: 'table',\n    tr: 'table'\n  });\n\n  var HtmlHighlightRules = function HtmlHighlightRules() {\n    XmlHighlightRules.call(this);\n    this.addRules({\n      attributes: [{\n        include: \"tag_whitespace\"\n      }, {\n        token: \"entity.other.attribute-name.xml\",\n        regex: \"[-_a-zA-Z0-9:.]+\"\n      }, {\n        token: \"keyword.operator.attribute-equals.xml\",\n        regex: \"=\",\n        push: [{\n          include: \"tag_whitespace\"\n        }, {\n          token: \"string.unquoted.attribute-value.html\",\n          regex: \"[^<>='\\\"`\\\\s]+\",\n          next: \"pop\"\n        }, {\n          token: \"empty\",\n          regex: \"\",\n          next: \"pop\"\n        }]\n      }, {\n        include: \"attribute_value\"\n      }],\n      tag: [{\n        token: function token(start, tag) {\n          var group = tagMap[tag];\n          return [\"meta.tag.punctuation.\" + (start == \"<\" ? \"\" : \"end-\") + \"tag-open.xml\", \"meta.tag\" + (group ? \".\" + group : \"\") + \".tag-name.xml\"];\n        },\n        regex: \"(</?)([-_a-zA-Z0-9:.]+)\",\n        next: \"tag_stuff\"\n      }],\n      tag_stuff: [{\n        include: \"attributes\"\n      }, {\n        token: \"meta.tag.punctuation.tag-close.xml\",\n        regex: \"/?>\",\n        next: \"start\"\n      }]\n    });\n    this.embedTagRules(CssHighlightRules, \"css-\", \"style\");\n    this.embedTagRules(new JavaScriptHighlightRules({\n      jsx: false\n    }).getRules(), \"js-\", \"script\");\n    if (this.constructor === HtmlHighlightRules) this.normalizeRules();\n  };\n\n  oop.inherits(HtmlHighlightRules, XmlHighlightRules);\n  exports.HtmlHighlightRules = HtmlHighlightRules;\n});\nace.define(\"ace/mode/csound_document_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/csound_orchestra_highlight_rules\", \"ace/mode/csound_score_highlight_rules\", \"ace/mode/html_highlight_rules\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var CsoundOrchestraHighlightRules = require(\"./csound_orchestra_highlight_rules\").CsoundOrchestraHighlightRules;\n\n  var CsoundScoreHighlightRules = require(\"./csound_score_highlight_rules\").CsoundScoreHighlightRules;\n\n  var HtmlHighlightRules = require(\"./html_highlight_rules\").HtmlHighlightRules;\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var CsoundDocumentHighlightRules = function CsoundDocumentHighlightRules() {\n    var orchestraHighlightRules = new CsoundOrchestraHighlightRules(\"csound-\");\n    var scoreHighlightRules = new CsoundScoreHighlightRules(\"csound-score-\");\n    this.$rules = {\n      \"start\": [{\n        token: [\"meta.tag.punctuation.tag-open.csound-document\", \"entity.name.tag.begin.csound-document\", \"meta.tag.punctuation.tag-close.csound-document\"],\n        regex: /(<)(CsoundSynthesi[sz]er)(>)/,\n        next: \"synthesizer\"\n      }, {\n        defaultToken: \"text.csound-document\"\n      }],\n      \"synthesizer\": [{\n        token: [\"meta.tag.punctuation.end-tag-open.csound-document\", \"entity.name.tag.begin.csound-document\", \"meta.tag.punctuation.tag-close.csound-document\"],\n        regex: \"(</)(CsoundSynthesi[sz]er)(>)\",\n        next: \"start\"\n      }, {\n        token: [\"meta.tag.punctuation.tag-open.csound-document\", \"entity.name.tag.begin.csound-document\", \"meta.tag.punctuation.tag-close.csound-document\"],\n        regex: \"(<)(CsInstruments)(>)\",\n        next: orchestraHighlightRules.embeddedRulePrefix + \"start\"\n      }, {\n        token: [\"meta.tag.punctuation.tag-open.csound-document\", \"entity.name.tag.begin.csound-document\", \"meta.tag.punctuation.tag-close.csound-document\"],\n        regex: \"(<)(CsScore)(>)\",\n        next: scoreHighlightRules.embeddedRulePrefix + \"start\"\n      }, {\n        token: [\"meta.tag.punctuation.tag-open.csound-document\", \"entity.name.tag.begin.csound-document\", \"meta.tag.punctuation.tag-close.csound-document\"],\n        regex: \"(<)([Hh][Tt][Mm][Ll])(>)\",\n        next: \"html-start\"\n      }]\n    };\n    this.embedRules(orchestraHighlightRules.getRules(), orchestraHighlightRules.embeddedRulePrefix, [{\n      token: [\"meta.tag.punctuation.end-tag-open.csound-document\", \"entity.name.tag.begin.csound-document\", \"meta.tag.punctuation.tag-close.csound-document\"],\n      regex: \"(</)(CsInstruments)(>)\",\n      next: \"synthesizer\"\n    }]);\n    this.embedRules(scoreHighlightRules.getRules(), scoreHighlightRules.embeddedRulePrefix, [{\n      token: [\"meta.tag.punctuation.end-tag-open.csound-document\", \"entity.name.tag.begin.csound-document\", \"meta.tag.punctuation.tag-close.csound-document\"],\n      regex: \"(</)(CsScore)(>)\",\n      next: \"synthesizer\"\n    }]);\n    this.embedRules(HtmlHighlightRules, \"html-\", [{\n      token: [\"meta.tag.punctuation.end-tag-open.csound-document\", \"entity.name.tag.begin.csound-document\", \"meta.tag.punctuation.tag-close.csound-document\"],\n      regex: \"(</)([Hh][Tt][Mm][Ll])(>)\",\n      next: \"synthesizer\"\n    }]);\n    this.normalizeRules();\n  };\n\n  oop.inherits(CsoundDocumentHighlightRules, TextHighlightRules);\n  exports.CsoundDocumentHighlightRules = CsoundDocumentHighlightRules;\n});\nace.define(\"ace/mode/csound_document\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/csound_document_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextMode = require(\"./text\").Mode;\n\n  var CsoundDocumentHighlightRules = require(\"./csound_document_highlight_rules\").CsoundDocumentHighlightRules;\n\n  var Mode = function Mode() {\n    this.HighlightRules = CsoundDocumentHighlightRules;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.$id = \"ace/mode/csound_document\";\n    this.snippetFileId = \"ace/snippets/csound_document\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n\n(function () {\n  ace.require([\"ace/mode/csound_document\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":null,"metadata":{},"sourceType":"script"}