{"ast":null,"code":"ace.define(\"ace/mode/julia_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var JuliaHighlightRules = function JuliaHighlightRules() {\n    this.$rules = {\n      start: [{\n        include: '#function_decl'\n      }, {\n        include: '#function_call'\n      }, {\n        include: '#type_decl'\n      }, {\n        include: '#keyword'\n      }, {\n        include: '#operator'\n      }, {\n        include: '#number'\n      }, {\n        include: '#string'\n      }, {\n        include: '#comment'\n      }],\n      '#bracket': [{\n        token: 'keyword.bracket.julia',\n        regex: '\\\\(|\\\\)|\\\\[|\\\\]|\\\\{|\\\\}|,'\n      }],\n      '#comment': [{\n        token: ['punctuation.definition.comment.julia', 'comment.line.number-sign.julia'],\n        regex: '(#)(?!\\\\{)(.*$)'\n      }],\n      '#function_call': [{\n        token: ['support.function.julia', 'text'],\n        regex: \"([a-zA-Z0-9_]+!?)([\\\\w\\\\xff-\\\\u218e\\\\u2455-\\\\uffff]*\\\\()\"\n      }],\n      '#function_decl': [{\n        token: ['keyword.other.julia', 'meta.function.julia', 'entity.name.function.julia', 'meta.function.julia', 'text'],\n        regex: \"(function|macro)(\\\\s*)([a-zA-Z0-9_\\\\{]+!?)([\\\\w\\\\xff-\\\\u218e\\\\u2455-\\\\uffff]*)([(\\\\\\\\{])\"\n      }],\n      '#keyword': [{\n        token: 'keyword.other.julia',\n        regex: '\\\\b(?:function|type|immutable|macro|quote|abstract|bitstype|typealias|module|baremodule|new)\\\\b'\n      }, {\n        token: 'keyword.control.julia',\n        regex: '\\\\b(?:if|else|elseif|while|for|in|begin|let|end|do|try|catch|finally|return|break|continue)\\\\b'\n      }, {\n        token: 'storage.modifier.variable.julia',\n        regex: '\\\\b(?:global|local|const|export|import|importall|using)\\\\b'\n      }, {\n        token: 'variable.macro.julia',\n        regex: \"@[\\\\w\\\\xff-\\\\u218e\\\\u2455-\\\\uffff]+\\\\b\"\n      }],\n      '#number': [{\n        token: 'constant.numeric.julia',\n        regex: '\\\\b0(?:x|X)[0-9a-fA-F]*|(?:\\\\b[0-9]+\\\\.?[0-9]*|\\\\.[0-9]+)(?:(?:e|E)(?:\\\\+|-)?[0-9]*)?(?:im)?|\\\\bInf(?:32)?\\\\b|\\\\bNaN(?:32)?\\\\b|\\\\btrue\\\\b|\\\\bfalse\\\\b'\n      }],\n      '#operator': [{\n        token: 'keyword.operator.update.julia',\n        regex: '=|:=|\\\\+=|-=|\\\\*=|/=|//=|\\\\.//=|\\\\.\\\\*=|\\\\\\\\=|\\\\.\\\\\\\\=|^=|\\\\.^=|%=|\\\\|=|&=|\\\\$=|<<=|>>='\n      }, {\n        token: 'keyword.operator.ternary.julia',\n        regex: '\\\\?|:'\n      }, {\n        token: 'keyword.operator.boolean.julia',\n        regex: '\\\\|\\\\||&&|!'\n      }, {\n        token: 'keyword.operator.arrow.julia',\n        regex: '->|<-|-->'\n      }, {\n        token: 'keyword.operator.relation.julia',\n        regex: '>|<|>=|<=|==|!=|\\\\.>|\\\\.<|\\\\.>=|\\\\.>=|\\\\.==|\\\\.!=|\\\\.=|\\\\.!|<:|:>'\n      }, {\n        token: 'keyword.operator.range.julia',\n        regex: ':'\n      }, {\n        token: 'keyword.operator.shift.julia',\n        regex: '<<|>>'\n      }, {\n        token: 'keyword.operator.bitwise.julia',\n        regex: '\\\\||\\\\&|~'\n      }, {\n        token: 'keyword.operator.arithmetic.julia',\n        regex: '\\\\+|-|\\\\*|\\\\.\\\\*|/|\\\\./|//|\\\\.//|%|\\\\.%|\\\\\\\\|\\\\.\\\\\\\\|\\\\^|\\\\.\\\\^'\n      }, {\n        token: 'keyword.operator.isa.julia',\n        regex: '::'\n      }, {\n        token: 'keyword.operator.dots.julia',\n        regex: '\\\\.(?=[a-zA-Z])|\\\\.\\\\.+'\n      }, {\n        token: 'keyword.operator.interpolation.julia',\n        regex: '\\\\$#?(?=.)'\n      }, {\n        token: ['variable', 'keyword.operator.transposed-variable.julia'],\n        regex: \"([\\\\w\\\\xff-\\\\u218e\\\\u2455-\\\\uffff]+)((?:'|\\\\.')*\\\\.?')\"\n      }, {\n        token: 'text',\n        regex: '\\\\[|\\\\('\n      }, {\n        token: ['text', 'keyword.operator.transposed-matrix.julia'],\n        regex: \"([\\\\]\\\\)])((?:'|\\\\.')*\\\\.?')\"\n      }],\n      '#string': [{\n        token: 'punctuation.definition.string.begin.julia',\n        regex: '\\'',\n        push: [{\n          token: 'punctuation.definition.string.end.julia',\n          regex: '\\'',\n          next: 'pop'\n        }, {\n          include: '#string_escaped_char'\n        }, {\n          defaultToken: 'string.quoted.single.julia'\n        }]\n      }, {\n        token: 'punctuation.definition.string.begin.julia',\n        regex: '\"',\n        push: [{\n          token: 'punctuation.definition.string.end.julia',\n          regex: '\"',\n          next: 'pop'\n        }, {\n          include: '#string_escaped_char'\n        }, {\n          defaultToken: 'string.quoted.double.julia'\n        }]\n      }, {\n        token: 'punctuation.definition.string.begin.julia',\n        regex: \"\\\\b[\\\\w\\\\xff-\\\\u218e\\\\u2455-\\\\uffff]+\\\"\",\n        push: [{\n          token: 'punctuation.definition.string.end.julia',\n          regex: \"\\\"[\\\\w\\\\xff-\\\\u218e\\\\u2455-\\\\uffff]*\",\n          next: 'pop'\n        }, {\n          include: '#string_custom_escaped_char'\n        }, {\n          defaultToken: 'string.quoted.custom-double.julia'\n        }]\n      }, {\n        token: 'punctuation.definition.string.begin.julia',\n        regex: '`',\n        push: [{\n          token: 'punctuation.definition.string.end.julia',\n          regex: '`',\n          next: 'pop'\n        }, {\n          include: '#string_escaped_char'\n        }, {\n          defaultToken: 'string.quoted.backtick.julia'\n        }]\n      }],\n      '#string_custom_escaped_char': [{\n        token: 'constant.character.escape.julia',\n        regex: '\\\\\\\\\"'\n      }],\n      '#string_escaped_char': [{\n        token: 'constant.character.escape.julia',\n        regex: '\\\\\\\\(?:\\\\\\\\|[0-3]\\\\d{,2}|[4-7]\\\\d?|x[a-fA-F0-9]{,2}|u[a-fA-F0-9]{,4}|U[a-fA-F0-9]{,8}|.)'\n      }],\n      '#type_decl': [{\n        token: ['keyword.control.type.julia', 'meta.type.julia', 'entity.name.type.julia', 'entity.other.inherited-class.julia', 'punctuation.separator.inheritance.julia', 'entity.other.inherited-class.julia'],\n        regex: '(type|immutable)(\\\\s+)([a-zA-Z0-9_]+)(?:(\\\\s*)(<:)(\\\\s*[.a-zA-Z0-9_:]+))?'\n      }, {\n        token: ['other.typed-variable.julia', 'support.type.julia'],\n        regex: '([a-zA-Z0-9_]+)(::[a-zA-Z0-9_{}]+)'\n      }]\n    };\n    this.normalizeRules();\n  };\n\n  JuliaHighlightRules.metaData = {\n    fileTypes: ['jl'],\n    firstLineMatch: '^#!.*\\\\bjulia\\\\s*$',\n    foldingStartMarker: '^\\\\s*(?:if|while|for|begin|function|macro|module|baremodule|type|immutable|let)\\\\b(?!.*\\\\bend\\\\b).*$',\n    foldingStopMarker: '^\\\\s*(?:end)\\\\b.*$',\n    name: 'Julia',\n    scopeName: 'source.julia'\n  };\n  oop.inherits(JuliaHighlightRules, TextHighlightRules);\n  exports.JuliaHighlightRules = JuliaHighlightRules;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n\n  var Range = require(\"../../range\").Range;\n\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n\n      return fw;\n    };\n\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n\n        return range;\n      }\n\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n\n        endRow = row;\n      }\n\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n\n      var endRow = row;\n\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/julia\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/julia_highlight_rules\", \"ace/mode/folding/cstyle\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextMode = require(\"./text\").Mode;\n\n  var JuliaHighlightRules = require(\"./julia_highlight_rules\").JuliaHighlightRules;\n\n  var FoldMode = require(\"./folding/cstyle\").FoldMode;\n\n  var Mode = function Mode() {\n    this.HighlightRules = JuliaHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"#\";\n    this.blockComment = \"\";\n    this.$id = \"ace/mode/julia\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n\n(function () {\n  ace.require([\"ace/mode/julia\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":null,"metadata":{},"sourceType":"script"}