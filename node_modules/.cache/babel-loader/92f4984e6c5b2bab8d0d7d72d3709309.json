{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (_isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport CloseOutlined from '@ant-design/icons/CloseOutlined';\nimport CheckCircleOutlined from '@ant-design/icons/CheckCircleOutlined';\nimport ExclamationCircleOutlined from '@ant-design/icons/ExclamationCircleOutlined';\nimport InfoCircleOutlined from '@ant-design/icons/InfoCircleOutlined';\nimport CloseCircleOutlined from '@ant-design/icons/CloseCircleOutlined';\nimport CheckCircleFilled from '@ant-design/icons/CheckCircleFilled';\nimport ExclamationCircleFilled from '@ant-design/icons/ExclamationCircleFilled';\nimport InfoCircleFilled from '@ant-design/icons/InfoCircleFilled';\nimport CloseCircleFilled from '@ant-design/icons/CloseCircleFilled';\nimport Animate from 'rc-animate';\nimport classNames from 'classnames';\nimport { ConfigConsumer } from '../config-provider';\nimport getDataOrAriaProps from '../_util/getDataOrAriaProps';\nimport ErrorBoundary from './ErrorBoundary';\n\nfunction noop() {}\n\nvar iconMapFilled = {\n  success: CheckCircleFilled,\n  info: InfoCircleFilled,\n  error: CloseCircleFilled,\n  warning: ExclamationCircleFilled\n};\nvar iconMapOutlined = {\n  success: CheckCircleOutlined,\n  info: InfoCircleOutlined,\n  error: CloseCircleOutlined,\n  warning: ExclamationCircleOutlined\n};\n\nvar Alert = /*#__PURE__*/function (_React$Component) {\n  _inherits(Alert, _React$Component);\n\n  var _super = _createSuper(Alert);\n\n  function Alert() {\n    var _this;\n\n    _classCallCheck(this, Alert);\n\n    _this = _super.apply(this, arguments);\n    _this.state = {\n      closing: false,\n      closed: false\n    };\n\n    _this.handleClose = function (e) {\n      e.preventDefault();\n      var dom = ReactDOM.findDOMNode(_assertThisInitialized(_this));\n      dom.style.height = \"\".concat(dom.offsetHeight, \"px\"); // Magic code\n      // 重复一次后才能正确设置 height\n\n      dom.style.height = \"\".concat(dom.offsetHeight, \"px\");\n\n      _this.setState({\n        closing: true\n      });\n\n      (_this.props.onClose || noop)(e);\n    };\n\n    _this.animationEnd = function () {\n      _this.setState({\n        closing: false,\n        closed: true\n      });\n\n      (_this.props.afterClose || noop)();\n    };\n\n    _this.renderAlert = function (_ref) {\n      var _classNames;\n\n      var getPrefixCls = _ref.getPrefixCls,\n          direction = _ref.direction;\n      var _this$props = _this.props,\n          description = _this$props.description,\n          customizePrefixCls = _this$props.prefixCls,\n          message = _this$props.message,\n          closeText = _this$props.closeText,\n          banner = _this$props.banner,\n          _this$props$className = _this$props.className,\n          className = _this$props$className === void 0 ? '' : _this$props$className,\n          style = _this$props.style,\n          icon = _this$props.icon,\n          onMouseEnter = _this$props.onMouseEnter,\n          onMouseLeave = _this$props.onMouseLeave,\n          onClick = _this$props.onClick;\n      var _this$props2 = _this.props,\n          closable = _this$props2.closable,\n          type = _this$props2.type,\n          showIcon = _this$props2.showIcon;\n      var _this$state = _this.state,\n          closing = _this$state.closing,\n          closed = _this$state.closed;\n      var prefixCls = getPrefixCls('alert', customizePrefixCls); // banner模式默认有 Icon\n\n      showIcon = banner && showIcon === undefined ? true : showIcon; // banner模式默认为警告\n\n      type = banner && type === undefined ? 'warning' : type || 'info'; // use outline icon in alert with description\n\n      var iconType = (description ? iconMapOutlined : iconMapFilled)[type] || null; // closeable when closeText is assigned\n\n      if (closeText) {\n        closable = true;\n      }\n\n      var alertCls = classNames(prefixCls, \"\".concat(prefixCls, \"-\").concat(type), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-closing\"), closing), _defineProperty(_classNames, \"\".concat(prefixCls, \"-with-description\"), !!description), _defineProperty(_classNames, \"\".concat(prefixCls, \"-no-icon\"), !showIcon), _defineProperty(_classNames, \"\".concat(prefixCls, \"-banner\"), !!banner), _defineProperty(_classNames, \"\".concat(prefixCls, \"-closable\"), closable), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className);\n      var closeIcon = closable ? /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        onClick: _this.handleClose,\n        className: \"\".concat(prefixCls, \"-close-icon\"),\n        tabIndex: 0\n      }, closeText ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-close-text\")\n      }, closeText) : /*#__PURE__*/React.createElement(CloseOutlined, null)) : null;\n      var dataOrAriaProps = getDataOrAriaProps(_this.props);\n      var iconNode = icon && (React.isValidElement(icon) ? React.cloneElement(icon, {\n        className: classNames(\"\".concat(prefixCls, \"-icon\"), _defineProperty({}, icon.props.className, icon.props.className))\n      }) : /*#__PURE__*/React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-icon\")\n      }, icon)) || React.createElement(iconType, {\n        className: \"\".concat(prefixCls, \"-icon\")\n      });\n      return closed ? null : /*#__PURE__*/React.createElement(Animate, {\n        component: \"\",\n        showProp: \"data-show\",\n        transitionName: \"\".concat(prefixCls, \"-slide-up\"),\n        onEnd: _this.animationEnd\n      }, /*#__PURE__*/React.createElement(\"div\", _extends({\n        \"data-show\": !closing,\n        className: alertCls,\n        style: style,\n        onMouseEnter: onMouseEnter,\n        onMouseLeave: onMouseLeave,\n        onClick: onClick\n      }, dataOrAriaProps), showIcon ? iconNode : null, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-message\")\n      }, message), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-description\")\n      }, description), closeIcon));\n    };\n\n    return _this;\n  }\n\n  _createClass(Alert, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(ConfigConsumer, null, this.renderAlert);\n    }\n  }]);\n\n  return Alert;\n}(React.Component);\n\nexport { Alert as default };\nAlert.ErrorBoundary = ErrorBoundary;","map":null,"metadata":{},"sourceType":"module"}