{"ast":null,"code":"ace.define(\"ace/mode/eiffel_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var EiffelHighlightRules = function EiffelHighlightRules() {\n    var keywords = \"across|agent|alias|all|attached|as|assign|attribute|check|\" + \"class|convert|create|debug|deferred|detachable|do|else|elseif|end|\" + \"ensure|expanded|export|external|feature|from|frozen|if|inherit|\" + \"inspect|invariant|like|local|loop|not|note|obsolete|old|once|\" + \"Precursor|redefine|rename|require|rescue|retry|select|separate|\" + \"some|then|undefine|until|variant|when\";\n    var operatorKeywords = \"and|implies|or|xor\";\n    var languageConstants = \"Void\";\n    var booleanConstants = \"True|False\";\n    var languageVariables = \"Current|Result\";\n    var keywordMapper = this.createKeywordMapper({\n      \"constant.language\": languageConstants,\n      \"constant.language.boolean\": booleanConstants,\n      \"variable.language\": languageVariables,\n      \"keyword.operator\": operatorKeywords,\n      \"keyword\": keywords\n    }, \"identifier\", true);\n    var simpleString = /(?:[^\"%\\b\\f\\v]|%[A-DFHLNQR-V%'\"()<>]|%\\/(?:0[xX][\\da-fA-F](?:_*[\\da-fA-F])*|0[cC][0-7](?:_*[0-7])*|0[bB][01](?:_*[01])*|\\d(?:_*\\d)*)\\/)+?/;\n    this.$rules = {\n      \"start\": [{\n        token: \"string.quoted.other\",\n        // Aligned-verbatim-strings (verbatim option not supported)\n        regex: /\"\\[/,\n        next: \"aligned_verbatim_string\"\n      }, {\n        token: \"string.quoted.other\",\n        // Non-aligned-verbatim-strings (verbatim option not supported)\n        regex: /\"\\{/,\n        next: \"non-aligned_verbatim_string\"\n      }, {\n        token: \"string.quoted.double\",\n        regex: /\"(?:[^%\\b\\f\\n\\r\\v]|%[A-DFHLNQR-V%'\"()<>]|%\\/(?:0[xX][\\da-fA-F](?:_*[\\da-fA-F])*|0[cC][0-7](?:_*[0-7])*|0[bB][01](?:_*[01])*|\\d(?:_*\\d)*)\\/)*?\"/\n      }, {\n        token: \"comment.line.double-dash\",\n        regex: /--.*/\n      }, {\n        token: \"constant.character\",\n        regex: /'(?:[^%\\b\\f\\n\\r\\t\\v]|%[A-DFHLNQR-V%'\"()<>]|%\\/(?:0[xX][\\da-fA-F](?:_*[\\da-fA-F])*|0[cC][0-7](?:_*[0-7])*|0[bB][01](?:_*[01])*|\\d(?:_*\\d)*)\\/)'/\n      }, {\n        token: \"constant.numeric\",\n        // hexa | octal | bin\n        regex: /\\b0(?:[xX][\\da-fA-F](?:_*[\\da-fA-F])*|[cC][0-7](?:_*[0-7])*|[bB][01](?:_*[01])*)\\b/\n      }, {\n        token: \"constant.numeric\",\n        regex: /(?:\\d(?:_*\\d)*)?\\.(?:(?:\\d(?:_*\\d)*)?[eE][+-]?)?\\d(?:_*\\d)*|\\d(?:_*\\d)*\\.?/\n      }, {\n        token: \"paren.lparen\",\n        regex: /[\\[({]|<<|\\|\\(/\n      }, {\n        token: \"paren.rparen\",\n        regex: /[\\])}]|>>|\\|\\)/\n      }, {\n        token: \"keyword.operator\",\n        // punctuation\n        regex: /:=|->|\\.(?=\\w)|[;,:?]/\n      }, {\n        token: \"keyword.operator\",\n        regex: /\\\\\\\\|\\|\\.\\.\\||\\.\\.|\\/[~\\/]?|[><\\/]=?|[-+*^=~]/\n      }, {\n        token: function token(v) {\n          var result = keywordMapper(v);\n\n          if (result === \"identifier\" && v === v.toUpperCase()) {\n            result = \"entity.name.type\";\n          }\n\n          return result;\n        },\n        regex: /[a-zA-Z][a-zA-Z\\d_]*\\b/\n      }, {\n        token: \"text\",\n        regex: /\\s+/\n      }],\n      \"aligned_verbatim_string\": [{\n        token: \"string\",\n        regex: /]\"/,\n        next: \"start\"\n      }, {\n        token: \"string\",\n        regex: simpleString\n      }],\n      \"non-aligned_verbatim_string\": [{\n        token: \"string.quoted.other\",\n        regex: /}\"/,\n        next: \"start\"\n      }, {\n        token: \"string.quoted.other\",\n        regex: simpleString\n      }]\n    };\n  };\n\n  oop.inherits(EiffelHighlightRules, TextHighlightRules);\n  exports.EiffelHighlightRules = EiffelHighlightRules;\n});\nace.define(\"ace/mode/eiffel\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/eiffel_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextMode = require(\"./text\").Mode;\n\n  var EiffelHighlightRules = require(\"./eiffel_highlight_rules\").EiffelHighlightRules;\n\n  var Mode = function Mode() {\n    this.HighlightRules = EiffelHighlightRules;\n    this.$behaviour = this.$defaultBehaviour;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"--\";\n    this.$id = \"ace/mode/eiffel\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n\n(function () {\n  ace.require([\"ace/mode/eiffel\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":null,"metadata":{},"sourceType":"script"}