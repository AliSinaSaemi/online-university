{"ast":null,"code":"import _asyncToGenerator from \"E:\\\\Developing Project\\\\Project - Pro\\\\Recent Projects\\\\026 - Daneshgah Magazi (New)\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"E:\\\\Developing Project\\\\Project - Pro\\\\Recent Projects\\\\026 - Daneshgah Magazi (New)\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(watchLoginUser),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(loginWithEmailPassword),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(watchRegisterUser),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(registerWithEmailPassword),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogoutUser),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(logout),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(watchForgotPassword),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(forgotPassword),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(watchResetPassword),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(resetPassword),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all, call, fork, put, takeEvery } from 'redux-saga/effects';\nimport { auth } from '../../helpers/Firebase';\nimport { LOGIN_USER, REGISTER_USER, LOGOUT_USER, FORGOT_PASSWORD, RESET_PASSWORD } from '../actions';\nimport { loginUserSuccess, loginUserError, registerUserSuccess, registerUserError, forgotPasswordSuccess, forgotPasswordError, resetPasswordSuccess, resetPasswordError } from './actions';\nexport function watchLoginUser() {\n  return _regeneratorRuntime.wrap(function watchLoginUser$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return takeEvery(LOGIN_USER, loginWithEmailPassword);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nvar loginWithEmailPasswordAsync = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(email, password) {\n    return _regeneratorRuntime.wrap(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return auth.signInWithEmailAndPassword(email, password).then(function (authUser) {\n              return authUser;\n            }).catch(function (error) {\n              return error;\n            });\n\n          case 2:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function loginWithEmailPasswordAsync(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nfunction loginWithEmailPassword(_ref2) {\n  var payload, _payload$user, email, password, history, loginUser;\n\n  return _regeneratorRuntime.wrap(function loginWithEmailPassword$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          payload = _ref2.payload;\n          _payload$user = payload.user, email = _payload$user.email, password = _payload$user.password;\n          history = payload.history;\n          _context3.prev = 3;\n          _context3.next = 6;\n          return call(loginWithEmailPasswordAsync, email, password);\n\n        case 6:\n          loginUser = _context3.sent;\n\n          if (loginUser.message) {\n            _context3.next = 14;\n            break;\n          }\n\n          localStorage.setItem('user_id', loginUser.user.uid);\n          _context3.next = 11;\n          return put(loginUserSuccess(loginUser.user));\n\n        case 11:\n          history.push('/');\n          _context3.next = 16;\n          break;\n\n        case 14:\n          _context3.next = 16;\n          return put(loginUserError(loginUser.message));\n\n        case 16:\n          _context3.next = 22;\n          break;\n\n        case 18:\n          _context3.prev = 18;\n          _context3.t0 = _context3[\"catch\"](3);\n          _context3.next = 22;\n          return put(loginUserError(_context3.t0));\n\n        case 22:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked2, null, [[3, 18]]);\n}\n\nexport function watchRegisterUser() {\n  return _regeneratorRuntime.wrap(function watchRegisterUser$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeEvery(REGISTER_USER, registerWithEmailPassword);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked3);\n}\n\nvar registerWithEmailPasswordAsync = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(email, password) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return auth.createUserWithEmailAndPassword(email, password).then(function (authUser) {\n              return authUser;\n            }).catch(function (error) {\n              return error;\n            });\n\n          case 2:\n            return _context5.abrupt(\"return\", _context5.sent);\n\n          case 3:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function registerWithEmailPasswordAsync(_x3, _x4) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nfunction registerWithEmailPassword(_ref4) {\n  var payload, _payload$user2, email, password, history, registerUser;\n\n  return _regeneratorRuntime.wrap(function registerWithEmailPassword$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          payload = _ref4.payload;\n          _payload$user2 = payload.user, email = _payload$user2.email, password = _payload$user2.password;\n          history = payload.history;\n          _context6.prev = 3;\n          _context6.next = 6;\n          return call(registerWithEmailPasswordAsync, email, password);\n\n        case 6:\n          registerUser = _context6.sent;\n\n          if (registerUser.message) {\n            _context6.next = 14;\n            break;\n          }\n\n          localStorage.setItem('user_id', registerUser.user.uid);\n          _context6.next = 11;\n          return put(registerUserSuccess(registerUser));\n\n        case 11:\n          history.push('/');\n          _context6.next = 16;\n          break;\n\n        case 14:\n          _context6.next = 16;\n          return put(registerUserError(registerUser.message));\n\n        case 16:\n          _context6.next = 22;\n          break;\n\n        case 18:\n          _context6.prev = 18;\n          _context6.t0 = _context6[\"catch\"](3);\n          _context6.next = 22;\n          return put(registerUserError(_context6.t0));\n\n        case 22:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked4, null, [[3, 18]]);\n}\n\nexport function watchLogoutUser() {\n  return _regeneratorRuntime.wrap(function watchLogoutUser$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return takeEvery(LOGOUT_USER, logout);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked5);\n}\n\nvar logoutAsync = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(history) {\n    return _regeneratorRuntime.wrap(function _callee3$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.next = 2;\n            return auth.signOut().then(function (authUser) {\n              return authUser;\n            }).catch(function (error) {\n              return error;\n            });\n\n          case 2:\n            history.push('/');\n\n          case 3:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function logoutAsync(_x5) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nfunction logout(_ref6) {\n  var payload, history;\n  return _regeneratorRuntime.wrap(function logout$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          payload = _ref6.payload;\n          history = payload.history;\n          _context9.prev = 2;\n          _context9.next = 5;\n          return call(logoutAsync, history);\n\n        case 5:\n          localStorage.removeItem('user_id');\n          _context9.next = 10;\n          break;\n\n        case 8:\n          _context9.prev = 8;\n          _context9.t0 = _context9[\"catch\"](2);\n\n        case 10:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked6, null, [[2, 8]]);\n}\n\nexport function watchForgotPassword() {\n  return _regeneratorRuntime.wrap(function watchForgotPassword$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeEvery(FORGOT_PASSWORD, forgotPassword);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked7);\n}\n\nvar forgotPasswordAsync = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(email) {\n    return _regeneratorRuntime.wrap(function _callee4$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            _context11.next = 2;\n            return auth.sendPasswordResetEmail(email).then(function (user) {\n              return user;\n            }).catch(function (error) {\n              return error;\n            });\n\n          case 2:\n            return _context11.abrupt(\"return\", _context11.sent);\n\n          case 3:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function forgotPasswordAsync(_x6) {\n    return _ref7.apply(this, arguments);\n  };\n}();\n\nfunction forgotPassword(_ref8) {\n  var payload, email, forgotPasswordStatus;\n  return _regeneratorRuntime.wrap(function forgotPassword$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          payload = _ref8.payload;\n          email = payload.forgotUserMail.email;\n          _context12.prev = 2;\n          _context12.next = 5;\n          return call(forgotPasswordAsync, email);\n\n        case 5:\n          forgotPasswordStatus = _context12.sent;\n\n          if (forgotPasswordStatus) {\n            _context12.next = 11;\n            break;\n          }\n\n          _context12.next = 9;\n          return put(forgotPasswordSuccess(\"success\"));\n\n        case 9:\n          _context12.next = 13;\n          break;\n\n        case 11:\n          _context12.next = 13;\n          return put(forgotPasswordError(forgotPasswordStatus.message));\n\n        case 13:\n          _context12.next = 19;\n          break;\n\n        case 15:\n          _context12.prev = 15;\n          _context12.t0 = _context12[\"catch\"](2);\n          _context12.next = 19;\n          return put(forgotPasswordError(_context12.t0));\n\n        case 19:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked8, null, [[2, 15]]);\n}\n\nexport function watchResetPassword() {\n  return _regeneratorRuntime.wrap(function watchResetPassword$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.next = 2;\n          return takeEvery(RESET_PASSWORD, resetPassword);\n\n        case 2:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked9);\n}\n\nvar resetPasswordAsync = /*#__PURE__*/function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(resetPasswordCode, newPassword) {\n    return _regeneratorRuntime.wrap(function _callee5$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            _context14.next = 2;\n            return auth.confirmPasswordReset(resetPasswordCode, newPassword).then(function (user) {\n              return user;\n            }).catch(function (error) {\n              return error;\n            });\n\n          case 2:\n            return _context14.abrupt(\"return\", _context14.sent);\n\n          case 3:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function resetPasswordAsync(_x7, _x8) {\n    return _ref9.apply(this, arguments);\n  };\n}();\n\nfunction resetPassword(_ref10) {\n  var payload, newPassword, resetPasswordCode, resetPasswordStatus;\n  return _regeneratorRuntime.wrap(function resetPassword$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          payload = _ref10.payload;\n          newPassword = payload.newPassword, resetPasswordCode = payload.resetPasswordCode;\n          _context15.prev = 2;\n          _context15.next = 5;\n          return call(resetPasswordAsync, resetPasswordCode, newPassword);\n\n        case 5:\n          resetPasswordStatus = _context15.sent;\n\n          if (resetPasswordStatus) {\n            _context15.next = 11;\n            break;\n          }\n\n          _context15.next = 9;\n          return put(resetPasswordSuccess(\"success\"));\n\n        case 9:\n          _context15.next = 13;\n          break;\n\n        case 11:\n          _context15.next = 13;\n          return put(resetPasswordError(resetPasswordStatus.message));\n\n        case 13:\n          _context15.next = 19;\n          break;\n\n        case 15:\n          _context15.prev = 15;\n          _context15.t0 = _context15[\"catch\"](2);\n          _context15.next = 19;\n          return put(resetPasswordError(_context15.t0));\n\n        case 19:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, _marked10, null, [[2, 15]]);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          _context16.next = 2;\n          return all([fork(watchLoginUser), fork(watchLogoutUser), fork(watchRegisterUser), fork(watchForgotPassword), fork(watchResetPassword)]);\n\n        case 2:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, _marked11);\n}","map":{"version":3,"sources":["E:/Developing Project/Project - Pro/Recent Projects/026 - Daneshgah Magazi (New)/src/redux/auth/saga.js"],"names":["watchLoginUser","loginWithEmailPassword","watchRegisterUser","registerWithEmailPassword","watchLogoutUser","logout","watchForgotPassword","forgotPassword","watchResetPassword","resetPassword","rootSaga","all","call","fork","put","takeEvery","auth","LOGIN_USER","REGISTER_USER","LOGOUT_USER","FORGOT_PASSWORD","RESET_PASSWORD","loginUserSuccess","loginUserError","registerUserSuccess","registerUserError","forgotPasswordSuccess","forgotPasswordError","resetPasswordSuccess","resetPasswordError","loginWithEmailPasswordAsync","email","password","signInWithEmailAndPassword","then","authUser","catch","error","payload","user","history","loginUser","message","localStorage","setItem","uid","push","registerWithEmailPasswordAsync","createUserWithEmailAndPassword","registerUser","logoutAsync","signOut","removeItem","forgotPasswordAsync","sendPasswordResetEmail","forgotUserMail","forgotPasswordStatus","resetPasswordAsync","resetPasswordCode","newPassword","confirmPasswordReset","resetPasswordStatus"],"mappings":";;;oDAuBiBA,c;qDAWPC,sB;qDAmBOC,iB;qDASPC,yB;qDAoBOC,e;qDASPC,M;qDASOC,mB;qDAUPC,c;qDAeOC,kB;sDAUPC,a;sDAeeC,Q;;AArJzB,SAASC,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,SAA/B,QAAgD,oBAAhD;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,SACIC,UADJ,EAEIC,aAFJ,EAGIC,WAHJ,EAIIC,eAJJ,EAKIC,cALJ,QAMO,YANP;AAQA,SACIC,gBADJ,EAEIC,cAFJ,EAGIC,mBAHJ,EAIIC,iBAJJ,EAKIC,qBALJ,EAMIC,mBANJ,EAOIC,oBAPJ,EAQIC,kBARJ,QASO,WATP;AAYA,OAAO,SAAU7B,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,iBAAMe,SAAS,CAACE,UAAD,EAAahB,sBAAb,CAAf;;AADG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIP,IAAM6B,2BAA2B;AAAA,sEAAG,iBAAOC,KAAP,EAAcC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAC1BhB,IAAI,CAACiB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,EACDE,IADC,CACI,UAAAC,QAAQ;AAAA,qBAAIA,QAAJ;AAAA,aADZ,EAEDC,KAFC,CAEK,UAAAC,KAAK;AAAA,qBAAIA,KAAJ;AAAA,aAFV,CAD0B;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAA3BP,2BAA2B;AAAA;AAAA;AAAA,GAAjC;;AAOA,SAAU7B,sBAAV;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAmCqC,UAAAA,OAAnC,SAAmCA,OAAnC;AAAA,0BACgCA,OAAO,CAACC,IADxC,EACYR,KADZ,iBACYA,KADZ,EACmBC,QADnB,iBACmBA,QADnB;AAEYQ,UAAAA,OAFZ,GAEwBF,OAFxB,CAEYE,OAFZ;AAAA;AAAA;AAI0B,iBAAM5B,IAAI,CAACkB,2BAAD,EAA8BC,KAA9B,EAAqCC,QAArC,CAAV;;AAJ1B;AAIcS,UAAAA,SAJd;;AAAA,cAKaA,SAAS,CAACC,OALvB;AAAA;AAAA;AAAA;;AAMYC,UAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCH,SAAS,CAACF,IAAV,CAAeM,GAA/C;AANZ;AAOY,iBAAM/B,GAAG,CAACQ,gBAAgB,CAACmB,SAAS,CAACF,IAAX,CAAjB,CAAT;;AAPZ;AAQYC,UAAAA,OAAO,CAACM,IAAR,CAAa,GAAb;AARZ;AAAA;;AAAA;AAAA;AAUY,iBAAMhC,GAAG,CAACS,cAAc,CAACkB,SAAS,CAACC,OAAX,CAAf,CAAT;;AAVZ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAaQ,iBAAM5B,GAAG,CAACS,cAAc,cAAf,CAAT;;AAbR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAmBA,OAAO,SAAUrB,iBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,iBAAMa,SAAS,CAACG,aAAD,EAAgBf,yBAAhB,CAAf;;AADG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIP,IAAM4C,8BAA8B;AAAA,uEAAG,kBAAOhB,KAAP,EAAcC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAC7BhB,IAAI,CAACgC,8BAAL,CAAoCjB,KAApC,EAA2CC,QAA3C,EACDE,IADC,CACI,UAAAC,QAAQ;AAAA,qBAAIA,QAAJ;AAAA,aADZ,EAEDC,KAFC,CAEK,UAAAC,KAAK;AAAA,qBAAIA,KAAJ;AAAA,aAFV,CAD6B;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAA9BU,8BAA8B;AAAA;AAAA;AAAA,GAApC;;AAKA,SAAU5C,yBAAV;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAsCmC,UAAAA,OAAtC,SAAsCA,OAAtC;AAAA,2BACgCA,OAAO,CAACC,IADxC,EACYR,KADZ,kBACYA,KADZ,EACmBC,QADnB,kBACmBA,QADnB;AAEYQ,UAAAA,OAFZ,GAEwBF,OAFxB,CAEYE,OAFZ;AAAA;AAAA;AAI6B,iBAAM5B,IAAI,CAACmC,8BAAD,EAAiChB,KAAjC,EAAwCC,QAAxC,CAAV;;AAJ7B;AAIciB,UAAAA,YAJd;;AAAA,cAKaA,YAAY,CAACP,OAL1B;AAAA;AAAA;AAAA;;AAMYC,UAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCK,YAAY,CAACV,IAAb,CAAkBM,GAAlD;AANZ;AAOY,iBAAM/B,GAAG,CAACU,mBAAmB,CAACyB,YAAD,CAApB,CAAT;;AAPZ;AAQYT,UAAAA,OAAO,CAACM,IAAR,CAAa,GAAb;AARZ;AAAA;;AAAA;AAAA;AAUY,iBAAMhC,GAAG,CAACW,iBAAiB,CAACwB,YAAY,CAACP,OAAd,CAAlB,CAAT;;AAVZ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAcQ,iBAAM5B,GAAG,CAACW,iBAAiB,cAAlB,CAAT;;AAdR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAoBA,OAAO,SAAUrB,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,iBAAMW,SAAS,CAACI,WAAD,EAAcd,MAAd,CAAf;;AADG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIP,IAAM6C,WAAW;AAAA,uEAAG,kBAAOV,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACVxB,IAAI,CAACmC,OAAL,GAAejB,IAAf,CAAoB,UAAAC,QAAQ;AAAA,qBAAIA,QAAJ;AAAA,aAA5B,EAA0CC,KAA1C,CAAgD,UAAAC,KAAK;AAAA,qBAAIA,KAAJ;AAAA,aAArD,CADU;;AAAA;AAEhBG,YAAAA,OAAO,CAACM,IAAR,CAAa,GAAb;;AAFgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXI,WAAW;AAAA;AAAA;AAAA,GAAjB;;AAKA,SAAU7C,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmBiC,UAAAA,OAAnB,SAAmBA,OAAnB;AACYE,UAAAA,OADZ,GACwBF,OADxB,CACYE,OADZ;AAAA;AAAA;AAGQ,iBAAM5B,IAAI,CAACsC,WAAD,EAAcV,OAAd,CAAV;;AAHR;AAIQG,UAAAA,YAAY,CAACS,UAAb,CAAwB,SAAxB;AAJR;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,OAAO,SAAU9C,mBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,iBAAMS,SAAS,CAACK,eAAD,EAAkBb,cAAlB,CAAf;;AADG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIP,IAAM8C,mBAAmB;AAAA,uEAAG,kBAAOtB,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACXf,IAAI,CAACsC,sBAAL,CAA4BvB,KAA5B,EACRG,IADQ,CACH,UAAAK,IAAI;AAAA,qBAAIA,IAAJ;AAAA,aADD,EAERH,KAFQ,CAEF,UAAAC,KAAK;AAAA,qBAAIA,KAAJ;AAAA,aAFH,CADW;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAnBgB,mBAAmB;AAAA;AAAA;AAAA,GAAzB;;AAMA,SAAU9C,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2B+B,UAAAA,OAA3B,SAA2BA,OAA3B;AACYP,UAAAA,KADZ,GACsBO,OAAO,CAACiB,cAD9B,CACYxB,KADZ;AAAA;AAAA;AAGqC,iBAAMnB,IAAI,CAACyC,mBAAD,EAAsBtB,KAAtB,CAAV;;AAHrC;AAGcyB,UAAAA,oBAHd;;AAAA,cAIaA,oBAJb;AAAA;AAAA;AAAA;;AAAA;AAKY,iBAAM1C,GAAG,CAACY,qBAAqB,CAAC,SAAD,CAAtB,CAAT;;AALZ;AAAA;AAAA;;AAAA;AAAA;AAOY,iBAAMZ,GAAG,CAACa,mBAAmB,CAAC6B,oBAAoB,CAACd,OAAtB,CAApB,CAAT;;AAPZ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAUQ,iBAAM5B,GAAG,CAACa,mBAAmB,eAApB,CAAT;;AAVR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAeA,OAAO,SAAUnB,kBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,iBAAMO,SAAS,CAACM,cAAD,EAAiBZ,aAAjB,CAAf;;AADG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIP,IAAMgD,kBAAkB;AAAA,uEAAG,kBAAOC,iBAAP,EAA0BC,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACV3C,IAAI,CAAC4C,oBAAL,CAA0BF,iBAA1B,EAA6CC,WAA7C,EACRzB,IADQ,CACH,UAAAK,IAAI;AAAA,qBAAIA,IAAJ;AAAA,aADD,EAERH,KAFQ,CAEF,UAAAC,KAAK;AAAA,qBAAIA,KAAJ;AAAA,aAFH,CADU;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAlBoB,kBAAkB;AAAA;AAAA;AAAA,GAAxB;;AAMA,SAAUhD,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0B6B,UAAAA,OAA1B,UAA0BA,OAA1B;AACYqB,UAAAA,WADZ,GAC+CrB,OAD/C,CACYqB,WADZ,EACyBD,iBADzB,GAC+CpB,OAD/C,CACyBoB,iBADzB;AAAA;AAAA;AAGoC,iBAAM9C,IAAI,CAAC6C,kBAAD,EAAqBC,iBAArB,EAAwCC,WAAxC,CAAV;;AAHpC;AAGcE,UAAAA,mBAHd;;AAAA,cAIaA,mBAJb;AAAA;AAAA;AAAA;;AAAA;AAKY,iBAAM/C,GAAG,CAACc,oBAAoB,CAAC,SAAD,CAArB,CAAT;;AALZ;AAAA;AAAA;;AAAA;AAAA;AAOY,iBAAMd,GAAG,CAACe,kBAAkB,CAACgC,mBAAmB,CAACnB,OAArB,CAAnB,CAAT;;AAPZ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAUQ,iBAAM5B,GAAG,CAACe,kBAAkB,eAAnB,CAAT;;AAVR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAeA,eAAe,SAAUnB,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMC,GAAG,CAAC,CACNE,IAAI,CAACb,cAAD,CADE,EAENa,IAAI,CAACT,eAAD,CAFE,EAGNS,IAAI,CAACX,iBAAD,CAHE,EAINW,IAAI,CAACP,mBAAD,CAJE,EAKNO,IAAI,CAACL,kBAAD,CALE,CAAD,CAAT;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["\r\nimport { all, call, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport { auth } from '../../helpers/Firebase';\r\nimport {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    LOGOUT_USER,\r\n    FORGOT_PASSWORD,\r\n    RESET_PASSWORD,\r\n} from '../actions';\r\n\r\nimport {\r\n    loginUserSuccess,\r\n    loginUserError,\r\n    registerUserSuccess,\r\n    registerUserError,\r\n    forgotPasswordSuccess,\r\n    forgotPasswordError,\r\n    resetPasswordSuccess,\r\n    resetPasswordError\r\n} from './actions';\r\n\r\n\r\nexport function* watchLoginUser() {\r\n    yield takeEvery(LOGIN_USER, loginWithEmailPassword);\r\n}\r\n\r\nconst loginWithEmailPasswordAsync = async (email, password) =>\r\n    await auth.signInWithEmailAndPassword(email, password)\r\n        .then(authUser => authUser)\r\n        .catch(error => error);\r\n\r\n\r\n\r\nfunction* loginWithEmailPassword({ payload }) {\r\n    const { email, password } = payload.user;\r\n    const { history } = payload;\r\n    try {\r\n        const loginUser = yield call(loginWithEmailPasswordAsync, email, password);\r\n        if (!loginUser.message) {\r\n            localStorage.setItem('user_id', loginUser.user.uid);\r\n            yield put(loginUserSuccess(loginUser.user));\r\n            history.push('/');\r\n        } else {\r\n            yield put(loginUserError(loginUser.message));\r\n        }\r\n    } catch (error) {\r\n        yield put(loginUserError(error));\r\n\r\n    }\r\n}\r\n\r\n\r\nexport function* watchRegisterUser() {\r\n    yield takeEvery(REGISTER_USER, registerWithEmailPassword);\r\n}\r\n\r\nconst registerWithEmailPasswordAsync = async (email, password) =>\r\n    await auth.createUserWithEmailAndPassword(email, password)\r\n        .then(authUser => authUser)\r\n        .catch(error => error);\r\n\r\nfunction* registerWithEmailPassword({ payload }) {\r\n    const { email, password } = payload.user;\r\n    const { history } = payload\r\n    try {\r\n        const registerUser = yield call(registerWithEmailPasswordAsync, email, password);\r\n        if (!registerUser.message) {\r\n            localStorage.setItem('user_id', registerUser.user.uid);\r\n            yield put(registerUserSuccess(registerUser));\r\n            history.push('/')\r\n        } else {\r\n            yield put(registerUserError(registerUser.message));\r\n\r\n        }\r\n    } catch (error) {\r\n        yield put(registerUserError(error));\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function* watchLogoutUser() {\r\n    yield takeEvery(LOGOUT_USER, logout);\r\n}\r\n\r\nconst logoutAsync = async (history) => {\r\n    await auth.signOut().then(authUser => authUser).catch(error => error);\r\n    history.push('/')\r\n}\r\n\r\nfunction* logout({ payload }) {\r\n    const { history } = payload\r\n    try {\r\n        yield call(logoutAsync, history);\r\n        localStorage.removeItem('user_id');\r\n    } catch (error) {\r\n    }\r\n}\r\n\r\nexport function* watchForgotPassword() {\r\n    yield takeEvery(FORGOT_PASSWORD, forgotPassword);\r\n}\r\n\r\nconst forgotPasswordAsync = async (email) => {\r\n    return await auth.sendPasswordResetEmail(email)\r\n        .then(user => user)\r\n        .catch(error => error);\r\n}\r\n\r\nfunction* forgotPassword({ payload }) {\r\n    const { email } = payload.forgotUserMail;\r\n    try {\r\n        const forgotPasswordStatus = yield call(forgotPasswordAsync, email);\r\n        if (!forgotPasswordStatus) {\r\n            yield put(forgotPasswordSuccess(\"success\"));\r\n        } else {\r\n            yield put(forgotPasswordError(forgotPasswordStatus.message));\r\n        }\r\n    } catch (error) {\r\n        yield put(forgotPasswordError(error));\r\n\r\n    }\r\n}\r\n\r\nexport function* watchResetPassword() {\r\n    yield takeEvery(RESET_PASSWORD, resetPassword);\r\n}\r\n\r\nconst resetPasswordAsync = async (resetPasswordCode, newPassword) => {\r\n    return await auth.confirmPasswordReset(resetPasswordCode, newPassword)\r\n        .then(user => user)\r\n        .catch(error => error);\r\n}\r\n\r\nfunction* resetPassword({ payload }) {\r\n    const { newPassword, resetPasswordCode } = payload;\r\n    try {\r\n        const resetPasswordStatus = yield call(resetPasswordAsync, resetPasswordCode, newPassword);\r\n        if (!resetPasswordStatus) {\r\n            yield put(resetPasswordSuccess(\"success\"));\r\n        } else {\r\n            yield put(resetPasswordError(resetPasswordStatus.message));\r\n        }\r\n    } catch (error) {\r\n        yield put(resetPasswordError(error));\r\n\r\n    }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        fork(watchLoginUser),\r\n        fork(watchLogoutUser),\r\n        fork(watchRegisterUser),\r\n        fork(watchForgotPassword),\r\n        fork(watchResetPassword),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}