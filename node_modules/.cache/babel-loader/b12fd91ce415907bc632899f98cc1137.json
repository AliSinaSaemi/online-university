{"ast":null,"code":"ace.define(\"ace/mode/ini_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var escapeRe = \"\\\\\\\\(?:[\\\\\\\\0abtrn;#=:]|x[a-fA-F\\\\d]{4})\";\n\n  var IniHighlightRules = function IniHighlightRules() {\n    this.$rules = {\n      start: [{\n        token: 'punctuation.definition.comment.ini',\n        regex: '#.*',\n        push_: [{\n          token: 'comment.line.number-sign.ini',\n          regex: '$|^',\n          next: 'pop'\n        }, {\n          defaultToken: 'comment.line.number-sign.ini'\n        }]\n      }, {\n        token: 'punctuation.definition.comment.ini',\n        regex: ';.*',\n        push_: [{\n          token: 'comment.line.semicolon.ini',\n          regex: '$|^',\n          next: 'pop'\n        }, {\n          defaultToken: 'comment.line.semicolon.ini'\n        }]\n      }, {\n        token: ['keyword.other.definition.ini', 'text', 'punctuation.separator.key-value.ini'],\n        regex: '\\\\b([a-zA-Z0-9_.-]+)\\\\b(\\\\s*)(=)'\n      }, {\n        token: ['punctuation.definition.entity.ini', 'constant.section.group-title.ini', 'punctuation.definition.entity.ini'],\n        regex: '^(\\\\[)(.*?)(\\\\])'\n      }, {\n        token: 'punctuation.definition.string.begin.ini',\n        regex: \"'\",\n        push: [{\n          token: 'punctuation.definition.string.end.ini',\n          regex: \"'\",\n          next: 'pop'\n        }, {\n          token: \"constant.language.escape\",\n          regex: escapeRe\n        }, {\n          defaultToken: 'string.quoted.single.ini'\n        }]\n      }, {\n        token: 'punctuation.definition.string.begin.ini',\n        regex: '\"',\n        push: [{\n          token: \"constant.language.escape\",\n          regex: escapeRe\n        }, {\n          token: 'punctuation.definition.string.end.ini',\n          regex: '\"',\n          next: 'pop'\n        }, {\n          defaultToken: 'string.quoted.double.ini'\n        }]\n      }]\n    };\n    this.normalizeRules();\n  };\n\n  IniHighlightRules.metaData = {\n    fileTypes: ['ini', 'conf'],\n    keyEquivalent: '^~I',\n    name: 'Ini',\n    scopeName: 'source.ini'\n  };\n  oop.inherits(IniHighlightRules, TextHighlightRules);\n  exports.IniHighlightRules = IniHighlightRules;\n});\nace.define(\"ace/mode/folding/ini\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n\n  var Range = require(\"../../range\").Range;\n\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\n  var FoldMode = exports.FoldMode = function () {};\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /^\\s*\\[([^\\])]*)]\\s*(?:$|[;#])/;\n\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var re = this.foldingStartMarker;\n      var line = session.getLine(row);\n      var m = line.match(re);\n      if (!m) return;\n      var startName = m[1] + \".\";\n      var startColumn = line.length;\n      var maxRow = session.getLength();\n      var startRow = row;\n      var endRow = row;\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        if (/^\\s*$/.test(line)) continue;\n        m = line.match(re);\n        if (m && m[1].lastIndexOf(startName, 0) !== 0) break;\n        endRow = row;\n      }\n\n      if (endRow > startRow) {\n        var endColumn = session.getLine(endRow).length;\n        return new Range(startRow, startColumn, endRow, endColumn);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/ini\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/ini_highlight_rules\", \"ace/mode/folding/ini\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextMode = require(\"./text\").Mode;\n\n  var IniHighlightRules = require(\"./ini_highlight_rules\").IniHighlightRules;\n\n  var FoldMode = require(\"./folding/ini\").FoldMode;\n\n  var Mode = function Mode() {\n    this.HighlightRules = IniHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \";\";\n    this.blockComment = null;\n    this.$id = \"ace/mode/ini\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n\n(function () {\n  ace.require([\"ace/mode/ini\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":null,"metadata":{},"sourceType":"script"}