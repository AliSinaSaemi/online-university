{"ast":null,"code":"ace.define(\"ace/snippets/io\", [\"require\", \"exports\", \"module\"], function (require, exports, module) {\n  \"use strict\";\n\n  exports.snippets = [{\n    \"content\": \"assertEquals(${1:expected}, ${2:expr})\",\n    \"name\": \"assertEquals\",\n    \"scope\": \"io\",\n    \"tabTrigger\": \"ae\"\n  }, {\n    \"content\": \"${1:${2:newValue} := ${3:Object} }clone do(\\n\\t$0\\n)\",\n    \"name\": \"clone do\",\n    \"scope\": \"io\",\n    \"tabTrigger\": \"cdo\"\n  }, {\n    \"content\": \"docSlot(\\\"${1:slotName}\\\", \\\"${2:documentation}\\\")\",\n    \"name\": \"docSlot\",\n    \"scope\": \"io\",\n    \"tabTrigger\": \"ds\"\n  }, {\n    \"content\": \"(${1:header,}\\n\\t${2:body}\\n)$0\",\n    \"keyEquivalent\": \"@(\",\n    \"name\": \"Indented Bracketed Line\",\n    \"scope\": \"io\",\n    \"tabTrigger\": \"(\"\n  }, {\n    \"content\": \"\\n\\t$0\\n\",\n    \"keyEquivalent\": \"\\r\",\n    \"name\": \"Special: Return Inside Empty Parenthesis\",\n    \"scope\": \"io meta.empty-parenthesis.io, io meta.comma-parenthesis.io\"\n  }, {\n    \"content\": \"${1:methodName} := method(${2:args,}\\n\\t$0\\n)\",\n    \"name\": \"method\",\n    \"scope\": \"io\",\n    \"tabTrigger\": \"m\"\n  }, {\n    \"content\": \"newSlot(\\\"${1:slotName}\\\", ${2:defaultValue}, \\\"${3:docString}\\\")$0\",\n    \"name\": \"newSlot\",\n    \"scope\": \"io\",\n    \"tabTrigger\": \"ns\"\n  }, {\n    \"content\": \"${1:name} := Object clone do(\\n\\t$0\\n)\",\n    \"name\": \"Object clone do\",\n    \"scope\": \"io\",\n    \"tabTrigger\": \"ocdo\"\n  }, {\n    \"content\": \"test${1:SomeFeature} := method(\\n\\t$0\\n)\",\n    \"name\": \"testMethod\",\n    \"scope\": \"io\",\n    \"tabTrigger\": \"ts\"\n  }, {\n    \"content\": \"${1:Something}Test := ${2:UnitTest} clone do(\\n\\t$0\\n)\",\n    \"name\": \"UnitTest\",\n    \"scope\": \"io\",\n    \"tabTrigger\": \"ut\"\n  }];\n  exports.scope = \"io\";\n});\n\n(function () {\n  ace.require([\"ace/snippets/io\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":null,"metadata":{},"sourceType":"script"}