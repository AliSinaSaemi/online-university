{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Hamed\\\\Desktop\\\\Gogo-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Hamed\\\\Desktop\\\\Gogo-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Hamed\\\\Desktop\\\\Gogo-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Hamed\\\\Desktop\\\\Gogo-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Hamed\\\\Desktop\\\\Gogo-React\\\\src\\\\containers\\\\applications\\\\AddNewTodoModal.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { CustomInput, Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, Label } from \"reactstrap\";\nimport Select from \"react-select\";\nimport CustomSelectInput from \"../../components/common/CustomSelectInput\";\nimport IntlMessages from \"../../helpers/IntlMessages\";\nimport { addTodoItem } from \"../../redux/actions\";\n\nvar AddNewTodoModal = /*#__PURE__*/function (_Component) {\n  _inherits(AddNewTodoModal, _Component);\n\n  var _super = _createSuper(AddNewTodoModal);\n\n  function AddNewTodoModal(props) {\n    var _this;\n\n    _classCallCheck(this, AddNewTodoModal);\n\n    _this = _super.call(this, props);\n\n    _this.addNetItem = function () {\n      var newItem = {\n        title: _this.state.title,\n        detail: _this.state.detail,\n        label: _this.state.label.value,\n        labelColor: _this.state.label.color,\n        category: _this.state.category.value,\n        status: _this.state.status\n      };\n\n      _this.props.addTodoItem(newItem);\n\n      _this.props.toggleModal();\n\n      _this.setState({\n        title: \"\",\n        detail: \"\",\n        label: {},\n        category: {},\n        status: \"PENDING\"\n      });\n    };\n\n    _this.state = {\n      title: \"\",\n      detail: \"\",\n      label: {},\n      labelColor: \"\",\n      category: {},\n      status: \"PENDING\"\n    };\n    return _this;\n  }\n\n  _createClass(AddNewTodoModal, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props$todoApp = this.props.todoApp,\n          labels = _this$props$todoApp.labels,\n          categories = _this$props$todoApp.categories;\n      var _this$props = this.props,\n          modalOpen = _this$props.modalOpen,\n          toggleModal = _this$props.toggleModal;\n      return /*#__PURE__*/React.createElement(Modal, {\n        isOpen: modalOpen,\n        toggle: toggleModal,\n        wrapClassName: \"modal-right\",\n        backdrop: \"static\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ModalHeader, {\n        toggle: toggleModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"todo.add-new-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(ModalBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        className: \"mt-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"todo.title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        defaultValue: this.state.title,\n        onChange: function onChange(event) {\n          _this2.setState({\n            title: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Label, {\n        className: \"mt-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"todo.detail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(Input, {\n        type: \"textarea\",\n        defaultValue: this.state.detail,\n        onChange: function onChange(event) {\n          _this2.setState({\n            detail: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Label, {\n        className: \"mt-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"todo.category\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(Select, {\n        components: {\n          Input: CustomSelectInput\n        },\n        className: \"react-select\",\n        classNamePrefix: \"react-select\",\n        name: \"form-field-name\",\n        options: categories.map(function (x, i) {\n          return {\n            label: x,\n            value: x,\n            key: i\n          };\n        }),\n        value: this.state.category,\n        onChange: function onChange(val) {\n          _this2.setState({\n            category: val\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Label, {\n        className: \"mt-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"todo.label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(Select, {\n        components: {\n          Input: CustomSelectInput\n        },\n        className: \"react-select\",\n        classNamePrefix: \"react-select\",\n        name: \"form-field-name\",\n        options: labels.map(function (x, i) {\n          return {\n            label: x.label,\n            value: x.label,\n            key: i,\n            color: x.color\n          };\n        }),\n        value: this.state.label,\n        onChange: function onChange(val) {\n          _this2.setState({\n            label: val\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Label, {\n        className: \"mt-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"todo.status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(CustomInput, {\n        type: \"radio\",\n        id: \"exCustomRadio\",\n        name: \"customRadio\",\n        label: \"COMPLETED\",\n        checked: this.state.status === \"COMPLETED\",\n        onChange: function onChange(event) {\n          _this2.setState({\n            status: event.target.value === \"on\" ? \"COMPLETED\" : \"PENDING\"\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(CustomInput, {\n        type: \"radio\",\n        id: \"exCustomRadio2\",\n        name: \"customRadio2\",\n        label: \"PENDING\",\n        defaultChecked: this.state.status === \"PENDING\",\n        onChange: function onChange(event) {\n          _this2.setState({\n            status: event.target.value !== \"on\" ? \"COMPLETED\" : \"PENDING\"\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(ModalFooter, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"secondary\",\n        outline: true,\n        onClick: toggleModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"todo.cancel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this2.addNetItem();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"todo.submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }\n      })), \" \"));\n    }\n  }]);\n\n  return AddNewTodoModal;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var todoApp = _ref.todoApp;\n  return {\n    todoApp: todoApp\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addTodoItem: addTodoItem\n})(AddNewTodoModal);","map":{"version":3,"sources":["C:/Users/Hamed/Desktop/Gogo-React/src/containers/applications/AddNewTodoModal.js"],"names":["React","Component","connect","CustomInput","Button","Modal","ModalHeader","ModalBody","ModalFooter","Input","Label","Select","CustomSelectInput","IntlMessages","addTodoItem","AddNewTodoModal","props","addNetItem","newItem","title","state","detail","label","value","labelColor","color","category","status","toggleModal","setState","todoApp","labels","categories","modalOpen","event","target","map","x","i","key","val","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  CustomInput,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Input,\r\n  Label\r\n} from \"reactstrap\";\r\nimport Select from \"react-select\";\r\nimport CustomSelectInput from \"../../components/common/CustomSelectInput\";\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\n\r\nimport { addTodoItem } from \"../../redux/actions\";\r\n\r\nclass AddNewTodoModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      title: \"\",\r\n      detail: \"\",\r\n      label: {},\r\n      labelColor: \"\",\r\n      category: {},\r\n      status: \"PENDING\"\r\n    };\r\n  }\r\n\r\n  addNetItem = () => {\r\n    const newItem = {\r\n      title: this.state.title,\r\n      detail: this.state.detail,\r\n      label: this.state.label.value,\r\n      labelColor: this.state.label.color,\r\n      category: this.state.category.value,\r\n      status: this.state.status\r\n    };\r\n    this.props.addTodoItem(newItem);\r\n    this.props.toggleModal();\r\n    this.setState({\r\n      title: \"\",\r\n      detail: \"\",\r\n      label: {},\r\n      category: {},\r\n      status: \"PENDING\"\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { labels, categories } = this.props.todoApp;\r\n    const { modalOpen, toggleModal } = this.props;\r\n    return (\r\n      <Modal\r\n        isOpen={modalOpen}\r\n        toggle={toggleModal}\r\n        wrapClassName=\"modal-right\"\r\n        backdrop=\"static\"\r\n      >\r\n        <ModalHeader toggle={toggleModal}>\r\n          <IntlMessages id=\"todo.add-new-title\" />\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <Label className=\"mt-4\">\r\n            <IntlMessages id=\"todo.title\" />\r\n          </Label>\r\n          <Input\r\n            type=\"text\"\r\n            defaultValue={this.state.title}\r\n            onChange={event => {\r\n              this.setState({ title: event.target.value });\r\n            }}\r\n          />\r\n          <Label className=\"mt-4\">\r\n            <IntlMessages id=\"todo.detail\" />\r\n          </Label>\r\n          <Input\r\n            type=\"textarea\"\r\n            defaultValue={this.state.detail}\r\n            onChange={event => {\r\n              this.setState({ detail: event.target.value });\r\n            }}\r\n          />\r\n\r\n          <Label className=\"mt-4\">\r\n            <IntlMessages id=\"todo.category\" />\r\n          </Label>\r\n          <Select\r\n            components={{ Input: CustomSelectInput }}\r\n            className=\"react-select\"\r\n            classNamePrefix=\"react-select\"\r\n            name=\"form-field-name\"\r\n            options={categories.map((x, i) => {\r\n              return { label: x, value: x, key: i };\r\n            })}\r\n            value={this.state.category}\r\n            onChange={val => {\r\n              this.setState({ category: val });\r\n            }}\r\n          />\r\n          <Label className=\"mt-4\">\r\n            <IntlMessages id=\"todo.label\" />\r\n          </Label>\r\n          <Select\r\n            components={{ Input: CustomSelectInput }}\r\n            className=\"react-select\"\r\n            classNamePrefix=\"react-select\"\r\n            name=\"form-field-name\"\r\n            options={labels.map((x, i) => {\r\n              return {\r\n                label: x.label,\r\n                value: x.label,\r\n                key: i,\r\n                color: x.color\r\n              };\r\n            })}\r\n            value={this.state.label}\r\n            onChange={val => {\r\n              this.setState({ label: val });\r\n            }}\r\n          />\r\n\r\n          <Label className=\"mt-4\">\r\n            <IntlMessages id=\"todo.status\" />\r\n          </Label>\r\n          <CustomInput\r\n            type=\"radio\"\r\n            id=\"exCustomRadio\"\r\n            name=\"customRadio\"\r\n            label=\"COMPLETED\"\r\n            checked={this.state.status === \"COMPLETED\"}\r\n            onChange={event => {\r\n              this.setState({\r\n                status: event.target.value === \"on\" ? \"COMPLETED\" : \"PENDING\"\r\n              });\r\n            }}\r\n          />\r\n          <CustomInput\r\n            type=\"radio\"\r\n            id=\"exCustomRadio2\"\r\n            name=\"customRadio2\"\r\n            label=\"PENDING\"\r\n            defaultChecked={this.state.status === \"PENDING\"}\r\n            onChange={event => {\r\n              this.setState({\r\n                status: event.target.value !== \"on\" ? \"COMPLETED\" : \"PENDING\"\r\n              });\r\n            }}\r\n          />\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" outline onClick={toggleModal}>\r\n            <IntlMessages id=\"todo.cancel\" />\r\n          </Button>\r\n          <Button color=\"primary\" onClick={() => this.addNetItem()}>\r\n            <IntlMessages id=\"todo.submit\" />\r\n          </Button>{\" \"}\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ todoApp }) => {\r\n  return {\r\n    todoApp\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    addTodoItem\r\n  }\r\n)(AddNewTodoModal);\r\n"]},"metadata":{},"sourceType":"module"}