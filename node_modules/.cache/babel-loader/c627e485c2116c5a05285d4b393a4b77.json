{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Hamed\\\\Desktop\\\\Gogo-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\Hamed\\\\Desktop\\\\Gogo-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Hamed\\\\Desktop\\\\Gogo-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Hamed\\\\Desktop\\\\Gogo-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\Hamed\\\\Desktop\\\\Gogo-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Hamed\\\\Desktop\\\\Gogo-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Hamed\\\\Desktop\\\\Gogo-React\\\\src\\\\containers\\\\applications\\\\QuestionBuilder.js\";\nimport React from \"react\";\nimport { Card, Button, Collapse, FormGroup, Label, Form, Input, Badge, CustomInput } from \"reactstrap\";\nimport Select from \"react-select\";\nimport Sortable from \"react-sortablejs\";\nimport CustomSelectInput from \"../../components/common/CustomSelectInput\";\nimport { mapOrder } from \"../../helpers/Utils\";\nvar answerTypes = [{\n  label: \"Text Area\",\n  value: \"1\",\n  id: 1\n}, {\n  label: \"Checkbox\",\n  value: \"2\",\n  id: 2\n}, {\n  label: \"Radiobutton\",\n  value: \"3\",\n  id: 3\n}];\n\nvar SurveyQuestionBuilder = /*#__PURE__*/function (_React$Component) {\n  _inherits(SurveyQuestionBuilder, _React$Component);\n\n  var _super = _createSuper(SurveyQuestionBuilder);\n\n  function SurveyQuestionBuilder(props) {\n    var _this;\n\n    _classCallCheck(this, SurveyQuestionBuilder);\n\n    _this = _super.call(this, props);\n\n    _this.deleteClick = function () {\n      _this.props.deleteClick(_this.state.id);\n    };\n\n    _this.toggleClick = function () {\n      _this.setState({\n        collapse: !_this.state.collapse\n      });\n    };\n\n    _this.editClick = function () {\n      _this.setState({\n        mode: \"edit-quesiton\"\n      });\n\n      _this.setState({\n        collapse: true\n      });\n    };\n\n    _this.viewClick = function () {\n      _this.setState({\n        mode: \"view-quesiton\"\n      });\n\n      _this.setState({\n        collapse: true\n      });\n    };\n\n    _this.typeChange = function (answerType) {\n      if (_this.state.answerType) {\n        if ((_this.state.answerType.id === 2 || _this.state.answerType.id === 3) && answerType.id === 1) {\n          _this.setState({\n            answers: []\n          });\n        }\n      }\n\n      _this.setState({\n        answerType: answerType\n      });\n    };\n\n    _this.removeAnswer = function (answerId) {\n      _this.setState({\n        answers: _this.state.answers.filter(function (item) {\n          return item.id !== answerId;\n        })\n      });\n    };\n\n    _this.addAnswer = function () {\n      var nextId = 0;\n\n      if (_this.state.answers.length > 0) {\n        var orderedAnswers = _this.state.answers.slice().sort(function (a, b) {\n          return a.id < b.id;\n        });\n\n        nextId = orderedAnswers[0].id + 1;\n      }\n\n      _this.setState({\n        answers: [].concat(_toConsumableArray(_this.state.answers), [{\n          id: nextId,\n          label: \"\"\n        }])\n      });\n    };\n\n    _this.updateAnswer = function (answerId, event) {\n      var answerIndex = _this.state.answers.findIndex(function (item) {\n        return item.id === answerId;\n      });\n\n      var answers = _this.state.answers;\n      answers[answerIndex][\"label\"] = event.target.value;\n\n      _this.setState({\n        answers: answers\n      });\n    };\n\n    _this.renderViewModeAnswers = function () {\n      if (!_this.state.answerType) {\n        return;\n      }\n\n      switch (_this.state.answerType.id) {\n        case 1:\n          return /*#__PURE__*/React.createElement(Input, {\n            type: \"text\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 16\n            }\n          });\n\n        case 2:\n          return /*#__PURE__*/React.createElement(FormGroup, {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 11\n            }\n          }, \" \", _this.state.answers.map(function (answer) {\n            return /*#__PURE__*/React.createElement(CustomInput, {\n              key: answer.id,\n              type: \"checkbox\",\n              id: \"checkbox\".concat(_this.state.id, \"_\").concat(answer.id),\n              name: \"checkbox\".concat(_this.state.id),\n              label: answer.label,\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }\n            });\n          }), \" \");\n\n        case 3:\n          return /*#__PURE__*/React.createElement(FormGroup, {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 11\n            }\n          }, _this.state.answers.map(function (answer) {\n            return /*#__PURE__*/React.createElement(CustomInput, {\n              key: answer.id,\n              type: \"radio\",\n              name: \"radio\".concat(_this.state.id),\n              id: \"radio\".concat(_this.state.id, \"_\").concat(answer.id),\n              label: answer.label,\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }\n            });\n          }));\n\n        default:\n          return /*#__PURE__*/React.createElement(Input, {\n            type: \"text\",\n            placeholder: \"\",\n            value: \"\",\n            onChange: function onChange(event) {},\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 11\n            }\n          });\n      }\n    };\n\n    _this.state = {\n      collapse: _this.props.expanded || false,\n      mode: \"edit-quesiton\",\n      id: _this.props.id,\n      title: _this.props.title || \"\",\n      question: _this.props.question || \"\",\n      answerType: _this.props.answerType ? answerTypes.find(function (item) {\n        return item.id === _this.props.answerType;\n      }) : null,\n      answers: _this.props.answers || []\n    };\n    return _this;\n  }\n\n  _createClass(SurveyQuestionBuilder, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(Card, {\n        className: \"question d-flex mb-4 \".concat(this.state.mode),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex flex-grow-1 min-width-zero\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"list-item-heading mb-0 truncate w-80 mb-1 mt-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"heading-number d-inline-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 15\n        }\n      }, this.props.order + 1), this.state.title)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-control custom-checkbox pl-1 align-self-center pr-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        outline: true,\n        color: \"theme-3\",\n        className: \"icon-button ml-1 edit-button\",\n        onClick: this.editClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"simple-icon-pencil\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        outline: true,\n        color: \"theme-3\",\n        className: \"icon-button ml-1 view-button no-border\",\n        onClick: this.viewClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"simple-icon-eye\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        outline: true,\n        color: \"theme-3\",\n        className: \"icon-button ml-1 rotate-icon-click \".concat(this.state.collapse ? \"rotate\" : \"\"),\n        onClick: this.toggleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"simple-icon-arrow-down\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        outline: true,\n        color: \"theme-3\",\n        className: \"icon-button ml-1\",\n        onClick: this.deleteClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"simple-icon-ban\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 15\n        }\n      })))), /*#__PURE__*/React.createElement(Collapse, {\n        isOpen: this.state.collapse,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-body pt-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"edit-mode\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 19\n        }\n      }, \"Title\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        value: this.state.title,\n        onChange: function onChange(event) {\n          _this2.setState({\n            title: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 19\n        }\n      }, \"Question\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        value: this.state.question,\n        onChange: function onChange(event) {\n          _this2.setState({\n            question: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"separator mb-4 mt-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 19\n        }\n      }, \"Answer Type\"), /*#__PURE__*/React.createElement(Select, {\n        components: {\n          Input: CustomSelectInput\n        },\n        className: \"react-select\",\n        classNamePrefix: \"react-select\",\n        name: \"form-field-name\",\n        value: this.state.answerType,\n        onChange: this.typeChange,\n        options: answerTypes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 19\n        }\n      })), this.state.answers.length > 0 && /*#__PURE__*/React.createElement(Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 51\n        }\n      }, \"Answers\"), /*#__PURE__*/React.createElement(Sortable, {\n        className: \"answers\",\n        options: {\n          handle: \".handle\"\n        },\n        onChange: function onChange(order, sortable, evt) {\n          var answers = mapOrder(_this2.state.answers, order, \"id\");\n\n          _this2.setState({\n            answers: answers\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 17\n        }\n      }, this.state.answers.map(function (item) {\n        return /*#__PURE__*/React.createElement(FormGroup, {\n          \"data-id\": item.id,\n          key: item.id,\n          className: \"mb-1\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Input, {\n          type: \"text\",\n          value: item.label,\n          autoFocus: true,\n          onChange: function onChange(event) {\n            _this2.updateAnswer(item.id, event);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"input-icons\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Badge, {\n          className: \"handle\",\n          color: \"empty\",\n          pill: true,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"simple-icon-cursor-move\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 29\n          }\n        })), /*#__PURE__*/React.createElement(Badge, {\n          color: \"empty\",\n          pill: true,\n          onClick: function onClick() {\n            return _this2.removeAnswer(item.id);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"simple-icon-close\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 29\n          }\n        }))));\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 17\n        }\n      }, this.state.answerType && this.state.answerType.id !== 1 && /*#__PURE__*/React.createElement(Button, {\n        outline: true,\n        color: \"primary\",\n        className: \"mt-3\",\n        onClick: function onClick() {\n          return _this2.addAnswer();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"simple-icon-plus btn-group-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 23\n        }\n      }), \" Add Answer\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"view-mode\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 17\n        }\n      }, this.state.question), this.renderViewModeAnswers())))));\n    }\n  }]);\n\n  return SurveyQuestionBuilder;\n}(React.Component);\n\nexport { SurveyQuestionBuilder as default };","map":{"version":3,"sources":["C:/Users/Hamed/Desktop/Gogo-React/src/containers/applications/QuestionBuilder.js"],"names":["React","Card","Button","Collapse","FormGroup","Label","Form","Input","Badge","CustomInput","Select","Sortable","CustomSelectInput","mapOrder","answerTypes","label","value","id","SurveyQuestionBuilder","props","deleteClick","state","toggleClick","setState","collapse","editClick","mode","viewClick","typeChange","answerType","answers","removeAnswer","answerId","filter","item","addAnswer","nextId","length","orderedAnswers","slice","sort","a","b","updateAnswer","event","answerIndex","findIndex","target","renderViewModeAnswers","map","answer","expanded","title","question","find","order","handle","sortable","evt","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,IADF,EAEEC,MAFF,EAGEC,QAHF,EAIEC,SAJF,EAKEC,KALF,EAMEC,IANF,EAOEC,KAPF,EAQEC,KARF,EASEC,WATF,QAUO,YAVP;AAWA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AAEA,OAAOC,iBAAP,MAA8B,2CAA9B;AAEA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,IAAMC,WAAW,GAAG,CAClB;AAAEC,EAAAA,KAAK,EAAE,WAAT;AAAsBC,EAAAA,KAAK,EAAE,GAA7B;AAAkCC,EAAAA,EAAE,EAAE;AAAtC,CADkB,EAElB;AAAEF,EAAAA,KAAK,EAAE,UAAT;AAAqBC,EAAAA,KAAK,EAAE,GAA5B;AAAiCC,EAAAA,EAAE,EAAE;AAArC,CAFkB,EAGlB;AAAEF,EAAAA,KAAK,EAAE,aAAT;AAAwBC,EAAAA,KAAK,EAAE,GAA/B;AAAoCC,EAAAA,EAAE,EAAE;AAAxC,CAHkB,CAApB;;IAKqBC,qB;;;;;AACnB,iCAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAgBnBC,WAhBmB,GAgBL,YAAM;AAClB,YAAKD,KAAL,CAAWC,WAAX,CAAuB,MAAKC,KAAL,CAAWJ,EAAlC;AACD,KAlBkB;;AAAA,UAmBnBK,WAnBmB,GAmBL,YAAM;AAClB,YAAKC,QAAL,CAAc;AAAEC,QAAAA,QAAQ,EAAE,CAAC,MAAKH,KAAL,CAAWG;AAAxB,OAAd;AACD,KArBkB;;AAAA,UAsBnBC,SAtBmB,GAsBP,YAAM;AAChB,YAAKF,QAAL,CAAc;AAAEG,QAAAA,IAAI,EAAE;AAAR,OAAd;;AACA,YAAKH,QAAL,CAAc;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACD,KAzBkB;;AAAA,UA0BnBG,SA1BmB,GA0BP,YAAM;AAChB,YAAKJ,QAAL,CAAc;AAAEG,QAAAA,IAAI,EAAE;AAAR,OAAd;;AACA,YAAKH,QAAL,CAAc;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACD,KA7BkB;;AAAA,UA8BnBI,UA9BmB,GA8BN,UAAAC,UAAU,EAAI;AACzB,UAAI,MAAKR,KAAL,CAAWQ,UAAf,EAA2B;AACzB,YACE,CAAC,MAAKR,KAAL,CAAWQ,UAAX,CAAsBZ,EAAtB,KAA6B,CAA7B,IAAkC,MAAKI,KAAL,CAAWQ,UAAX,CAAsBZ,EAAtB,KAA6B,CAAhE,KACAY,UAAU,CAACZ,EAAX,KAAkB,CAFpB,EAGE;AACA,gBAAKM,QAAL,CAAc;AAAEO,YAAAA,OAAO,EAAE;AAAX,WAAd;AACD;AACF;;AAED,YAAKP,QAAL,CAAc;AAAEM,QAAAA,UAAU,EAAVA;AAAF,OAAd;AACD,KAzCkB;;AAAA,UA0CnBE,YA1CmB,GA0CJ,UAAAC,QAAQ,EAAI;AACzB,YAAKT,QAAL,CAAc;AACZO,QAAAA,OAAO,EAAE,MAAKT,KAAL,CAAWS,OAAX,CAAmBG,MAAnB,CAA0B,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACjB,EAAL,KAAYe,QAAhB;AAAA,SAA9B;AADG,OAAd;AAGD,KA9CkB;;AAAA,UA+CnBG,SA/CmB,GA+CP,YAAM;AAChB,UAAIC,MAAM,GAAG,CAAb;;AACA,UAAI,MAAKf,KAAL,CAAWS,OAAX,CAAmBO,MAAnB,GAA4B,CAAhC,EAAmC;AACjC,YAAIC,cAAc,GAAG,MAAKjB,KAAL,CAAWS,OAAX,CAAmBS,KAAnB,GAA2BC,IAA3B,CAAgC,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAC7D,iBAAOD,CAAC,CAACxB,EAAF,GAAOyB,CAAC,CAACzB,EAAhB;AACD,SAFoB,CAArB;;AAGAmB,QAAAA,MAAM,GAAGE,cAAc,CAAC,CAAD,CAAd,CAAkBrB,EAAlB,GAAuB,CAAhC;AACD;;AACD,YAAKM,QAAL,CAAc;AACZO,QAAAA,OAAO,+BAAM,MAAKT,KAAL,CAAWS,OAAjB,IAA0B;AAAEb,UAAAA,EAAE,EAAEmB,MAAN;AAAcrB,UAAAA,KAAK,EAAE;AAArB,SAA1B;AADK,OAAd;AAGD,KA1DkB;;AAAA,UA4DnB4B,YA5DmB,GA4DJ,UAACX,QAAD,EAAWY,KAAX,EAAqB;AAClC,UAAIC,WAAW,GAAG,MAAKxB,KAAL,CAAWS,OAAX,CAAmBgB,SAAnB,CAChB,UAAAZ,IAAI;AAAA,eAAIA,IAAI,CAACjB,EAAL,KAAYe,QAAhB;AAAA,OADY,CAAlB;;AAGA,UAAIF,OAAO,GAAG,MAAKT,KAAL,CAAWS,OAAzB;AACAA,MAAAA,OAAO,CAACe,WAAD,CAAP,CAAqB,OAArB,IAAgCD,KAAK,CAACG,MAAN,CAAa/B,KAA7C;;AACA,YAAKO,QAAL,CAAc;AACZO,QAAAA,OAAO,EAAPA;AADY,OAAd;AAGD,KArEkB;;AAAA,UAuEnBkB,qBAvEmB,GAuEK,YAAM;AAC5B,UAAI,CAAC,MAAK3B,KAAL,CAAWQ,UAAhB,EAA4B;AAC1B;AACD;;AACD,cAAQ,MAAKR,KAAL,CAAWQ,UAAX,CAAsBZ,EAA9B;AACE,aAAK,CAAL;AACE,8BAAO,oBAAC,KAAD;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;;AACF,aAAK,CAAL;AACE,8BACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACG,GADH,EAEG,MAAKI,KAAL,CAAWS,OAAX,CAAmBmB,GAAnB,CAAuB,UAAAC,MAAM,EAAI;AAChC,gCACE,oBAAC,WAAD;AACE,cAAA,GAAG,EAAEA,MAAM,CAACjC,EADd;AAEE,cAAA,IAAI,EAAC,UAFP;AAGE,cAAA,EAAE,oBAAa,MAAKI,KAAL,CAAWJ,EAAxB,cAA8BiC,MAAM,CAACjC,EAArC,CAHJ;AAIE,cAAA,IAAI,oBAAa,MAAKI,KAAL,CAAWJ,EAAxB,CAJN;AAKE,cAAA,KAAK,EAAEiC,MAAM,CAACnC,KALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAQD,WATA,CAFH,EAWM,GAXN,CADF;;AAeF,aAAK,CAAL;AACE,8BACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACG,MAAKM,KAAL,CAAWS,OAAX,CAAmBmB,GAAnB,CAAuB,UAAAC,MAAM,EAAI;AAChC,gCACE,oBAAC,WAAD;AACE,cAAA,GAAG,EAAEA,MAAM,CAACjC,EADd;AAEE,cAAA,IAAI,EAAC,OAFP;AAGE,cAAA,IAAI,iBAAU,MAAKI,KAAL,CAAWJ,EAArB,CAHN;AAIE,cAAA,EAAE,iBAAU,MAAKI,KAAL,CAAWJ,EAArB,cAA2BiC,MAAM,CAACjC,EAAlC,CAJJ;AAKE,cAAA,KAAK,EAAEiC,MAAM,CAACnC,KALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAQD,WATA,CADH,CADF;;AAcF;AACE,8BACE,oBAAC,KAAD;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,WAAW,EAAC,EAA/B;AAAkC,YAAA,KAAK,EAAE,EAAzC;AAA6C,YAAA,QAAQ,EAAE,kBAAA6B,KAAK,EAAI,CAAE,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAnCJ;AAuCD,KAlHkB;;AAEjB,UAAKvB,KAAL,GAAa;AACXG,MAAAA,QAAQ,EAAE,MAAKL,KAAL,CAAWgC,QAAX,IAAuB,KADtB;AAEXzB,MAAAA,IAAI,EAAE,eAFK;AAGXT,MAAAA,EAAE,EAAE,MAAKE,KAAL,CAAWF,EAHJ;AAIXmC,MAAAA,KAAK,EAAE,MAAKjC,KAAL,CAAWiC,KAAX,IAAoB,EAJhB;AAKXC,MAAAA,QAAQ,EAAE,MAAKlC,KAAL,CAAWkC,QAAX,IAAuB,EALtB;AAMXxB,MAAAA,UAAU,EAAE,MAAKV,KAAL,CAAWU,UAAX,GACRf,WAAW,CAACwC,IAAZ,CAAiB,UAAApB,IAAI,EAAI;AACvB,eAAOA,IAAI,CAACjB,EAAL,KAAY,MAAKE,KAAL,CAAWU,UAA9B;AACD,OAFD,CADQ,GAIR,IAVO;AAWXC,MAAAA,OAAO,EAAE,MAAKX,KAAL,CAAWW,OAAX,IAAsB;AAXpB,KAAb;AAFiB;AAelB;;;;6BAqGQ;AAAA;;AACP,0BACE,oBAAC,IAAD;AAAM,QAAA,SAAS,iCAA0B,KAAKT,KAAL,CAAWK,IAArC,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,yHAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,gDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAM,QAAA,SAAS,EAAC,+BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKP,KAAL,CAAWoC,KAAX,GAAmB,CADtB,CADF,EAIG,KAAKlC,KAAL,CAAW+B,KAJd,CADF,CADF,eASE;AAAK,QAAA,SAAS,EAAC,4DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AACE,QAAA,OAAO,MADT;AAEE,QAAA,KAAK,EAAE,SAFT;AAGE,QAAA,SAAS,EAAC,8BAHZ;AAIE,QAAA,OAAO,EAAE,KAAK3B,SAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKE;AAAG,QAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF,eASE,oBAAC,MAAD;AACE,QAAA,OAAO,MADT;AAEE,QAAA,KAAK,EAAE,SAFT;AAGE,QAAA,SAAS,EAAC,wCAHZ;AAIE,QAAA,OAAO,EAAE,KAAKE,SAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKE;AAAG,QAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CATF,eAiBE,oBAAC,MAAD;AACE,QAAA,OAAO,MADT;AAEE,QAAA,KAAK,EAAE,SAFT;AAGE,QAAA,SAAS,+CACP,KAAKN,KAAL,CAAWG,QAAX,GAAsB,QAAtB,GAAiC,EAD1B,CAHX;AAME,QAAA,OAAO,EAAE,KAAKF,WANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAOE;AAAG,QAAA,SAAS,EAAC,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,CAjBF,eA2BE,oBAAC,MAAD;AACE,QAAA,OAAO,MADT;AAEE,QAAA,KAAK,EAAE,SAFT;AAGE,QAAA,SAAS,EAAC,kBAHZ;AAIE,QAAA,OAAO,EAAE,KAAKF,WAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKE;AAAG,QAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CA3BF,CATF,CADF,eA+CE,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAE,KAAKC,KAAL,CAAWG,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAW+B,KAFpB;AAGE,QAAA,QAAQ,EAAE,kBAAAR,KAAK,EAAI;AACjB,UAAA,MAAI,CAACrB,QAAL,CAAc;AAAE6B,YAAAA,KAAK,EAAER,KAAK,CAACG,MAAN,CAAa/B;AAAtB,WAAd;AACD,SALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,eAWE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAE,KAAKK,KAAL,CAAWgC,QAFpB;AAGE,QAAA,QAAQ,EAAE,kBAAAT,KAAK,EAAI;AACjB,UAAA,MAAI,CAACrB,QAAL,CAAc;AAAE8B,YAAAA,QAAQ,EAAET,KAAK,CAACG,MAAN,CAAa/B;AAAzB,WAAd;AACD,SALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAXF,eAoBE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QApBF,eAsBE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE,oBAAC,MAAD;AACE,QAAA,UAAU,EAAE;AAAET,UAAAA,KAAK,EAAEK;AAAT,SADd;AAEE,QAAA,SAAS,EAAC,cAFZ;AAGE,QAAA,eAAe,EAAC,cAHlB;AAIE,QAAA,IAAI,EAAC,iBAJP;AAKE,QAAA,KAAK,EAAE,KAAKS,KAAL,CAAWQ,UALpB;AAME,QAAA,QAAQ,EAAE,KAAKD,UANjB;AAOE,QAAA,OAAO,EAAEd,WAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAtBF,EAiCG,KAAKO,KAAL,CAAWS,OAAX,CAAmBO,MAAnB,GAA4B,CAA5B,iBAAiC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAjCpC,eAmCE,oBAAC,QAAD;AACE,QAAA,SAAS,EAAC,SADZ;AAEE,QAAA,OAAO,EAAE;AACPmB,UAAAA,MAAM,EAAE;AADD,SAFX;AAKE,QAAA,QAAQ,EAAE,kBAACD,KAAD,EAAQE,QAAR,EAAkBC,GAAlB,EAA0B;AAClC,cAAI5B,OAAO,GAAGjB,QAAQ,CAAC,MAAI,CAACQ,KAAL,CAAWS,OAAZ,EAAqByB,KAArB,EAA4B,IAA5B,CAAtB;;AACA,UAAA,MAAI,CAAChC,QAAL,CAAc;AAAEO,YAAAA,OAAO,EAAPA;AAAF,WAAd;AACD,SARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASG,KAAKT,KAAL,CAAWS,OAAX,CAAmBmB,GAAnB,CAAuB,UAAAf,IAAI,EAAI;AAC9B,4BACE,oBAAC,SAAD;AACE,qBAASA,IAAI,CAACjB,EADhB;AAEE,UAAA,GAAG,EAAEiB,IAAI,CAACjB,EAFZ;AAGE,UAAA,SAAS,EAAC,MAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAIE,oBAAC,KAAD;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,KAAK,EAAEiB,IAAI,CAACnB,KAFd;AAGE,UAAA,SAAS,MAHX;AAIE,UAAA,QAAQ,EAAE,kBAAA6B,KAAK,EAAI;AACjB,YAAA,MAAI,CAACD,YAAL,CAAkBT,IAAI,CAACjB,EAAvB,EAA2B2B,KAA3B;AACD,WANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,eAWE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,KAAD;AAAO,UAAA,SAAS,EAAC,QAAjB;AAA0B,UAAA,KAAK,EAAC,OAAhC;AAAwC,UAAA,IAAI,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAG,UAAA,SAAS,EAAC,yBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF,eAIE,oBAAC,KAAD;AACE,UAAA,KAAK,EAAC,OADR;AAEE,UAAA,IAAI,MAFN;AAGE,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACb,YAAL,CAAkBG,IAAI,CAACjB,EAAvB,CAAN;AAAA,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAIE;AAAG,UAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,CAJF,CAXF,CADF;AAyBD,OA1BA,CATH,CAnCF,eAyEE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKI,KAAL,CAAWQ,UAAX,IAAyB,KAAKR,KAAL,CAAWQ,UAAX,CAAsBZ,EAAtB,KAA6B,CAAtD,iBACC,oBAAC,MAAD;AACE,QAAA,OAAO,MADT;AAEE,QAAA,KAAK,EAAC,SAFR;AAGE,QAAA,SAAS,EAAC,MAHZ;AAIE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACkB,SAAL,EAAN;AAAA,SAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKE;AAAG,QAAA,SAAS,EAAC,iCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,gBAFJ,CAzEF,CADF,CADF,eAyFE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQ,KAAKd,KAAL,CAAWgC,QAAnB,CADF,EAEG,KAAKL,qBAAL,EAFH,CADF,CAzFF,CADF,CA/CF,CADF;AAoJD;;;;EA1QgDhD,KAAK,CAAC2D,S;;SAApCzC,qB","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  Button,\r\n  Collapse,\r\n  FormGroup,\r\n  Label,\r\n  Form,\r\n  Input,\r\n  Badge,\r\n  CustomInput\r\n} from \"reactstrap\";\r\nimport Select from \"react-select\";\r\nimport Sortable from \"react-sortablejs\";\r\n\r\nimport CustomSelectInput from \"../../components/common/CustomSelectInput\";\r\n\r\nimport { mapOrder } from \"../../helpers/Utils\";\r\n\r\nconst answerTypes = [\r\n  { label: \"Text Area\", value: \"1\", id: 1 },\r\n  { label: \"Checkbox\", value: \"2\", id: 2 },\r\n  { label: \"Radiobutton\", value: \"3\", id: 3 }\r\n];\r\nexport default class SurveyQuestionBuilder extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      collapse: this.props.expanded || false,\r\n      mode: \"edit-quesiton\",\r\n      id: this.props.id,\r\n      title: this.props.title || \"\",\r\n      question: this.props.question || \"\",\r\n      answerType: this.props.answerType\r\n        ? answerTypes.find(item => {\r\n            return item.id === this.props.answerType;\r\n          })\r\n        : null,\r\n      answers: this.props.answers || []\r\n    };\r\n  }\r\n  deleteClick = () => {\r\n    this.props.deleteClick(this.state.id);\r\n  };\r\n  toggleClick = () => {\r\n    this.setState({ collapse: !this.state.collapse });\r\n  };\r\n  editClick = () => {\r\n    this.setState({ mode: \"edit-quesiton\" });\r\n    this.setState({ collapse: true });\r\n  };\r\n  viewClick = () => {\r\n    this.setState({ mode: \"view-quesiton\" });\r\n    this.setState({ collapse: true });\r\n  };\r\n  typeChange = answerType => {\r\n    if (this.state.answerType) {\r\n      if (\r\n        (this.state.answerType.id === 2 || this.state.answerType.id === 3) &&\r\n        answerType.id === 1\r\n      ) {\r\n        this.setState({ answers: [] });\r\n      }\r\n    }\r\n\r\n    this.setState({ answerType });\r\n  };\r\n  removeAnswer = answerId => {\r\n    this.setState({\r\n      answers: this.state.answers.filter(item => item.id !== answerId)\r\n    });\r\n  };\r\n  addAnswer = () => {\r\n    var nextId = 0;\r\n    if (this.state.answers.length > 0) {\r\n      var orderedAnswers = this.state.answers.slice().sort((a, b) => {\r\n        return a.id < b.id;\r\n      });\r\n      nextId = orderedAnswers[0].id + 1;\r\n    }\r\n    this.setState({\r\n      answers: [...this.state.answers, { id: nextId, label: \"\" }]\r\n    });\r\n  };\r\n\r\n  updateAnswer = (answerId, event) => {\r\n    var answerIndex = this.state.answers.findIndex(\r\n      item => item.id === answerId\r\n    );\r\n    var answers = this.state.answers;\r\n    answers[answerIndex][\"label\"] = event.target.value;\r\n    this.setState({\r\n      answers\r\n    });\r\n  };\r\n\r\n  renderViewModeAnswers = () => {\r\n    if (!this.state.answerType) {\r\n      return;\r\n    }\r\n    switch (this.state.answerType.id) {\r\n      case 1:\r\n        return <Input type=\"text\" />;\r\n      case 2:\r\n        return (\r\n          <FormGroup>\r\n            {\" \"}\r\n            {this.state.answers.map(answer => {\r\n              return (\r\n                <CustomInput\r\n                  key={answer.id}\r\n                  type=\"checkbox\"\r\n                  id={`checkbox${this.state.id}_${answer.id}`}\r\n                  name={`checkbox${this.state.id}`}\r\n                  label={answer.label}/>\r\n              );\r\n            })}{\" \"}\r\n          </FormGroup>\r\n        );\r\n      case 3:\r\n        return (\r\n          <FormGroup>\r\n            {this.state.answers.map(answer => {\r\n              return (\r\n                <CustomInput\r\n                  key={answer.id}\r\n                  type=\"radio\"\r\n                  name={`radio${this.state.id}`}\r\n                  id={`radio${this.state.id}_${answer.id}`}\r\n                  label={answer.label}/>\r\n              );\r\n            })}\r\n          </FormGroup>\r\n        );\r\n      default:\r\n        return (\r\n          <Input type=\"text\" placeholder=\"\" value={\"\"} onChange={event => {}} />\r\n        );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card className={`question d-flex mb-4 ${this.state.mode}`}>\r\n        <div className=\"d-flex flex-grow-1 min-width-zero\">\r\n          <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\r\n            <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\r\n              <span className=\"heading-number d-inline-block\">\r\n                {this.props.order + 1}\r\n              </span>\r\n              {this.state.title}\r\n            </div>\r\n          </div>\r\n          <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\r\n            <Button\r\n              outline\r\n              color={\"theme-3\"}\r\n              className=\"icon-button ml-1 edit-button\"\r\n              onClick={this.editClick} >\r\n              <i className=\"simple-icon-pencil\" />\r\n            </Button>\r\n\r\n            <Button\r\n              outline\r\n              color={\"theme-3\"}\r\n              className=\"icon-button ml-1 view-button no-border\"\r\n              onClick={this.viewClick} >\r\n              <i className=\"simple-icon-eye\" />\r\n            </Button>\r\n\r\n            <Button\r\n              outline\r\n              color={\"theme-3\"}\r\n              className={`icon-button ml-1 rotate-icon-click ${\r\n                this.state.collapse ? \"rotate\" : \"\"\r\n              }`}\r\n              onClick={this.toggleClick}>\r\n              <i className=\"simple-icon-arrow-down\" />\r\n            </Button>\r\n\r\n            <Button\r\n              outline\r\n              color={\"theme-3\"}\r\n              className=\"icon-button ml-1\"\r\n              onClick={this.deleteClick}>\r\n              <i className=\"simple-icon-ban\" />\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <Collapse isOpen={this.state.collapse}>\r\n          <div className=\"card-body pt-0\">\r\n            <div className=\"edit-mode\">\r\n              <Form>\r\n                <FormGroup>\r\n                  <Label>Title</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    value={this.state.title}\r\n                    onChange={event => {\r\n                      this.setState({ title: event.target.value });\r\n                    }}/>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                  <Label>Question</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    value={this.state.question}\r\n                    onChange={event => {\r\n                      this.setState({ question: event.target.value });\r\n                    }}/>\r\n                </FormGroup>\r\n                <div className=\"separator mb-4 mt-4\" />\r\n\r\n                <FormGroup>\r\n                  <Label>Answer Type</Label>\r\n                  <Select\r\n                    components={{ Input: CustomSelectInput }}\r\n                    className=\"react-select\"\r\n                    classNamePrefix=\"react-select\"\r\n                    name=\"form-field-name\"\r\n                    value={this.state.answerType}\r\n                    onChange={this.typeChange}\r\n                    options={answerTypes}/>\r\n                </FormGroup>\r\n                {this.state.answers.length > 0 && <Label>Answers</Label>}\r\n\r\n                <Sortable\r\n                  className=\"answers\"\r\n                  options={{\r\n                    handle: \".handle\"\r\n                  }}\r\n                  onChange={(order, sortable, evt) => {\r\n                    var answers = mapOrder(this.state.answers, order, \"id\");\r\n                    this.setState({ answers });\r\n                  }}>\r\n                  {this.state.answers.map(item => {\r\n                    return (\r\n                      <FormGroup\r\n                        data-id={item.id}\r\n                        key={item.id}\r\n                        className=\"mb-1\">\r\n                        <Input\r\n                          type=\"text\"\r\n                          value={item.label}\r\n                          autoFocus\r\n                          onChange={event => {\r\n                            this.updateAnswer(item.id, event);\r\n                          }}/>\r\n                        <div className=\"input-icons\">\r\n                          <Badge className=\"handle\" color=\"empty\" pill>\r\n                            <i className=\"simple-icon-cursor-move\" />\r\n                          </Badge>\r\n                          <Badge\r\n                            color=\"empty\"\r\n                            pill\r\n                            onClick={() => this.removeAnswer(item.id)} >\r\n                            <i className=\"simple-icon-close\" />\r\n                          </Badge>\r\n                        </div>\r\n                      </FormGroup>\r\n                    );\r\n                  })}\r\n                </Sortable>\r\n\r\n                <div className=\"text-center\">\r\n                  {this.state.answerType && this.state.answerType.id !== 1 && (\r\n                    <Button\r\n                      outline\r\n                      color=\"primary\"\r\n                      className=\"mt-3\"\r\n                      onClick={() => this.addAnswer()}>\r\n                      <i className=\"simple-icon-plus btn-group-icon\" /> Add\r\n                      Answer\r\n                    </Button>\r\n                  )}\r\n                </div>\r\n              </Form>\r\n            </div>\r\n            <div className=\"view-mode\">\r\n              <FormGroup>\r\n                <Label>{this.state.question}</Label>\r\n                {this.renderViewModeAnswers()}\r\n              </FormGroup>\r\n            </div>\r\n          </div>\r\n        </Collapse>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}