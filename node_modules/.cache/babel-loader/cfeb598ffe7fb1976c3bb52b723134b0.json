{"ast":null,"code":"ace.define(\"ace/mode/vhdl_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var VHDLHighlightRules = function VHDLHighlightRules() {\n    var keywords = \"access|after|ailas|all|architecture|assert|attribute|\" + \"begin|block|buffer|bus|case|component|configuration|\" + \"disconnect|downto|else|elsif|end|entity|file|for|function|\" + \"generate|generic|guarded|if|impure|in|inertial|inout|is|\" + \"label|linkage|literal|loop|mapnew|next|of|on|open|others|\" + \"out|port|process|pure|range|record|reject|report|return|\" + \"select|severity|shared|signal|subtype|then|to|transport|\" + \"type|unaffected|united|until|wait|when|while|with\";\n    var storageType = \"bit|bit_vector|boolean|character|integer|line|natural|\" + \"positive|real|register|signed|std_logic|\" + \"std_logic_vector|string||text|time|unsigned|variable\";\n    var storageModifiers = \"array|constant\";\n    var keywordOperators = \"abs|and|mod|nand|nor|not|rem|rol|ror|sla|sll|sra\" + \"srl|xnor|xor\";\n    var builtinConstants = \"true|false|null\";\n    var keywordMapper = this.createKeywordMapper({\n      \"keyword.operator\": keywordOperators,\n      \"keyword\": keywords,\n      \"constant.language\": builtinConstants,\n      \"storage.modifier\": storageModifiers,\n      \"storage.type\": storageType\n    }, \"identifier\", true);\n    this.$rules = {\n      \"start\": [{\n        token: \"comment\",\n        regex: \"--.*$\"\n      }, {\n        token: \"string\",\n        // \" string\n        regex: '\".*?\"'\n      }, {\n        token: \"string\",\n        // ' string\n        regex: \"'.*?'\"\n      }, {\n        token: \"constant.numeric\",\n        // float\n        regex: \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n      }, {\n        token: \"keyword\",\n        // pre-compiler directives\n        regex: \"\\\\s*(?:library|package|use)\\\\b\"\n      }, {\n        token: keywordMapper,\n        regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n      }, {\n        token: \"keyword.operator\",\n        regex: \"&|\\\\*|\\\\+|\\\\-|\\\\/|<|=|>|\\\\||=>|\\\\*\\\\*|:=|\\\\/=|>=|<=|<>\"\n      }, {\n        token: \"punctuation.operator\",\n        regex: \"\\\\'|\\\\:|\\\\,|\\\\;|\\\\.\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"[[(]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\])]\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }]\n    };\n  };\n\n  oop.inherits(VHDLHighlightRules, TextHighlightRules);\n  exports.VHDLHighlightRules = VHDLHighlightRules;\n});\nace.define(\"ace/mode/vhdl\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/vhdl_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextMode = require(\"./text\").Mode;\n\n  var VHDLHighlightRules = require(\"./vhdl_highlight_rules\").VHDLHighlightRules;\n\n  var Mode = function Mode() {\n    this.HighlightRules = VHDLHighlightRules;\n    this.$behaviour = this.$defaultBehaviour;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"--\";\n    this.$id = \"ace/mode/vhdl\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n\n(function () {\n  ace.require([\"ace/mode/vhdl\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":null,"metadata":{},"sourceType":"script"}