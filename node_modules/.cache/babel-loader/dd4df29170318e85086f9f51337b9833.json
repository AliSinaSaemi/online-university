{"ast":null,"code":"ace.define(\"ace/mode/diff_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var DiffHighlightRules = function DiffHighlightRules() {\n    this.$rules = {\n      \"start\": [{\n        regex: \"^(?:\\\\*{15}|={67}|-{3}|\\\\+{3})$\",\n        token: \"punctuation.definition.separator.diff\",\n        \"name\": \"keyword\"\n      }, {\n        //diff.range.unified\n        regex: \"^(@@)(\\\\s*.+?\\\\s*)(@@)(.*)$\",\n        token: [\"constant\", \"constant.numeric\", \"constant\", \"comment.doc.tag\"]\n      }, {\n        //diff.range.normal\n        regex: \"^(\\\\d+)([,\\\\d]+)(a|d|c)(\\\\d+)([,\\\\d]+)(.*)$\",\n        token: [\"constant.numeric\", \"punctuation.definition.range.diff\", \"constant.function\", \"constant.numeric\", \"punctuation.definition.range.diff\", \"invalid\"],\n        \"name\": \"meta.\"\n      }, {\n        regex: \"^(\\\\-{3}|\\\\+{3}|\\\\*{3})( .+)$\",\n        token: [\"constant.numeric\", \"meta.tag\"]\n      }, {\n        // added\n        regex: \"^([!+>])(.*?)(\\\\s*)$\",\n        token: [\"support.constant\", \"text\", \"invalid\"]\n      }, {\n        // removed\n        regex: \"^([<\\\\-])(.*?)(\\\\s*)$\",\n        token: [\"support.function\", \"string\", \"invalid\"]\n      }, {\n        regex: \"^(diff)(\\\\s+--\\\\w+)?(.+?)( .+)?$\",\n        token: [\"variable\", \"variable\", \"keyword\", \"variable\"]\n      }, {\n        regex: \"^Index.+$\",\n        token: \"variable\"\n      }, {\n        regex: \"^\\\\s+$\",\n        token: \"text\"\n      }, {\n        regex: \"\\\\s*$\",\n        token: \"invalid\"\n      }, {\n        defaultToken: \"invisible\",\n        caseInsensitive: true\n      }]\n    };\n  };\n\n  oop.inherits(DiffHighlightRules, TextHighlightRules);\n  exports.DiffHighlightRules = DiffHighlightRules;\n});\nace.define(\"ace/mode/folding/diff\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/folding/fold_mode\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\n  var Range = require(\"../../range\").Range;\n\n  var FoldMode = exports.FoldMode = function (levels, flag) {\n    this.regExpList = levels;\n    this.flag = flag;\n    this.foldingStartMarker = RegExp(\"^(\" + levels.join(\"|\") + \")\", this.flag);\n  };\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      var start = {\n        row: row,\n        column: line.length\n      };\n      var regList = this.regExpList;\n\n      for (var i = 1; i <= regList.length; i++) {\n        var re = RegExp(\"^(\" + regList.slice(0, i).join(\"|\") + \")\", this.flag);\n        if (re.test(line)) break;\n      }\n\n      for (var l = session.getLength(); ++row < l;) {\n        line = session.getLine(row);\n        if (re.test(line)) break;\n      }\n\n      if (row == start.row + 1) return;\n      return new Range(start.row, start.column, row - 1, line.length);\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/diff\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/diff_highlight_rules\", \"ace/mode/folding/diff\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextMode = require(\"./text\").Mode;\n\n  var HighlightRules = require(\"./diff_highlight_rules\").DiffHighlightRules;\n\n  var FoldMode = require(\"./folding/diff\").FoldMode;\n\n  var Mode = function Mode() {\n    this.HighlightRules = HighlightRules;\n    this.foldingRules = new FoldMode([\"diff\", \"@@|\\\\*{5}\"], \"i\");\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.$id = \"ace/mode/diff\";\n    this.snippetFileId = \"ace/snippets/diff\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n\n(function () {\n  ace.require([\"ace/mode/diff\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":null,"metadata":{},"sourceType":"script"}