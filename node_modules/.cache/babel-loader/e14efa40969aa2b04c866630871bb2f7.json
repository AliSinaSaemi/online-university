{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Hamed\\\\Desktop\\\\Gogo-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\Hamed\\\\Desktop\\\\Gogo-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Hamed\\\\Desktop\\\\Gogo-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Hamed\\\\Desktop\\\\Gogo-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Hamed\\\\Desktop\\\\Gogo-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Hamed\\\\Desktop\\\\Gogo-React\\\\src\\\\views\\\\app\\\\applications\\\\todo.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { Row, Button, UncontrolledDropdown, DropdownToggle, DropdownItem, DropdownMenu, Collapse, ButtonDropdown, CustomInput } from \"reactstrap\";\nimport { injectIntl } from \"react-intl\";\nimport { connect } from \"react-redux\";\nimport IntlMessages from \"../../../helpers/IntlMessages\";\nimport { Colxx, Separator } from \"../../../components/common/CustomBootstrap\";\nimport Breadcrumb from \"../../../containers/navs/Breadcrumb\";\nimport { getTodoList, getTodoListWithOrder, getTodoListSearch, selectedTodoItemsChange } from \"../../../redux/actions\";\nimport TodoListItem from \"../../../components/applications/TodoListItem\";\nimport AddNewTodoModal from \"../../../containers/applications/AddNewTodoModal\";\nimport TodoApplicationMenu from \"../../../containers/applications/TodoApplicationMenu\";\n\nvar TodoApp = /*#__PURE__*/function (_Component) {\n  _inherits(TodoApp, _Component);\n\n  var _super = _createSuper(TodoApp);\n\n  function TodoApp(props) {\n    var _this;\n\n    _classCallCheck(this, TodoApp);\n\n    _this = _super.call(this, props);\n\n    _this.toggleDisplayOptions = function () {\n      _this.setState({\n        displayOptionsIsOpen: !_this.state.displayOptionsIsOpen\n      });\n    };\n\n    _this.toggleModal = function () {\n      _this.setState({\n        modalOpen: !_this.state.modalOpen\n      });\n    };\n\n    _this.toggleSplit = function () {\n      _this.setState(function (prevState) {\n        return {\n          dropdownSplitOpen: !prevState.dropdownSplitOpen\n        };\n      });\n    };\n\n    _this.changeOrderBy = function (column) {\n      _this.props.getTodoListWithOrder(column);\n    };\n\n    _this.handleKeyPress = function (e) {\n      if (e.key === \"Enter\") {\n        _this.props.getTodoListSearch(e.target.value);\n      }\n    };\n\n    _this.handleCheckChange = function (event, id) {\n      if (_this.state.lastChecked == null) {\n        _this.setState({\n          lastChecked: id\n        });\n      }\n\n      var selectedItems = Object.assign([], _this.props.todoApp.selectedItems);\n\n      if (selectedItems.includes(id)) {\n        selectedItems = selectedItems.filter(function (x) {\n          return x !== id;\n        });\n      } else {\n        selectedItems.push(id);\n      }\n\n      _this.props.selectedTodoItemsChange(selectedItems);\n\n      if (event.shiftKey) {\n        var _selectedItems;\n\n        var items = _this.props.todoApp.todoItems;\n\n        var start = _this.getIndex(id, items, \"id\");\n\n        var end = _this.getIndex(_this.state.lastChecked, items, \"id\");\n\n        items = items.slice(Math.min(start, end), Math.max(start, end) + 1);\n\n        (_selectedItems = selectedItems).push.apply(_selectedItems, _toConsumableArray(items.map(function (item) {\n          return item.id;\n        })));\n\n        selectedItems = Array.from(new Set(selectedItems));\n\n        _this.props.selectedTodoItemsChange(selectedItems);\n      }\n\n      return;\n    };\n\n    _this.handleChangeSelectAll = function () {\n      if (_this.props.todoApp.loading) {\n        if (_this.props.todoApp.selectedItems.length >= _this.props.todoApp.todoItems.length) {\n          _this.props.selectedTodoItemsChange([]);\n        } else {\n          _this.props.selectedTodoItemsChange(_this.props.todoApp.todoItems.map(function (x) {\n            return x.id;\n          }));\n        }\n      }\n    };\n\n    _this.state = {\n      dropdownSplitOpen: false,\n      modalOpen: false,\n      lastChecked: null,\n      displayOptionsIsOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(TodoApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getTodoList();\n    }\n  }, {\n    key: \"getIndex\",\n    value: function getIndex(value, arr, prop) {\n      for (var i = 0; i < arr.length; i++) {\n        if (arr[i][prop] === value) {\n          return i;\n        }\n      }\n\n      return -1;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props$todoApp = this.props.todoApp,\n          todoItems = _this$props$todoApp.todoItems,\n          searchKeyword = _this$props$todoApp.searchKeyword,\n          loading = _this$props$todoApp.loading,\n          orderColumn = _this$props$todoApp.orderColumn,\n          orderColumns = _this$props$todoApp.orderColumns,\n          selectedItems = _this$props$todoApp.selectedItems;\n      var messages = this.props.intl.messages;\n      var modalOpen = this.state.modalOpen;\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"app-row survey-app\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Colxx, {\n        xxs: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"menu.todo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }\n      })), loading && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-zero top-right-button-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"primary\",\n        size: \"lg\",\n        className: \"top-right-button\",\n        onClick: this.toggleModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"todo.add-new\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }\n      })), \" \", /*#__PURE__*/React.createElement(ButtonDropdown, {\n        isOpen: this.state.dropdownSplitOpen,\n        toggle: this.toggleSplit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"btn btn-primary btn-lg pl-4 pr-0 check-button check-all\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CustomInput, {\n        className: \"custom-checkbox mb-0 d-inline-block\",\n        type: \"checkbox\",\n        id: \"checkAll\",\n        checked: selectedItems.length >= todoItems.length,\n        onClick: function onClick() {\n          return _this2.handleChangeSelectAll();\n        },\n        onChange: function onChange() {\n          return _this2.handleChangeSelectAll();\n        },\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"custom-control-label \".concat(selectedItems.length > 0 && selectedItems.length < todoItems.length ? \"indeterminate\" : \"\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 27\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 23\n        }\n      })), /*#__PURE__*/React.createElement(DropdownToggle, {\n        caret: true,\n        color: \"primary\",\n        className: \"dropdown-toggle-split btn-lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(DropdownMenu, {\n        right: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(DropdownItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"todo.action\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(DropdownItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"todo.another-action\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 25\n        }\n      }))))), /*#__PURE__*/React.createElement(Breadcrumb, {\n        match: this.props.match,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"empty\",\n        className: \"pt-0 pl-0 d-inline-block d-md-none\",\n        onClick: this.toggleDisplayOptions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"todo.display-options\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 17\n        }\n      }), \" \", /*#__PURE__*/React.createElement(\"i\", {\n        className: \"simple-icon-arrow-down align-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Collapse, {\n        id: \"displayOptions\",\n        className: \"d-md-block\",\n        isOpen: this.state.displayOptionsIsOpen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-block mb-2 d-md-inline-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(UncontrolledDropdown, {\n        className: \"mr-1 float-md-left btn-group mb-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(DropdownToggle, {\n        caret: true,\n        color: \"outline-dark\",\n        size: \"xs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"todo.orderby\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 23\n        }\n      }), orderColumn ? orderColumn.label : \"\"), /*#__PURE__*/React.createElement(DropdownMenu, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }\n      }, orderColumns.map(function (o, index) {\n        return /*#__PURE__*/React.createElement(DropdownItem, {\n          key: index,\n          onClick: function onClick() {\n            return _this2.changeOrderBy(o.column);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 27\n          }\n        }, o.label);\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"search-sm d-inline-block float-md-left mr-1 mb-1 align-top\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"keyword\",\n        id: \"search\",\n        placeholder: messages[\"menu.search\"],\n        defaultValue: searchKeyword,\n        onKeyPress: function onKeyPress(e) {\n          return _this2.handleKeyPress(e);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }\n      }))))), /*#__PURE__*/React.createElement(Separator, {\n        className: \"mb-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }\n      }, loading ? todoItems.map(function (item, index) {\n        return /*#__PURE__*/React.createElement(TodoListItem, {\n          key: \"todo_item_\".concat(index),\n          item: item,\n          handleCheckChange: _this2.handleCheckChange,\n          isSelected: loading ? selectedItems.includes(item.id) : false,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 19\n          }\n        });\n      }) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"loading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 17\n        }\n      })))), loading && /*#__PURE__*/React.createElement(TodoApplicationMenu, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(AddNewTodoModal, {\n        toggleModal: this.toggleModal,\n        modalOpen: modalOpen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return TodoApp;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var todoApp = _ref.todoApp;\n  return {\n    todoApp: todoApp\n  };\n};\n\nexport default injectIntl(connect(mapStateToProps, {\n  getTodoList: getTodoList,\n  getTodoListWithOrder: getTodoListWithOrder,\n  getTodoListSearch: getTodoListSearch,\n  selectedTodoItemsChange: selectedTodoItemsChange\n})(TodoApp));","map":{"version":3,"sources":["C:/Users/Hamed/Desktop/Gogo-React/src/views/app/applications/todo.js"],"names":["React","Component","Fragment","Row","Button","UncontrolledDropdown","DropdownToggle","DropdownItem","DropdownMenu","Collapse","ButtonDropdown","CustomInput","injectIntl","connect","IntlMessages","Colxx","Separator","Breadcrumb","getTodoList","getTodoListWithOrder","getTodoListSearch","selectedTodoItemsChange","TodoListItem","AddNewTodoModal","TodoApplicationMenu","TodoApp","props","toggleDisplayOptions","setState","displayOptionsIsOpen","state","toggleModal","modalOpen","toggleSplit","prevState","dropdownSplitOpen","changeOrderBy","column","handleKeyPress","e","key","target","value","handleCheckChange","event","id","lastChecked","selectedItems","Object","assign","todoApp","includes","filter","x","push","shiftKey","items","todoItems","start","getIndex","end","slice","Math","min","max","map","item","Array","from","Set","handleChangeSelectAll","loading","length","arr","prop","i","searchKeyword","orderColumn","orderColumns","messages","intl","match","label","o","index","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport {\r\n  Row,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  Collapse,\r\n  ButtonDropdown,\r\n  CustomInput\r\n} from \"reactstrap\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport IntlMessages from \"../../../helpers/IntlMessages\";\r\nimport { Colxx, Separator } from \"../../../components/common/CustomBootstrap\";\r\nimport Breadcrumb from \"../../../containers/navs/Breadcrumb\";\r\n\r\nimport {\r\n  getTodoList,\r\n  getTodoListWithOrder,\r\n  getTodoListSearch,\r\n  selectedTodoItemsChange\r\n} from \"../../../redux/actions\";\r\nimport TodoListItem from \"../../../components/applications/TodoListItem\";\r\nimport AddNewTodoModal from \"../../../containers/applications/AddNewTodoModal\";\r\nimport TodoApplicationMenu from \"../../../containers/applications/TodoApplicationMenu\";\r\n\r\nclass TodoApp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      dropdownSplitOpen: false,\r\n      modalOpen: false,\r\n      lastChecked: null,\r\n\r\n      displayOptionsIsOpen: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getTodoList();\r\n  }\r\n\r\n  toggleDisplayOptions = () => {\r\n    this.setState({ displayOptionsIsOpen: !this.state.displayOptionsIsOpen });\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState({\r\n      modalOpen: !this.state.modalOpen\r\n    });\r\n  };\r\n\r\n  toggleSplit = () => {\r\n    this.setState(prevState => ({\r\n      dropdownSplitOpen: !prevState.dropdownSplitOpen\r\n    }));\r\n  };\r\n\r\n  changeOrderBy = column => {\r\n    this.props.getTodoListWithOrder(column);\r\n  };\r\n\r\n  handleKeyPress = e => {\r\n    if (e.key === \"Enter\") {\r\n      this.props.getTodoListSearch(e.target.value);\r\n    }\r\n  };\r\n\r\n  handleCheckChange = (event, id) => {\r\n    if (this.state.lastChecked == null) {\r\n      this.setState({\r\n        lastChecked: id\r\n      });\r\n    }\r\n\r\n    let selectedItems = Object.assign([], this.props.todoApp.selectedItems);\r\n    if (selectedItems.includes(id)) {\r\n      selectedItems = selectedItems.filter(x => x !== id);\r\n    } else {\r\n      selectedItems.push(id);\r\n    }\r\n    this.props.selectedTodoItemsChange(selectedItems);\r\n\r\n    if (event.shiftKey) {\r\n      var items = this.props.todoApp.todoItems;\r\n      var start = this.getIndex(id, items, \"id\");\r\n      var end = this.getIndex(this.state.lastChecked, items, \"id\");\r\n      items = items.slice(Math.min(start, end), Math.max(start, end) + 1);\r\n      selectedItems.push(\r\n        ...items.map(item => {\r\n          return item.id;\r\n        })\r\n      );\r\n      selectedItems = Array.from(new Set(selectedItems));\r\n      this.props.selectedTodoItemsChange(selectedItems);\r\n    }\r\n    return;\r\n  };\r\n\r\n  handleChangeSelectAll = () => {\r\n    if (this.props.todoApp.loading) {\r\n      if (\r\n        this.props.todoApp.selectedItems.length >=\r\n        this.props.todoApp.todoItems.length\r\n      ) {\r\n        this.props.selectedTodoItemsChange([]);\r\n      } else {\r\n        this.props.selectedTodoItemsChange(\r\n          this.props.todoApp.todoItems.map(x => x.id)\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  getIndex(value, arr, prop) {\r\n    for (var i = 0; i < arr.length; i++) {\r\n      if (arr[i][prop] === value) {\r\n        return i;\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      todoItems,\r\n      searchKeyword,\r\n      loading,\r\n      orderColumn,\r\n      orderColumns,\r\n      selectedItems\r\n    } = this.props.todoApp;\r\n\r\n    const { messages } = this.props.intl;\r\n\r\n    const { modalOpen } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <Row className=\"app-row survey-app\">\r\n          <Colxx xxs=\"12\">\r\n            <div className=\"mb-2\">\r\n              <h1>\r\n                <IntlMessages id=\"menu.todo\" />\r\n              </h1>\r\n              {loading && (\r\n                <div className=\"text-zero top-right-button-container\">\r\n                  <Button\r\n                    color=\"primary\"\r\n                    size=\"lg\"\r\n                    className=\"top-right-button\"\r\n                    onClick={this.toggleModal}\r\n                  >\r\n                    <IntlMessages id=\"todo.add-new\" />\r\n                  </Button>{\" \"}\r\n                  <ButtonDropdown\r\n                    isOpen={this.state.dropdownSplitOpen}\r\n                    toggle={this.toggleSplit}\r\n                  >\r\n                    <div className=\"btn btn-primary btn-lg pl-4 pr-0 check-button check-all\">\r\n                      <CustomInput\r\n                        className=\"custom-checkbox mb-0 d-inline-block\"\r\n                        type=\"checkbox\"\r\n                        id=\"checkAll\"\r\n                        checked={\r\n                          selectedItems.length >= todoItems.length\r\n                        }\r\n                        onClick={() => this.handleChangeSelectAll()}\r\n                        onChange={() => this.handleChangeSelectAll()}\r\n                        label={\r\n                          <span\r\n                            className={`custom-control-label ${\r\n                              selectedItems.length > 0 &&\r\n                              selectedItems.length < todoItems.length\r\n                                ? \"indeterminate\"\r\n                                : \"\"\r\n                            }`}\r\n                          />\r\n                        }\r\n                      />\r\n                    </div>\r\n                    <DropdownToggle\r\n                      caret\r\n                      color=\"primary\"\r\n                      className=\"dropdown-toggle-split btn-lg\"\r\n                    />\r\n                    <DropdownMenu right>\r\n                      <DropdownItem>\r\n                        <IntlMessages id=\"todo.action\" />\r\n                      </DropdownItem>\r\n                      <DropdownItem>\r\n                        <IntlMessages id=\"todo.another-action\" />\r\n                      </DropdownItem>\r\n                    </DropdownMenu>\r\n                  </ButtonDropdown>\r\n                </div>\r\n              )}\r\n              <Breadcrumb match={this.props.match} />\r\n            </div>\r\n\r\n            <div className=\"mb-2\">\r\n              <Button\r\n                color=\"empty\"\r\n                className=\"pt-0 pl-0 d-inline-block d-md-none\"\r\n                onClick={this.toggleDisplayOptions}>\r\n                <IntlMessages id=\"todo.display-options\" />{\" \"}\r\n                <i className=\"simple-icon-arrow-down align-middle\" />\r\n              </Button>\r\n              <Collapse\r\n                id=\"displayOptions\"\r\n                className=\"d-md-block\"\r\n                isOpen={this.state.displayOptionsIsOpen}>\r\n                <div className=\"d-block mb-2 d-md-inline-block\">\r\n                  <UncontrolledDropdown className=\"mr-1 float-md-left btn-group mb-1\">\r\n                    <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\r\n                      <IntlMessages id=\"todo.orderby\" />\r\n                      {orderColumn ? orderColumn.label : \"\"}\r\n                    </DropdownToggle>\r\n                    <DropdownMenu>\r\n                      {orderColumns.map((o, index) => {\r\n                        return (\r\n                          <DropdownItem\r\n                            key={index}\r\n                            onClick={() => this.changeOrderBy(o.column)}\r\n                          >\r\n                            {o.label}\r\n                          </DropdownItem>\r\n                        );\r\n                      })}\r\n                    </DropdownMenu>\r\n                  </UncontrolledDropdown>\r\n                  <div className=\"search-sm d-inline-block float-md-left mr-1 mb-1 align-top\">\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"keyword\"\r\n                      id=\"search\"\r\n                      placeholder={messages[\"menu.search\"]}\r\n                      defaultValue={searchKeyword}\r\n                      onKeyPress={e => this.handleKeyPress(e)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Collapse>\r\n            </div>\r\n            <Separator className=\"mb-5\" />\r\n            <Row>\r\n              {loading ? (\r\n                todoItems.map((item, index) => (\r\n                  <TodoListItem\r\n                    key={`todo_item_${index}`}\r\n                    item={item}\r\n                    handleCheckChange={this.handleCheckChange}\r\n                    isSelected={\r\n                      loading ? selectedItems.includes(item.id) : false\r\n                    }\r\n                  />\r\n                ))\r\n              ) : (\r\n                <div className=\"loading\" />\r\n              )}\r\n            </Row>\r\n          </Colxx>\r\n        </Row>\r\n        {loading && <TodoApplicationMenu />}\r\n        <AddNewTodoModal toggleModal={this.toggleModal} modalOpen={modalOpen} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = ({ todoApp }) => {\r\n  return {\r\n    todoApp\r\n  };\r\n};\r\nexport default injectIntl(\r\n  connect(\r\n    mapStateToProps,\r\n    {\r\n      getTodoList,\r\n      getTodoListWithOrder,\r\n      getTodoListSearch,\r\n      selectedTodoItemsChange\r\n    }\r\n  )(TodoApp)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}