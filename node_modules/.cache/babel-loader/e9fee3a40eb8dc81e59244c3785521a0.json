{"ast":null,"code":"import _objectSpread from \"E:\\\\Developing Project\\\\Project - Pro\\\\Recent Projects\\\\026 - Daneshgah Magazi (New)\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"E:\\\\Developing Project\\\\Project - Pro\\\\Recent Projects\\\\026 - Daneshgah Magazi (New)\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Developing Project\\\\Project - Pro\\\\Recent Projects\\\\026 - Daneshgah Magazi (New)\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"E:\\\\Developing Project\\\\Project - Pro\\\\Recent Projects\\\\026 - Daneshgah Magazi (New)\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"E:\\\\Developing Project\\\\Project - Pro\\\\Recent Projects\\\\026 - Daneshgah Magazi (New)\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\Developing Project\\\\Project - Pro\\\\Recent Projects\\\\026 - Daneshgah Magazi (New)\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\Developing Project\\\\Project - Pro\\\\Recent Projects\\\\026 - Daneshgah Magazi (New)\\\\src\\\\containers\\\\form-validations\\\\FormikCustomWithTopLabels.js\";\nimport React, { Component } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport { FormikReactSelect, FormikTagsInput, FormikDatePicker } from \"./FormikFields\";\nimport { Row, Card, CardBody, FormGroup, Label, Button, CardTitle } from \"reactstrap\";\nimport IntlMessages from \"../../helpers/IntlMessages\";\nimport { Colxx } from \"../../components/common/CustomBootstrap\";\nvar SignupSchema = Yup.object().shape({\n  email: Yup.string().email(\"Invalid email address\").required(\"Email is required!\"),\n  password: Yup.string().required(\"Password is required!\"),\n  tags: Yup.array().min(3, \"Pick at least 3 tags\").required(\"At least one tag is required\"),\n  date: Yup.date().nullable().required(\"Date required\"),\n  state: Yup.object().shape({\n    label: Yup.string().required(),\n    value: Yup.string().required()\n  }).nullable().required(\"State is required!\")\n});\nvar options = [{\n  value: \"food\",\n  label: \"Food\"\n}, {\n  value: \"beingfabulous\",\n  label: \"Being Fabulous\",\n  disabled: true\n}, {\n  value: \"reasonml\",\n  label: \"ReasonML\"\n}, {\n  value: \"unicorns\",\n  label: \"Unicorns\"\n}, {\n  value: \"kittens\",\n  label: \"Kittens\"\n}];\n\nvar FormikCustomWithTopLabels = /*#__PURE__*/function (_Component) {\n  _inherits(FormikCustomWithTopLabels, _Component);\n\n  var _super = _createSuper(FormikCustomWithTopLabels);\n\n  function FormikCustomWithTopLabels(props) {\n    var _this;\n\n    _classCallCheck(this, FormikCustomWithTopLabels);\n\n    _this = _super.call(this, props);\n\n    _this.handleSubmit = function (values, _ref) {\n      var setSubmitting = _ref.setSubmitting;\n\n      var payload = _objectSpread({}, values, {\n        state: values.state.value\n      });\n\n      setTimeout(function () {\n        console.log(JSON.stringify(payload, null, 2));\n        setSubmitting(false);\n      }, 1000);\n    };\n\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(FormikCustomWithTopLabels, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Colxx, {\n        xxs: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"forms.top-labels-over-line\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(Formik, {\n        initialValues: {\n          email: \"test@test.com\",\n          password: \"\",\n          tags: [],\n          date: null,\n          state: {\n            value: \"reasonml\",\n            label: \"ReasonML\"\n          }\n        },\n        validationSchema: SignupSchema,\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      }, function (_ref2) {\n        var handleSubmit = _ref2.handleSubmit,\n            setFieldValue = _ref2.setFieldValue,\n            setFieldTouched = _ref2.setFieldTouched,\n            handleChange = _ref2.handleChange,\n            handleBlur = _ref2.handleBlur,\n            values = _ref2.values,\n            errors = _ref2.errors,\n            touched = _ref2.touched,\n            isSubmitting = _ref2.isSubmitting;\n        return /*#__PURE__*/React.createElement(Form, {\n          className: \"av-tooltip tooltip-label-bottom\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          className: \"form-group has-float-label\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"forms.email\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 27\n          }\n        })), /*#__PURE__*/React.createElement(Field, {\n          className: \"form-control\",\n          name: \"email\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }\n        }), errors.email && touched.email ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"invalid-feedback d-block\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 27\n          }\n        }, errors.email) : null), /*#__PURE__*/React.createElement(FormGroup, {\n          className: \"form-group has-float-label\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"forms.password\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 27\n          }\n        })), /*#__PURE__*/React.createElement(Field, {\n          className: \"form-control\",\n          name: \"password\",\n          type: \"password\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }\n        }), errors.password && touched.password ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"invalid-feedback d-block\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 27\n          }\n        }, errors.password) : null), /*#__PURE__*/React.createElement(FormGroup, {\n          className: \"form-group has-float-label\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          className: \"d-block\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"form-components.tags\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 27\n          }\n        })), /*#__PURE__*/React.createElement(FormikTagsInput, {\n          name: \"tags\",\n          value: values.tags,\n          onChange: setFieldValue,\n          onBlur: setFieldTouched,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }\n        }), errors.tags && touched.tags ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"invalid-feedback d-block\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 27\n          }\n        }, errors.tags) : null), /*#__PURE__*/React.createElement(FormGroup, {\n          className: \"form-group has-float-label\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          className: \"d-block\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"form-components.date\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 27\n          }\n        })), /*#__PURE__*/React.createElement(FormikDatePicker, {\n          name: \"date\",\n          value: values.date,\n          onChange: setFieldValue,\n          onBlur: setFieldTouched,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }\n        }), errors.date && touched.date ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"invalid-feedback d-block\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 27\n          }\n        }, errors.date) : null), /*#__PURE__*/React.createElement(FormGroup, {\n          className: \"form-group has-float-label\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"forms.state\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 27\n          }\n        })), /*#__PURE__*/React.createElement(FormikReactSelect, {\n          name: \"state\",\n          id: \"state\",\n          value: values.state,\n          options: options,\n          onChange: setFieldValue,\n          onBlur: setFieldTouched,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }\n        }), errors.state && touched.state ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"invalid-feedback d-block\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 27\n          }\n        }, errors.state) : null), /*#__PURE__*/React.createElement(Button, {\n          color: \"primary\",\n          type: \"submit\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 23\n          }\n        }, \"Submit\"));\n      }))))), /*#__PURE__*/React.createElement(Row, {\n        className: \"mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Colxx, {\n        xxs: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"forms.top-labels-in-input\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(Formik, {\n        initialValues: {\n          email: \"test@test.com\",\n          password: \"\",\n          tags: [],\n          date: null,\n          state: {\n            value: \"reasonml\",\n            label: \"ReasonML\"\n          }\n        },\n        validationSchema: SignupSchema,\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 17\n        }\n      }, function (_ref3) {\n        var handleSubmit = _ref3.handleSubmit,\n            setFieldValue = _ref3.setFieldValue,\n            setFieldTouched = _ref3.setFieldTouched,\n            handleChange = _ref3.handleChange,\n            handleBlur = _ref3.handleBlur,\n            values = _ref3.values,\n            errors = _ref3.errors,\n            touched = _ref3.touched,\n            isSubmitting = _ref3.isSubmitting;\n        return /*#__PURE__*/React.createElement(Form, {\n          className: \"av-tooltip tooltip-label-bottom\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          className: \"form-group has-top-label\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"forms.email-u\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 27\n          }\n        })), /*#__PURE__*/React.createElement(Field, {\n          className: \"form-control\",\n          name: \"email\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }\n        }), errors.email && touched.email ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"invalid-feedback d-block\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 27\n          }\n        }, errors.email) : null), /*#__PURE__*/React.createElement(FormGroup, {\n          className: \"form-group has-top-label\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"forms.password-u\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 27\n          }\n        })), /*#__PURE__*/React.createElement(Field, {\n          className: \"form-control\",\n          name: \"password\",\n          type: \"password\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }\n        }), errors.password && touched.password ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"invalid-feedback d-block\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 27\n          }\n        }, errors.password) : null), /*#__PURE__*/React.createElement(FormGroup, {\n          className: \"form-group has-top-label\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          className: \"d-block\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"forms.tags-u\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 27\n          }\n        })), /*#__PURE__*/React.createElement(FormikTagsInput, {\n          name: \"tags\",\n          value: values.tags,\n          onChange: setFieldValue,\n          onBlur: setFieldTouched,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 25\n          }\n        }), errors.tags && touched.tags ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"invalid-feedback d-block\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 27\n          }\n        }, errors.tags) : null), /*#__PURE__*/React.createElement(FormGroup, {\n          className: \"form-group has-top-label\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          className: \"d-block\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"forms.date-u\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 27\n          }\n        })), /*#__PURE__*/React.createElement(FormikDatePicker, {\n          name: \"date\",\n          value: values.date,\n          onChange: setFieldValue,\n          onBlur: setFieldTouched,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 25\n          }\n        }), errors.date && touched.date ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"invalid-feedback d-block\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 27\n          }\n        }, errors.date) : null), /*#__PURE__*/React.createElement(FormGroup, {\n          className: \"form-group has-top-label\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"forms.state-u\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 27\n          }\n        })), /*#__PURE__*/React.createElement(FormikReactSelect, {\n          name: \"state\",\n          id: \"state\",\n          value: values.state,\n          options: options,\n          onChange: setFieldValue,\n          onBlur: setFieldTouched,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 25\n          }\n        }), errors.state && touched.state ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"invalid-feedback d-block\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 27\n          }\n        }, errors.state) : null), /*#__PURE__*/React.createElement(Button, {\n          color: \"primary\",\n          type: \"submit\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 23\n          }\n        }, \"Submit\"));\n      }))))));\n    }\n  }]);\n\n  return FormikCustomWithTopLabels;\n}(Component);\n\nexport default FormikCustomWithTopLabels;","map":{"version":3,"sources":["E:/Developing Project/Project - Pro/Recent Projects/026 - Daneshgah Magazi (New)/src/containers/form-validations/FormikCustomWithTopLabels.js"],"names":["React","Component","Formik","Form","Field","Yup","FormikReactSelect","FormikTagsInput","FormikDatePicker","Row","Card","CardBody","FormGroup","Label","Button","CardTitle","IntlMessages","Colxx","SignupSchema","object","shape","email","string","required","password","tags","array","min","date","nullable","state","label","value","options","disabled","FormikCustomWithTopLabels","props","handleSubmit","values","setSubmitting","payload","setTimeout","console","log","JSON","stringify","bind","setFieldValue","setFieldTouched","handleChange","handleBlur","errors","touched","isSubmitting"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  FormikReactSelect,\r\n  FormikTagsInput,\r\n  FormikDatePicker\r\n} from \"./FormikFields\";\r\nimport {\r\n  Row,\r\n  Card,\r\n  CardBody,\r\n  FormGroup,\r\n  Label,\r\n  Button,\r\n  CardTitle\r\n} from \"reactstrap\";\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\nimport { Colxx } from \"../../components/common/CustomBootstrap\";\r\n\r\nconst SignupSchema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .email(\"Invalid email address\")\r\n    .required(\"Email is required!\"),\r\n  password: Yup.string().required(\"Password is required!\"),\r\n  tags: Yup.array()\r\n    .min(3, \"Pick at least 3 tags\")\r\n    .required(\"At least one tag is required\"),\r\n  date: Yup.date()\r\n    .nullable()\r\n    .required(\"Date required\"),\r\n  state: Yup.object()\r\n    .shape({\r\n      label: Yup.string().required(),\r\n      value: Yup.string().required()\r\n    })\r\n    .nullable()\r\n    .required(\"State is required!\")\r\n});\r\n\r\nconst options = [\r\n  { value: \"food\", label: \"Food\" },\r\n  { value: \"beingfabulous\", label: \"Being Fabulous\", disabled: true },\r\n  { value: \"reasonml\", label: \"ReasonML\" },\r\n  { value: \"unicorns\", label: \"Unicorns\" },\r\n  { value: \"kittens\", label: \"Kittens\" }\r\n];\r\n\r\nclass FormikCustomWithTopLabels extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit = (values, { setSubmitting }) => {\r\n    const payload = {\r\n      ...values,\r\n      state: values.state.value\r\n    };\r\n    setTimeout(() => {\r\n      console.log(JSON.stringify(payload, null, 2));\r\n      setSubmitting(false);\r\n    }, 1000);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row className=\"mb-4\">\r\n          <Colxx xxs=\"12\">\r\n            <Card>\r\n              <CardBody>\r\n                <CardTitle>\r\n                  <IntlMessages id=\"forms.top-labels-over-line\" />\r\n                </CardTitle>\r\n\r\n                <Formik\r\n                  initialValues={{\r\n                    email: \"test@test.com\",\r\n                    password: \"\",\r\n                    tags: [],\r\n                    date: null,\r\n                    state: { value: \"reasonml\", label: \"ReasonML\" }\r\n                  }}\r\n                  validationSchema={SignupSchema}\r\n                  onSubmit={this.handleSubmit}\r\n                >\r\n                  {({\r\n                    handleSubmit,\r\n                    setFieldValue,\r\n                    setFieldTouched,\r\n                    handleChange,\r\n                    handleBlur,\r\n                    values,\r\n                    errors,\r\n                    touched,\r\n                    isSubmitting\r\n                  }) => (\r\n                    <Form className=\"av-tooltip tooltip-label-bottom\">\r\n                      <FormGroup className=\"form-group has-float-label\">\r\n                        <Label>\r\n                          <IntlMessages id=\"forms.email\" />\r\n                        </Label>\r\n                        <Field className=\"form-control\" name=\"email\" />\r\n                        {errors.email && touched.email ? (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.email}\r\n                          </div>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                      <FormGroup className=\"form-group has-float-label\">\r\n                        <Label>\r\n                          <IntlMessages id=\"forms.password\" />\r\n                        </Label>\r\n                        <Field\r\n                          className=\"form-control\"\r\n                          name=\"password\"\r\n                          type=\"password\"\r\n                        />\r\n                        {errors.password && touched.password ? (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.password}\r\n                          </div>\r\n                        ) : null}\r\n                      </FormGroup>\r\n\r\n                      <FormGroup className=\"form-group has-float-label\">\r\n                        <Label className=\"d-block\">\r\n                          <IntlMessages id=\"form-components.tags\" />\r\n                        </Label>\r\n                        <FormikTagsInput\r\n                          name=\"tags\"\r\n                          value={values.tags}\r\n                          onChange={setFieldValue}\r\n                          onBlur={setFieldTouched}\r\n                        />\r\n\r\n                        {errors.tags && touched.tags ? (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.tags}\r\n                          </div>\r\n                        ) : null}\r\n                      </FormGroup>\r\n\r\n                      <FormGroup className=\"form-group has-float-label\">\r\n                        <Label className=\"d-block\">\r\n                          <IntlMessages id=\"form-components.date\" />\r\n                        </Label>\r\n                        <FormikDatePicker\r\n                          name=\"date\"\r\n                          value={values.date}\r\n                          onChange={setFieldValue}\r\n                          onBlur={setFieldTouched}\r\n                        />\r\n                        {errors.date && touched.date ? (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.date}\r\n                          </div>\r\n                        ) : null}\r\n                      </FormGroup>\r\n\r\n                      <FormGroup className=\"form-group has-float-label\">\r\n                        <Label>\r\n                          <IntlMessages id=\"forms.state\" />\r\n                        </Label>\r\n                        <FormikReactSelect\r\n                          name=\"state\"\r\n                          id=\"state\"\r\n                          value={values.state}\r\n                          options={options}\r\n                          onChange={setFieldValue}\r\n                          onBlur={setFieldTouched}\r\n                        />\r\n                        {errors.state && touched.state ? (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.state}\r\n                          </div>\r\n                        ) : null}\r\n                      </FormGroup>\r\n\r\n                      <Button color=\"primary\" type=\"submit\">\r\n                        Submit\r\n                      </Button>\r\n                    </Form>\r\n                  )}\r\n                </Formik>\r\n              </CardBody>\r\n            </Card>\r\n          </Colxx>\r\n        </Row>\r\n\r\n        <Row className=\"mb-4\">\r\n          <Colxx xxs=\"12\">\r\n            <Card>\r\n              <CardBody>\r\n                <CardTitle>\r\n                  <IntlMessages id=\"forms.top-labels-in-input\" />\r\n                </CardTitle>\r\n\r\n                <Formik\r\n                  initialValues={{\r\n                    email: \"test@test.com\",\r\n                    password: \"\",\r\n                    tags: [],\r\n                    date: null,\r\n                    state: { value: \"reasonml\", label: \"ReasonML\" }\r\n                  }}\r\n                  validationSchema={SignupSchema}\r\n                  onSubmit={this.handleSubmit}\r\n                >\r\n                  {({\r\n                    handleSubmit,\r\n                    setFieldValue,\r\n                    setFieldTouched,\r\n                    handleChange,\r\n                    handleBlur,\r\n                    values,\r\n                    errors,\r\n                    touched,\r\n                    isSubmitting\r\n                  }) => (\r\n                    <Form className=\"av-tooltip tooltip-label-bottom\">\r\n                      <FormGroup className=\"form-group has-top-label\">\r\n                        <Label>\r\n                          <IntlMessages id=\"forms.email-u\" />\r\n                        </Label>\r\n                        <Field className=\"form-control\" name=\"email\" />\r\n                        {errors.email && touched.email ? (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.email}\r\n                          </div>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                      <FormGroup className=\"form-group has-top-label\">\r\n                        <Label>\r\n                          <IntlMessages id=\"forms.password-u\" />\r\n                        </Label>\r\n                        <Field\r\n                          className=\"form-control\"\r\n                          name=\"password\"\r\n                          type=\"password\"\r\n                        />\r\n                        {errors.password && touched.password ? (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.password}\r\n                          </div>\r\n                        ) : null}\r\n                      </FormGroup>\r\n\r\n                      <FormGroup className=\"form-group has-top-label\">\r\n                        <Label className=\"d-block\">\r\n                          <IntlMessages id=\"forms.tags-u\" />\r\n                        </Label>\r\n                        <FormikTagsInput\r\n                          name=\"tags\"\r\n                          value={values.tags}\r\n                          onChange={setFieldValue}\r\n                          onBlur={setFieldTouched}\r\n                        />\r\n\r\n                        {errors.tags && touched.tags ? (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.tags}\r\n                          </div>\r\n                        ) : null}\r\n                      </FormGroup>\r\n\r\n                      <FormGroup className=\"form-group has-top-label\">\r\n                        <Label className=\"d-block\">\r\n                          <IntlMessages id=\"forms.date-u\" />\r\n                        </Label>\r\n                        <FormikDatePicker\r\n                          name=\"date\"\r\n                          value={values.date}\r\n                          onChange={setFieldValue}\r\n                          onBlur={setFieldTouched}\r\n                        />\r\n                        {errors.date && touched.date ? (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.date}\r\n                          </div>\r\n                        ) : null}\r\n                      </FormGroup>\r\n\r\n                      <FormGroup className=\"form-group has-top-label\">\r\n                        <Label>\r\n                          <IntlMessages id=\"forms.state-u\" />\r\n                        </Label>\r\n                        <FormikReactSelect\r\n                          name=\"state\"\r\n                          id=\"state\"\r\n                          value={values.state}\r\n                          options={options}\r\n                          onChange={setFieldValue}\r\n                          onBlur={setFieldTouched}\r\n                        />\r\n                        {errors.state && touched.state ? (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.state}\r\n                          </div>\r\n                        ) : null}\r\n                      </FormGroup>\r\n\r\n                      <Button color=\"primary\" type=\"submit\">\r\n                        Submit\r\n                      </Button>\r\n                    </Form>\r\n                  )}\r\n                </Formik>\r\n              </CardBody>\r\n            </Card>\r\n          </Colxx>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default FormikCustomWithTopLabels;\r\n"]},"metadata":{},"sourceType":"module"}