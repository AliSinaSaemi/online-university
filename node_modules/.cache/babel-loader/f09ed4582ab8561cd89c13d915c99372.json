{"ast":null,"code":"ace.define(\"ace/mode/textile_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var TextileHighlightRules = function TextileHighlightRules() {\n    this.$rules = {\n      \"start\": [{\n        token: function token(value) {\n          if (value.charAt(0) == \"h\") return \"markup.heading.\" + value.charAt(1);else return \"markup.heading\";\n        },\n        regex: \"h1|h2|h3|h4|h5|h6|bq|p|bc|pre\",\n        next: \"blocktag\"\n      }, {\n        token: \"keyword\",\n        regex: \"[\\\\*]+|[#]+\"\n      }, {\n        token: \"text\",\n        regex: \".+\"\n      }],\n      \"blocktag\": [{\n        token: \"keyword\",\n        regex: \"\\\\. \",\n        next: \"start\"\n      }, {\n        token: \"keyword\",\n        regex: \"\\\\(\",\n        next: \"blocktagproperties\"\n      }],\n      \"blocktagproperties\": [{\n        token: \"keyword\",\n        regex: \"\\\\)\",\n        next: \"blocktag\"\n      }, {\n        token: \"string\",\n        regex: \"[a-zA-Z0-9\\\\-_]+\"\n      }, {\n        token: \"keyword\",\n        regex: \"#\"\n      }]\n    };\n  };\n\n  oop.inherits(TextileHighlightRules, TextHighlightRules);\n  exports.TextileHighlightRules = TextileHighlightRules;\n});\nace.define(\"ace/mode/matching_brace_outdent\", [\"require\", \"exports\", \"module\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var Range = require(\"../range\").Range;\n\n  var MatchingBraceOutdent = function MatchingBraceOutdent() {};\n\n  (function () {\n    this.checkOutdent = function (line, input) {\n      if (!/^\\s+$/.test(line)) return false;\n      return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function (doc, row) {\n      var line = doc.getLine(row);\n      var match = line.match(/^(\\s*\\})/);\n      if (!match) return 0;\n      var column = match[1].length;\n      var openBracePos = doc.findMatchingBracket({\n        row: row,\n        column: column\n      });\n      if (!openBracePos || openBracePos.row == row) return 0;\n      var indent = this.$getIndent(doc.getLine(openBracePos.row));\n      doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n\n    this.$getIndent = function (line) {\n      return line.match(/^\\s*/)[0];\n    };\n  }).call(MatchingBraceOutdent.prototype);\n  exports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\nace.define(\"ace/mode/textile\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/textile_highlight_rules\", \"ace/mode/matching_brace_outdent\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextMode = require(\"./text\").Mode;\n\n  var TextileHighlightRules = require(\"./textile_highlight_rules\").TextileHighlightRules;\n\n  var MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\n\n  var Mode = function Mode() {\n    this.HighlightRules = TextileHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.type = \"text\";\n\n    this.getNextLineIndent = function (state, line, tab) {\n      if (state == \"intag\") return tab;\n      return \"\";\n    };\n\n    this.checkOutdent = function (state, line, input) {\n      return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function (state, doc, row) {\n      this.$outdent.autoOutdent(doc, row);\n    };\n\n    this.$id = \"ace/mode/textile\";\n    this.snippetFileId = \"ace/snippets/textile\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n\n(function () {\n  ace.require([\"ace/mode/textile\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":null,"metadata":{},"sourceType":"script"}