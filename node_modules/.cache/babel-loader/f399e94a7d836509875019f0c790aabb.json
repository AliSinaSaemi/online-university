{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Hamed\\\\Desktop\\\\Gogo-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Hamed\\\\Desktop\\\\Gogo-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Hamed\\\\Desktop\\\\Gogo-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\Hamed\\\\Desktop\\\\Gogo-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Hamed\\\\Desktop\\\\Gogo-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Hamed\\\\Desktop\\\\Gogo-React\\\\src\\\\containers\\\\form-validations\\\\FormikBasicFormLevel.js\";\nimport React, { Component } from \"react\";\nimport { Formik, Form, Field } from 'formik';\nimport { Row, Card, CardBody, FormGroup, Label, Button } from \"reactstrap\";\nimport { Colxx } from \"../../components/common/CustomBootstrap\";\n\nvar FormikBasicFormLevel = /*#__PURE__*/function (_Component) {\n  _inherits(FormikBasicFormLevel, _Component);\n\n  var _super = _createSuper(FormikBasicFormLevel);\n\n  function FormikBasicFormLevel(props) {\n    var _this;\n\n    _classCallCheck(this, FormikBasicFormLevel);\n\n    _this = _super.call(this, props);\n    _this.validate = _this.validate.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(FormikBasicFormLevel, [{\n    key: \"handleSubmit\",\n    value: function handleSubmit(values) {\n      console.log(values);\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(values) {\n      var errors = {};\n\n      if (!values.email) {\n        errors.email = 'Please enter your email address';\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = 'Invalid email address';\n      }\n\n      if (!values.name) {\n        errors.name = 'Please enter your name';\n      } else if (values.name === 'admin') {\n        errors.name = 'Value must be longer than 2 characters';\n      }\n\n      return errors;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(Row, {\n        className: \"mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Colxx, {\n        xxs: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        className: \"mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }\n      }, \"Form Level Validation\"), /*#__PURE__*/React.createElement(Formik, {\n        validate: this.validate,\n        initialValues: {\n          name: '',\n          email: ''\n        },\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }\n      }, function (_ref) {\n        var errors = _ref.errors,\n            touched = _ref.touched,\n            isValidating = _ref.isValidating;\n        return /*#__PURE__*/React.createElement(Form, {\n          className: \"av-tooltip tooltip-label-right\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 45\n          }\n        }, \"Name\"), /*#__PURE__*/React.createElement(Field, {\n          className: \"form-control\",\n          name: \"name\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 45\n          }\n        }), errors.name && touched.name && /*#__PURE__*/React.createElement(\"div\", {\n          className: \"invalid-feedback d-block\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 77\n          }\n        }, errors.name)), /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 45\n          }\n        }, \"Email\"), /*#__PURE__*/React.createElement(Field, {\n          className: \"form-control\",\n          name: \"email\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 45\n          }\n        }), errors.email && touched.email && /*#__PURE__*/React.createElement(\"div\", {\n          className: \"invalid-feedback d-block\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 79\n          }\n        }, errors.email)), /*#__PURE__*/React.createElement(Button, {\n          color: \"primary\",\n          type: \"submit\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 41\n          }\n        }, \"Submit\"));\n      })))));\n    }\n  }]);\n\n  return FormikBasicFormLevel;\n}(Component);\n\nexport default FormikBasicFormLevel;","map":{"version":3,"sources":["C:/Users/Hamed/Desktop/Gogo-React/src/containers/form-validations/FormikBasicFormLevel.js"],"names":["React","Component","Formik","Form","Field","Row","Card","CardBody","FormGroup","Label","Button","Colxx","FormikBasicFormLevel","props","validate","bind","handleSubmit","values","console","log","errors","email","test","name","touched","isValidating"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Formik, Form, Field } from 'formik';\r\n\r\nimport {\r\n    Row,\r\n    Card,\r\n    CardBody,\r\n    FormGroup,\r\n    Label,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport { Colxx } from \"../../components/common/CustomBootstrap\";\r\n\r\nclass FormikBasicFormLevel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.validate = this.validate.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log(values);\r\n    }\r\n\r\n    validate(values) {\r\n        let errors = {};\r\n\r\n        if (!values.email) {\r\n            errors.email = 'Please enter your email address';\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n            errors.email = 'Invalid email address';\r\n        }\r\n\r\n        if (!values.name) {\r\n            errors.name = 'Please enter your name';\r\n        } else if (values.name === 'admin') {\r\n            errors.name = 'Value must be longer than 2 characters';\r\n        }\r\n        return errors;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Row className=\"mb-4\">\r\n                <Colxx xxs=\"12\">\r\n                    <Card>\r\n                        <CardBody>\r\n                            <h6 className=\"mb-4\">Form Level Validation</h6>\r\n                            <Formik\r\n                                validate={this.validate}\r\n                                initialValues={{\r\n                                    name: '',\r\n                                    email: '',\r\n                                }}\r\n                                onSubmit={this.handleSubmit}>\r\n                                {({ errors, touched, isValidating }) => (\r\n                                    <Form className=\"av-tooltip tooltip-label-right\">\r\n\r\n                                        <FormGroup>\r\n                                            <Label>\r\n                                                Name\r\n                                            </Label>\r\n                                            <Field className=\"form-control\" name=\"name\" />\r\n                                            {errors.name && touched.name && <div className=\"invalid-feedback d-block\">{errors.name}</div>}\r\n                                        </FormGroup>\r\n\r\n                                        <FormGroup>\r\n                                            <Label>\r\n                                                Email\r\n                                            </Label>\r\n                                            <Field className=\"form-control\" name=\"email\" />\r\n                                            {errors.email && touched.email && <div className=\"invalid-feedback d-block\">{errors.email}</div>}\r\n                                        </FormGroup>\r\n\r\n                                        <Button color=\"primary\" type=\"submit\">Submit</Button>\r\n                                    </Form>\r\n                                )}\r\n                            </Formik>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Colxx>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FormikBasicFormLevel;\r\n\r\n"]},"metadata":{},"sourceType":"module"}