{"ast":null,"code":"import _classCallCheck from \"E:\\\\Developing Project\\\\Project - Pro\\\\Recent Projects\\\\026 - Daneshgah Magazi (New)\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Developing Project\\\\Project - Pro\\\\Recent Projects\\\\026 - Daneshgah Magazi (New)\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"E:\\\\Developing Project\\\\Project - Pro\\\\Recent Projects\\\\026 - Daneshgah Magazi (New)\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\Developing Project\\\\Project - Pro\\\\Recent Projects\\\\026 - Daneshgah Magazi (New)\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\Developing Project\\\\Project - Pro\\\\Recent Projects\\\\026 - Daneshgah Magazi (New)\\\\src\\\\containers\\\\applications\\\\SurveyApplicationMenu.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { NavItem, Badge } from \"reactstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport classnames from \"classnames\";\nimport IntlMessages from \"../../helpers/IntlMessages\";\nimport ApplicationMenu from \"../../components/common/ApplicationMenu\";\nimport { getSurveyListWithFilter } from \"../../redux/actions\";\nexport var SurveyApplicationMenu = /*#__PURE__*/function (_Component) {\n  _inherits(SurveyApplicationMenu, _Component);\n\n  var _super = _createSuper(SurveyApplicationMenu);\n\n  function SurveyApplicationMenu(props) {\n    _classCallCheck(this, SurveyApplicationMenu);\n\n    return _super.call(this);\n  }\n\n  _createClass(SurveyApplicationMenu, [{\n    key: \"addFilter\",\n    value: function addFilter(column, value) {\n      this.props.getSurveyListWithFilter(column, value);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props$surveyLis = this.props.surveyListApp,\n          surveyItems = _this$props$surveyLis.surveyItems,\n          filter = _this$props$surveyLis.filter,\n          allSurveyItems = _this$props$surveyLis.allSurveyItems,\n          loading = _this$props$surveyLis.loading,\n          labels = _this$props$surveyLis.labels,\n          categories = _this$props$surveyLis.categories;\n      return /*#__PURE__*/React.createElement(ApplicationMenu, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(PerfectScrollbar, {\n        options: {\n          suppressScrollX: true,\n          wheelPropagation: false\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-muted text-small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"survey.status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }\n      }), \"Status\"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"list-unstyled mb-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(NavItem, {\n        className: classnames({\n          active: !filter\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        to: \"#\",\n        onClick: function onClick(e) {\n          return _this.addFilter(\"\", \"\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"simple-icon-reload\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"survey.all-surveys\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"float-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 19\n        }\n      }, loading && allSurveyItems.length))), /*#__PURE__*/React.createElement(NavItem, {\n        className: classnames({\n          active: filter && filter.column === \"status\" && filter.value === \"ACTIVE\"\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        to: \"#\",\n        onClick: function onClick(e) {\n          return _this.addFilter(\"status\", \"ACTIVE\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"simple-icon-refresh\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"survey.active-surveys\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"float-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 19\n        }\n      }, loading && surveyItems.filter(function (x) {\n        return x.status === \"ACTIVE\";\n      }).length))), /*#__PURE__*/React.createElement(NavItem, {\n        className: classnames({\n          active: filter && filter.column === \"status\" && filter.value === \"COMPLETED\"\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        to: \"#\",\n        onClick: function onClick(e) {\n          return _this.addFilter(\"status\", \"COMPLETED\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"simple-icon-check\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"survey.completed-surveys\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"float-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 19\n        }\n      }, loading && surveyItems.filter(function (x) {\n        return x.status === \"COMPLETED\";\n      }).length)))), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-muted text-small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"survey.categories\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"list-unstyled mb-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }\n      }, categories.map(function (c, index) {\n        return /*#__PURE__*/React.createElement(NavItem, {\n          key: index,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          onClick: function onClick(e) {\n            return _this.addFilter(\"category\", c);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"custom-control custom-radio\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"radio\",\n          className: \"custom-control-input\",\n          defaultChecked: filter && filter.column === \"category\" && filter.value === c,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(\"label\", {\n          className: \"custom-control-label\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }\n        }, c))));\n      })), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-muted text-small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"survey.labels\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }\n      }, labels.map(function (l, index) {\n        return /*#__PURE__*/React.createElement(\"p\", {\n          className: \"d-sm-inline-block mb-1\",\n          key: index,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(NavLink, {\n          to: \"#\",\n          onClick: function onClick(e) {\n            return _this.addFilter(\"label\", l.label);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Badge, {\n          className: \"mb-1\",\n          color: \"\".concat(filter && filter.column === \"label\" && filter.value === l.label ? l.color : \"outline-\" + l.color),\n          pill: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 23\n          }\n        }, l.label)));\n      })))));\n    }\n  }]);\n\n  return SurveyApplicationMenu;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var surveyListApp = _ref.surveyListApp;\n  return {\n    surveyListApp: surveyListApp\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getSurveyListWithFilter: getSurveyListWithFilter\n})(SurveyApplicationMenu);","map":{"version":3,"sources":["E:/Developing Project/Project - Pro/Recent Projects/026 - Daneshgah Magazi (New)/src/containers/applications/SurveyApplicationMenu.js"],"names":["React","Component","connect","NavItem","Badge","NavLink","PerfectScrollbar","classnames","IntlMessages","ApplicationMenu","getSurveyListWithFilter","SurveyApplicationMenu","props","column","value","surveyListApp","surveyItems","filter","allSurveyItems","loading","labels","categories","suppressScrollX","wheelPropagation","active","e","addFilter","length","x","status","map","c","index","l","label","color","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavItem, Badge } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport classnames from \"classnames\";\r\n\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\nimport ApplicationMenu from \"../../components/common/ApplicationMenu\";\r\n\r\nimport { getSurveyListWithFilter } from \"../../redux/actions\";\r\nexport class SurveyApplicationMenu extends Component {\r\n  constructor(props) {\r\n    super();\r\n  }\r\n\r\n  addFilter(column, value) {\r\n    this.props.getSurveyListWithFilter(column, value);\r\n  }\r\n  render() {\r\n    const {\r\n      surveyItems,\r\n      filter,\r\n      allSurveyItems,\r\n      loading,\r\n      labels,\r\n      categories\r\n    } = this.props.surveyListApp;\r\n\r\n    return (\r\n      <ApplicationMenu>\r\n        <PerfectScrollbar\r\n          options={{ suppressScrollX: true, wheelPropagation: false }}\r\n        >\r\n          <div className=\"p-4\">\r\n            <p className=\"text-muted text-small\">\r\n              <IntlMessages id=\"survey.status\" />\r\n              Status\r\n            </p>\r\n            <ul className=\"list-unstyled mb-5\">\r\n              <NavItem className={classnames({ active: !filter })}>\r\n                <NavLink to=\"#\" onClick={e => this.addFilter(\"\", \"\")}>\r\n                  <i className=\"simple-icon-reload\" />\r\n                  <IntlMessages id=\"survey.all-surveys\" />\r\n                  <span className=\"float-right\">\r\n                    {loading && allSurveyItems.length}\r\n                  </span>\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem\r\n                className={classnames({\r\n                  active:\r\n                    filter &&\r\n                    filter.column === \"status\" &&\r\n                    filter.value === \"ACTIVE\"\r\n                })}>\r\n                <NavLink\r\n                  to=\"#\"\r\n                  onClick={e => this.addFilter(\"status\", \"ACTIVE\")}>\r\n                  <i className=\"simple-icon-refresh\" />\r\n                  <IntlMessages id=\"survey.active-surveys\" />\r\n                  <span className=\"float-right\">\r\n                    {loading &&\r\n                      surveyItems.filter(x => x.status === \"ACTIVE\").length}\r\n                  </span>\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem\r\n                className={classnames({\r\n                  active:\r\n                    filter &&\r\n                    filter.column === \"status\" &&\r\n                    filter.value === \"COMPLETED\"\r\n                })}>\r\n                <NavLink\r\n                  to=\"#\"\r\n                  onClick={e => this.addFilter(\"status\", \"COMPLETED\")}>\r\n                  <i className=\"simple-icon-check\" />\r\n                  <IntlMessages id=\"survey.completed-surveys\" />\r\n                  <span className=\"float-right\">\r\n                    {loading &&\r\n                      surveyItems.filter(x => x.status === \"COMPLETED\").length}\r\n                  </span>\r\n                </NavLink>\r\n              </NavItem>\r\n            </ul>\r\n            <p className=\"text-muted text-small\">\r\n              <IntlMessages id=\"survey.categories\" />\r\n            </p>\r\n            <ul className=\"list-unstyled mb-5\">\r\n              {categories.map((c, index) => {\r\n                return (\r\n                  <NavItem key={index}>\r\n                    <div onClick={e => this.addFilter(\"category\", c)}>\r\n                      <div className=\"custom-control custom-radio\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          className=\"custom-control-input\"\r\n                          defaultChecked={\r\n                            filter &&\r\n                            filter.column === \"category\" &&\r\n                            filter.value === c\r\n                          }\r\n                        />\r\n                        <label className=\"custom-control-label\">{c}</label>\r\n                      </div>\r\n                    </div>\r\n                  </NavItem>\r\n                );\r\n              })}\r\n            </ul>\r\n            <p className=\"text-muted text-small\">\r\n              <IntlMessages id=\"survey.labels\" />\r\n            </p>\r\n            <div>\r\n              {labels.map((l, index) => {\r\n                return (\r\n                  <p className=\"d-sm-inline-block mb-1\" key={index}>\r\n                    <NavLink\r\n                      to=\"#\"\r\n                      onClick={e => this.addFilter(\"label\", l.label)}\r\n                    >\r\n                      <Badge\r\n                        className=\"mb-1\"\r\n                        color={`${\r\n                          filter &&\r\n                          filter.column === \"label\" &&\r\n                          filter.value === l.label\r\n                            ? l.color\r\n                            : \"outline-\" + l.color\r\n                        }`}\r\n                        pill\r\n                      >\r\n                        {l.label}\r\n                      </Badge>\r\n                    </NavLink>\r\n                  </p>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </PerfectScrollbar>\r\n      </ApplicationMenu>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = ({ surveyListApp }) => {\r\n  return {\r\n    surveyListApp\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    getSurveyListWithFilter\r\n  }\r\n)(SurveyApplicationMenu);\r\n"]},"metadata":{},"sourceType":"module"}